<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[博弈论]]></title>
    <url>%2Fposts%2F12bcd26e.html</url>
    <content type="text"><![CDATA[博弈论简介 博弈论（Game Theory），也称对策论或竞赛论 。是指研究多个个体或团队之间在特定条件制约下在对局中利用相关方的策略，而实施对应策略的学科。 它是应用数学的一个分支，既是现代数学的一个新分支，也是运筹学的一个重要学科。目前在生物学、经济学、国际关系学、计算机科学、政治学、军事战略和其他很多学科都有广泛的应用。 具有竞争或对抗性质的行为成为博弈行为。在这类行为中，参加斗争或竞争的各方各自具有不同的目标或利益。为了达到各自的目标和利益，各方必须考虑对手的各种可能的行动方案，并力图选取对自己最为有利或最为合理的方案。比如日常生活中的下棋，打牌等。博弈论就是研究博弈行为中斗争各方是否存在着最合理的行为方案，以及如何找到这个合理的行为方案的数学理论和方法。 博弈论分类1）根据参与者之间是否具有一个具有约束力的协议，博弈可分为合作博弈和非合作博弈。 有：合作博弈（合作中如何分配利益问题，使协议框架内所有参与者都满意）。 没有：非合作博弈（如何争取自己最大化利益，不考虑其它参与者利益）。 2）根据参与者选择的策略，做出决定的先后顺序，博弈可分为静态博弈和动态博弈。 静态博弈：参与人同时选择策略或者虽非同时选择，但后做出决策的行动者并不知道先行动者采取了什么策略。 动态博弈： 参与人的行动有先后顺序，且后行动者能够观察到先行动者采取策略的前提下制定自己的策略。 3）根据对其它参与者的信息掌握程度，博弈可分为完全信息博弈和不完全信息博弈。 完全信息博弈：每一位参与人对其他参与人的特征、策略空间及收益函数(也叫支付)有准确的信息。 不完全信息博弈：每一位参与人对其他参与人的特征、策略空间及收益函数信息了解的不够准确、或者不是对所有参与人的特征、策略空间及收益函数都有准确的信息。 博弈论要素一场博弈包含4个基本要素： 1.至少两人参加 2.参与者间的利益（博弈的目的） 3.策略（行动方案） 4.信息（制定策略的依据） 博弈模型(常见)囚徒博弈警方逮捕甲、乙两名嫌疑犯，但没有足够证据指控二人入罪。于是警方分开囚禁嫌疑犯，分别和二人见面，并向双方提供以下相同的选择：若一人认罪并作证检控对方（相关术语称“背叛”对方），而对方保持沉默，此人将即时获释，沉默者将判监10年。若二人都保持沉默（相关术语称互相“合作”），则二人同样判监1年。若二人都互相检举举，则二人同样判监8年。 博弈分析： 甲（认罪） 甲（沉默） 乙（认罪） 8，8 0，10 乙（沉默） 10，0 1，1 囚徒困境假定每个参与者（即“囚徒”）都是利己的，即都寻求最大自身利益，而不关心另一参与者的利益。这场博弈的纳什均衡，显然不是顾及团体利益的帕累托最优解决方案。以全体利益而言，如果两个参与者合作保持沉默，两人都只会被判刑1年，总体利益更高，结果也比两人背叛对方、判刑8年的情况较佳。但根据以上假设，二人均为理性的个人，且只追求自己个人利益。均衡状况会是两个囚徒都选择背叛，结果二人判决均比合作要高，总体利益较合作低。这就是“困境”所在。例子漂亮地证明了：非零和博弈中，帕累托最优和纳什均衡是相冲突的。 智猪博弈假设猪圈里有两头猪，一头大猪，一头小猪。 猪圈很长，一头有一踏板，另一头是饲料的出口和食槽。猪每踩一下踏板，另一边就会有相当于10份的猪食进槽，但是踩踏板以后跑到食槽所需要付出的“劳动”，加起来要消耗相当于2份的猪食。踏板和食槽分置笼子的两端，如果有一只猪去踩踏板，另一只猪就有机会抢先吃到另一边落下的食物。 博弈分析： 如果两只猪同时踩踏板，同时跑向食槽，大猪吃进7份，得益5份，小猪吃进3份，实得1份；如果大猪踩踏板后跑向食槽，这时小猪抢先，吃进4份，实得4份，大猪吃进6份，付出2份，得益4份；如果大猪等待，小猪踩踏板，大猪先吃，吃进9份，得益9份，小猪吃进1份，但是付出了2份，实得-1份；如果双方都懒得动，所得都是0。 踩踏板消耗2份食物 大猪（踩踏板） 大猪（等待） 小猪（踩踏板） 1，5 -1，7 小猪（等待） 4，4 0，0 利益分配格局决定两头猪的理性选择：小猪踩踏板只能吃到一份，不踩踏板反而能吃上4份。对小猪而言，无论大猪是否踩动踏板，小猪将选择“搭便车”策略，也就是舒舒服服地等在食槽边，这是最好的选择。 启发： (商战)大企业与小企业：小企业（小猪）将行业老大（大猪）的实力转化为自己的助力。 (股市)大户与散户：大户设局形成猪圈，引小户（小猪）入套….。 (奖惩)企业与员工：杜绝智猪博弈（搭便车现象）,（移动食物槽位并减少食物投放）。 (董事会)大股东与小股东：大股东为企业的盈利亏损负责，小股东不负责监管直接拿分红。 总结： 无论是商业中的”抱大腿”，还是人生奋斗历程中的搭”搭便车”都是一种策略，一次机会。只要我们以一种平实的心态就能以这种快捷的方式获得成功。 猎鹿博弈源自启蒙思想家卢梭的著作《论人类不平等的起源和基础》 古代的村庄有两个猎人。当地的猎物主要有两种：鹿和兔子。如果一个猎人单兵优作战，一天最多只能打到4只兔子。只有两个一起去才能猎获一只鹿。从填饱肚子的角度来说，4只兔子能保证一个人4天不挨饿，而一只鹿却能让两个人吃上10天。 博弈分析： 两个人的行为决策可以形成两个博弈结局：分别打兔子，每人得4；合作，每人得10。这样猎鹿博弈有两个纳什均衡点，那就是：要么分别打兔子，每人吃饱4天；要么合作，每人吃饱10天。 猎人A（猎兔） 猎人A（猎鹿） 猎人B（猎兔） 4，4 4，0 猎人B（猎鹿） 0，4 10，10 猎鹿博弈反应的是：合作带来的最大利益。 枪手博弈该模型可以简单概括为：实力越强死得越快。最能体现这个博弈的：赤壁之战。 甲乙丙三个枪手准备决斗。甲枪法最好，80%命中率。乙枪法次之，60%命中率。丙枪法最差，40%命中率。假设他们了解彼此实力，也能做出理性判断。问题一：如果三人同时开枪，并且每人只发一枪。第一轮枪战后，谁活下来的机会大？问题二：如果三人轮流开枪，并且由枪法最差的丙先开枪，他该怎么做？ 博弈分析： 问题一：同时开枪 甲的最佳策略：先瞄准乙。因为乙对甲的威胁要比丙大，所以应该首先干掉乙，再干掉丙小菜一碟。 乙的最佳策略：先瞄准甲。一旦将甲干掉了，和丙进行对决，乙胜算的概率要大得多。 丙的最佳策略：也是先瞄准甲。毕竟对丙来说，乙的威胁还是比甲要小一些，先努力干掉甲再想如何面对乙，这是丙的正常思路。 在这种情况下，我们计算一下三个枪手开枪后各自存活的概率： 甲存活概率：40％X60％=24％。 乙存货概率：20% 丙存货概率：100% 问题二：轮流开枪 甲先开枪：必定把枪口对准乙， 乙被打死，接下来由丙开枪。丙会对甲开枪，甲存活率为60%，丙存活率100%。 乙未被打死，接下来由乙开枪，乙会对甲开枪，无论甲是否被乙杀死，接下来开枪的是丙，其存活率100%。 乙先开枪：和第一种情况一致，丙的存活率依然最高。 丙先开枪：根据情况适当调整策略，随便开一空抢，接下来由甲开枪，甲会对乙开枪，丙的存活率仍然最高。向甲开枪时一种冒险的行为，因为万一杀死了甲，乙就会向丙开枪，此时丙的存活率为40%。 在现实中，会有信息不对称的情况。比如如果枪手甲伪装自己，让乙和丙认为他的枪法最差：这时，幸存者是甲的概率就会大幅上升。在现实中，能力很强的人要学会韬光养晦，往往能成为最后的胜利者。 能力差的人在竞争中耍弄手腕能赢一时，但往往不能最终成事；提升自己实力会在最后的对决中起到关键作用。 无论是一次性博弈还是相继出招的序惯博弈，博弈者都要努力寻找自己最有力的策略。 如果自身没有优势策略，那就站在对方的角度上进行分析，确定对方的最优策略。得到的最终结果都不会超过最优势策略得到的结果，可大胆放心使用。 如果身处复杂的博弈当中，一时间无法确定自己的最佳策略，就先选择把自己的劣势策略排除,来简化博弈情况。 警察与小偷博弈在一个小镇上，只有一名警察负责巡逻，保卫小镇的人生和财产安全。小镇分A，B两区，A区一酒馆，B区一仓库，镇上还仅住着一名小偷，他的目标时A区酒馆或者B区仓库。因为只有一名警察，每次只能选择A区或B区一个区域区巡逻，而小偷正是看到这一点，每次也到一个区域区偷窃。假设A区有2万元财产，B区有1万元财产。警察区A区巡逻，小偷去B区，则B区1万元财产归小偷；如果警察去B区巡逻，小偷也去A区，则被逮捕。警察去B区巡逻，小偷去A区，则2A区2万元财产归小偷，；如果警察去B区巡逻，小偷也去B区，则同样被逮捕。那警察采取那种方式巡逻，镇上的财产损失最少？ 分析： 警察（A区） 警察（B区） 小偷（A区） 0,3 2,1 小偷（B区） 1,2 0,3 警察抽签的方式（2个A区签，1个B区签），去A区巡逻的概率2/3，去B去巡逻的概率1/3。 小偷抽签的方式（2个A区签，1个B区签），抽到A区签去B区偷盗，抽到B区签去A区偷盗。 斗鸡博弈试想有两只好斗的公鸡狭路相逢，每只鸡有两个行动选择：一是退下来，一是进攻。如果一方退下来，而对方没有退下来，对方获得胜利；如果对方也退下来，双方则打个平手；如果自己没退下来，而对方退下来，自己则胜利，对方则失败；如果两只鸡都前进，那么则两败俱伤。因此，对两只鸡来说，最好的结果是，对方退下来，而自己不退。 A鸡（前进） A鸡（后退） B鸡（前进） -2，-2 1，-1 B鸡（后退） -1，1 -1，-1 这个博弈有两个纯策略纳什均衡：一方前进，另一方后退；或一方后退，另一方前进。但关键是谁进谁退？当然，该博弈也存在一个混合策略均衡，即大家随机的选择前进或后退。不过相对而言，我们更关注于纯策略均衡。一博弈，如果有惟一的纳什均衡点，那么这个博弈是可预测的，即这个纳什均衡点就是事先知道的惟一的博弈结果。但是如果一博弈有多个纳什均衡，则要预测结果就必须附加另外的有关博弈的细节信息。比如，这里谁进谁退，可能就需要附加额外的细节信息才能做出判断。 斗鸡博弈强调的是，如何在博弈中采用妥协的方式取得利益。如果双方都换位思考，它们可以就补偿进行谈判，最后造成以补偿换退让的协议，问题就解决了。博弈中经常有妥协，双方能换位思考就可以较容易地达成协议。考虑自己得到多少补偿才愿意退，并用自己的想法来理解对方。只从自己立场出发考虑问题，不愿退，又不想给对方一定的补偿，僵局就难以打破。 协和博弈协和谬误即某件事情在投入了一定成本、进行到一定程度而后发现不宜继续下去，却苦于各种原因而将错就错，欲罢不能。 当你进行了一项不理性的行动后，应该忘记已经发生的行为和你支付的成本，只要考虑这项活动之后需要耗费的精力和能够带来的好处，再综合评定它能否给自己带来正效用。比如进行投资时，把目光投向前方，审时度势，如果发现这项投资并不能赢利，应该及早停掉，不要惋惜已投下去的各项成本：精力、时间、金钱…… 海盗分金博弈 5个海盗抢得100枚金币，他们按抽签的顺序依次提方案：首先由1号提出分配方案，然后5人表决，超过半数同意方案才被通过，否则他将被扔入大海喂鲨鱼，依此类推。 这是一个高度简化和抽象的模型，体现了博弈的思想。 假定“每人海盗都是绝顶聪明且很理智”，那么“第一个海盗提出怎样的分配方案才能够使自己的收益最大化？” 博弈分析： 推理过程采用倒推的方式： 从后向前推，在只剩4号和5号的话，4号的方案一定是100，0，此时即使5号反对结果也无法反对。 在只剩3号4号和5号的话，根据5号之前的处境，3号会提出99，0，1的方案，该方案3号一定同意，4号肯定不同意，但5号一定回头赞成票。如果5号投了反对票，就会回到只剩4号和5号的情况。 ​ 在2号3号4号和5号共存的情况下，2号最好的分配方案是98，0，0，2，既笼络5号，放弃3号4号，2号和5号投赞成票，3号4号投反对票，方案半数人同意而通过。 ​ 那1至5号都在的情况下，假如1号海盗被扔进大海，由2号海盗来分配方案的话，3号和4号海盗什么也得不到，因此1号海盗的分配方案就会从处于劣势的3号和4号海盗入手，最优方案是98，0，1，1，0，这样1号3号4号投赞成票，2和5号投反对票，方案通过。 模型任意改变一个假设条件，最终结果都会不一样。 “海盗分金”其实是一个高度简化和抽象的模型，体现了博弈的思想。在“海盗分金”模型中，任何“分配者”想让自己的方案获得通过的关键是事先考虑清楚“挑战者”的分配方案是什么，并用最小的代价获取最大收益，拉拢“挑战者”分配方案中最不得意的人们。企业中的一把手，在进行内部人员控制时，经常是抛开二号人物，而与会计和出纳们打得火热，就是因为公司里的小人物好收买。 1号看起来最有可能喂鲨鱼，但他牢牢地把握住先发优势，结果不但消除了死亡威胁，还收益最大。这不正是全球化过程中先进国家的先发优势吗？而5号，看起来最安全，没有死亡的威胁，甚至还能坐收渔人之利，却因不得不看别人脸色行事而只能分得一小杯羹。 路径依赖博弈一旦人们做了某种选择，就好比走上了一条不归之路，惯性的力量会使这一选择不断自我强化，并让你不能轻易走出去。 美国经济学家道格拉斯·诺思是第一个提出制度的“路径依赖”理论的学者，他认为，路径依赖类似于物理学中的“惯性”，一旦进入某一路径（无论是“好”的还是“坏”的）就可能对这种路径产生依赖。某一路径的既定方向会在以后发展中得到自我强化。人们过去做出的选择决定了他们现在及未来可能的选择。好的路径会对企业起到正反馈的作用，通过惯性和冲力，产生飞轮效应，企业发展因而进入良性循环；不好的路径会对企业起到负反馈的作用，就如厄运循环，企业可能会被锁定在某种无效率的状态下而导致停滞。而这些选择一旦进入锁定状态，想要脱身就会变得十分困难。 在现实生活中，路径依赖现象无处不在。一个著名的例子是：现代铁路两条铁轨之间的标准距离是四英尺又八点五英寸，为什么采用这个标准呢？原来，早期的铁路是由建电车的人所设计的，而四英尺又八点五英寸正是电车所用的轮距标准。那么，电车的标准又是从哪里来的呢？最先造电车的人以前是造马车的，所以电车的标准是沿用马车的轮距标准。马车又为什么要用这个轮距标准呢？因为古罗马人军队战车的宽度就是四英尺又八点五英寸。罗马人为什么以四英尺又八点五英寸为战车的轮距宽度呢？原因很简单，这是牵引一辆战车的两匹马屁股的宽度。 有趣的是，美国航天飞机燃料箱的两旁有两个火箭推进器，因为这些推进器造好之后要用火车运送，路上又要通过一些隧道，而这些隧道的宽度只比火车轨道宽一点，因此火箭助推器的宽度由铁轨的宽度所决定。所以，今天世界上最先进的运输系统的设计，在两千年前便由两匹马的屁股宽度决定了！ 名词解释纳什均衡纳什均衡，又称为非合作博弈均衡，是博弈论的一个重要术语，以约翰·纳什命名。在一个博弈过程中，无论对方的策略选择如何，当事人一方都会选择某个确定的策略，则该策略被称作支配性策略。如果两个博弈的当事人的策略组合分别构成各自的支配性策略，那么这个组合就被定义为纳什均衡。一个策略组合被称为纳什均衡，当每个博弈者的均衡策略都是为了达到自己期望收益的最大值，与此同时，其他所有博弈者也遵循这样的策略。 纳什均衡的重要影响： 1.改变了经济学的体系和结构。 2.扩展了经济学研究经济问题的范围。 3.加强了经济学研究的深度。 4.形成了基于经典博弈的研究范式体系。 5.扩大和加强了经济学与其他社会科学、自然科学的联系。 帕累托效率帕累托最优（Pareto Optimality），也称为帕累托效率、帕累托改善，是博弈论中的重要概念，并且在经济学， 工程学和社会科学中有着广泛的应用。 帕累托最优是指资源分配的一种理想状态，假定固有的一群人和可分配的资源，从一种分配状态到另一种状态的变化中，在没有使任何人境况变坏的前提下，使得至少一个人变得更好，这就是帕累托改进或帕累托最优化。帕累托最优的状态就是不可能在有更过的帕累托改进的余地；换句话说，帕累托改进是达到帕累托最优的路径和方法。帕累托最优是公平与效率的“理想王国”。 一般来说，达到帕累托最优时，会同时满足以下3个条件： 交换最优：即使再交易，个人也不能从中得到更大的利益。此时对任意两个消费者，任意两种商品的边际替代率是相同的，且两个消费者的效用同时得到最大化。 生产最优：这个经济体必须在自己的生产可能性边界上。此时对任意两个生产不同产品的生产者，需要投入的两种生产要素的边际技术替代率是相同的，且两个消费者的产量同时得到最大化。 产品混合最优：经济体产出产品的组合必须反映消费者的偏好。此时任意两种商品之间的边际替代率必须与任何生产者在这两种商品之间的边际产品转换率相同。 如果一个经济体不是帕累托最优，则存在一些人可以在不使其他人的境况变坏的情况下使自己的境况变好的情形。普遍认为这样低效的产出的情况是需要避免的，因此帕累托最优是评价一个经济体和政治方针的非常重要的标准。 夏普里值方法夏普利值指所得与自己的贡献相等，是一种分配方式。核心是付出和收益成正比。 考虑这样一个联盟博弈。有这样一个三人财产分配问题。假定财产为100万元，假定这100万元在三个人之间进行分配。A拥有50%的票力，b拥有40%的票力，c拥有10%的票力。规则规定，当超过50%的票认可了某种方案时，才能获得整个财产，否则三人将一无所获。 我们看到，任何单独一个人的票力都不超过50%，从而不能单独决定财产的分配。要超过50%的票力必须要形成联盟。也就是说，在这个例子中任何人的权利都不是“决定性的”，也没有一个人是“无权利的”或权利为0. 此时财产应当按票力分配吗？如果是的话，即a、b、c的财产分配为：50%，40%，10%。但如果这样分配的话，c可以提出这样的方案，a：70%，b：0，c：30%。这个方案能被a、c接受，因为对a、c来说这是一个比按票力分配有明显改进的方案，尽管b被排除出去，但是a、c的票力构成大多数（60%）。 在这样的情况下，b会向a提出这样一个方案，a：80%，b20%，c：0。此时a和b所得均比刚才c提出的方案要好，但c成了一无所有，但a、b票力综合构成多数（90%）……这样的过程可以一直进行下去。 在这个过程中，理性的人会形成联盟ab、ac或abc。但哪个联盟能够形成呢？最终的分配结果应该是怎样的呢？ 夏普里值是这样的一个值：在各种可能的联盟次序下，参与者对联盟的边际贡献之和除以各种可能的联盟组合。在财产分配问题上，我们可以写出各种可能的联盟顺序。而边际贡献就在于在这个顺序中谁是这个联盟的“关键加入者”。如果是关键加入者，那么他的边际贡献就为100万元。下表：财产问题中各种排列下的关键加入者： 次序 abc acb bac bca cab cba 关键加入者 b c a a a a 由上表，我们得到abc的夏普里值分别为： A=4/6，b=1/6，c=1/6 从这个例子可以看到，票力是虚假的实力表示。b、c票里不同，但是夏普里值相同，即权利相同，他们在形成获胜联盟中作为关键加入者的课程性是一样的。 哈丁悲剧公共资源悲剧最初由哈定提出。哈定举了这样一个具体事例：一群牧民面对向他们开放的草地，每一个牧民都想多养一头牛，因为多养一头牛增加的收益大于其购养成本，是合算的，尽管因平均草量下降，可能使整个牧区的牛的单位收益下降。每个牧民都可能多增加一头牛，草地将可能被过度放牧，从而不能满足牛的食量，致使所有牧民的牛均饿死。这就是公共资源的悲剧。 “公地悲剧”展现的是一幅私人利用免费午餐时的狼狈景象——无休止地掠夺。“悲剧”的意义就在于此。根据哈丁的讨论，结合我们对挣扎在生活磨难中的人们的理解，“公地悲剧”的发生机理似乎可以这样来理解：勤劳的人为个人的生计而算计，在一番忽视远期利益的计算后，开始为眼前利益而“杀鸡取卵”，没有规则，没有产权制度，没有强制，最后，导致公共财产——那个人们赖依生存的摇篮的崩溃，公地悲剧”的更准确的提法是：无节制的、开放式的、资源利用的灾难。 应对之策： 1、明确和稳定产权。 2、配合企业制度改革，力争做到公共产品私人供给。 3、加强制度建设，重视委托、代理、搭便车、机会主义问题研究。 最小最大策略在二人零和博弈中，参与者的利益严格相反（一人所得等于另一人所失），每个参与者都会尽最大努力使对手的最大收益最小化，而他的对手则正好相反，他们努力使自己的最小收益最大化。 鳄鱼法则假定一只鳄鱼咬住你的脚，如果你用手去试图挣脱你的脚，鳄鱼便会同时咬住你的脚与手。你愈挣扎，就被咬住得越多。所以，万一鳄鱼咬住你的脚，你唯一的机会就是牺牲一只脚。 给人的启示：当发现自己的行动已经离既定方向越来越远时，果断做出选择，停止行动，不要有一丝侥幸心理。 蔡格尼效应是指人们天生有一种办事有始有终的驱动力，人们之所以会忘记已完成的工作，是因为欲完成的动机已经得到满足；如果工作尚未完成，这同一动机便使他对此留下深刻印象。 一般来说，工作难度越大，思维越活跃，短时间强化的强度就越高，而强化对增强记忆是有益的。因此，被中止的工作往往容易被首先回忆。此外，工作难度大时，人们的情绪变化也大，而情绪对回忆是有很大的帮助。 避免措施： 第一，在看事物的时候运用自己的价值观标准，如果发现一个工作计划不值得做，那么就勇敢地放弃。 第二，编制一个时间表，把必须做的事以及要费的时间都写下来。努力培养出一种较合实际的意识，把期限定在要求办妥的时间以前。如果有笔帐必须在12月1日缴付，那就预订在11月25日付出。 第三，一点一滴地强化意志力，我们可以先从一件小事来训练自己，比如强迫自己在洗碗槽里留下几只碟子不洗，看一本书的时候，尝试停一下，想想自己是否在浪费时间和精力，如果是的，要不要继续看下去？ 第四，从现在开始：做任何事情，不要想着我还有时间去做，等待片刻；这样子会让大脑产生一定的滞后性，会让自己产生懒惰的行文；因此，想到就去实现，做是一切成功的前提； 第五，练习是一件好事，但是切勿目标盲目； 第六，制定一个准确的截止日期；针对每一项工作任务，预测可能需要的时间，根据时间结点来评估自己的任务完成计划； 第七，细分每一步工作计划：对于一项工作任务，不要盲目的去做，前提是仔细思考，细化每一个任务步骤，结合每一步任务所需要的条件即可 马太效应马太效应（Matthew Effect），是指好的愈好，坏的愈坏，多的愈多，少的愈少的一种现象。即两极分化现象。来自于圣经《新约•马太福音》中的一则寓言。 1968年，美国科学史研究者罗伯特·莫顿（Robert K. Merton）提出这个术语用以概括一种社会心理现象：“相对于那些不知名的研究者，声名显赫的科学家通常得到更多的声望即使他们的成就是相似的，同样地，在同一个项目上，声誉通常给予那些已经出名的研究者，例如，一个奖项几乎总是授予最资深的研究者，即使所有工作都是一个研究生完成的。” 此术语后为经济学界所借用，反映贫者愈贫，富者愈富，赢家通吃的经济学中收入分配不公的现象。 群体效应个体在群体的压力下，在认知，判断，信念和行为等方面，自愿与全体中的多数保持一致。既个体行为总是以全体行为为参照。 产生的原因为：1.寻求行为准则；2.避免孤独感；3.群体凝聚力。 📚📚💎💎]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云部署谷歌浏览器]]></title>
    <url>%2Fposts%2Fd4e355e4.html</url>
    <content type="text"><![CDATA[Centos7安装完图形界面系统后会自带是 火狐 Firefox 浏览器，虽然很优秀，但平时 谷歌 Chrome 浏览器用习惯了，有很多标签，我希望同步回来，所以安装一个 Google Chrome 浏览器非常有必要，本次部署环境为Centos7操作系统 下载Chome rpm包指定下载位置为 /etc/apt/sources.list.d/ 1sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm -P /etc/apt/sources.list.d/ 安装依赖包12yum install -y lsbyum install -y libXScrnSaver 安装Chome1rpm -ivh google-chrome-stable_current_x86_64.rpm 安装问题解决12345(base) [root@VM_0_2_centos sources.list.d]# rpm -ivh google-chrome-stable_current_x86_64.rpm警告：google-chrome-stable_current_x86_64.rpm: 头V4 DSA/SHA1 Signature, 密钥 ID 7fac5991: NOKEY错误：依赖检测失败： libappindicator3.so.1()(64bit) 被 google-chrome-stable-79.0.3945.88-1.x86_64 需要 liberation-fonts 被 google-chrome-stable-79.0.3945.88-1.x86_64 需要 根据错误提示安装对应依赖： 12yum install liberation-fonts #对应错误1yum install libappindicator-gtk3 #对应错误2 再次安装Chome 1rpm -ivh google-chrome-stable_current_x86_64.rpm 安装成功提示 123456(base) [root@VM_0_2_centos sources.list.d]# rpm -ivh google-chrome-stable_current_x86_64.rpm警告：google-chrome-stable_current_x86_64.rpm: 头V4 DSA/SHA1 Signature, 密钥 ID 7fac5991: NOKEY准备中... ################################# [100%]正在升级/安装... 1:google-chrome-stable-79.0.3945.88################################# [100%]Redirecting to /bin/systemctl start atd.service 系统桌面—应用程序—互联网—Chome已安装。 到此谷歌浏览器安装完毕。]]></content>
      <categories>
        <category>腾讯云</category>
      </categories>
      <tags>
        <tag>腾讯云</tag>
        <tag>Centos7</tag>
        <tag>谷歌浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云部署图形化界面]]></title>
    <url>%2Fposts%2F8b61043f.html</url>
    <content type="text"><![CDATA[腾讯云Linux系统默认是无图形化界面的，命令行不熟练话使用非常不方便，拥有一个图形化界面使用起来会非常的方便。本次就尝试在云服务器Centos7操作系统下部署一个”GNOME Desktop”图形化界面。 安装图形化桌面安装包SSH远程登陆云服务器 输入以下指令: 1yum groupinstall "GNOME Desktop" "Graphical Administration Tools" 再输入’Y’确认安装 。 设置图形化界面为默认启动输入如下指令： 1ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target 重启服务器1reboot VNC方式登陆登陆腾讯云控制器—实例—登陆—VNC方式 按照提示一步一步往下操作既可进入页面。 到此图形化界面安装完毕。]]></content>
      <categories>
        <category>腾讯云</category>
      </categories>
      <tags>
        <tag>腾讯云</tag>
        <tag>Centos7</tag>
        <tag>图形化界面</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[家常菜谱汇总]]></title>
    <url>%2Fposts%2Fcf8a8166.html</url>
    <content type="text"><![CDATA[做饭永远是一件让人头痛的事情啊！做一道美味的家常菜犒劳自己和家人那真是一件非常的棒的事情。 在此持续搜集一些比较火的博主的家常菜的制作视频以备不时之需。 🍆🥔🥕🌽🌶️🥒🥦🍄🥜🌰 🍖🍗🥓🍦~~🥰🥰🥰🥰 美食家王刚 家常美食 醋大蒜制作 盐水毛豆 小葱煎蛋 鸡蛋炒米粉 豆腐煎鸡蛋 韭菜炒鸡蛋 醋溜大白菜 酸辣大白菜 炝炒土豆丝 肉末烧茄子 鱼香茄子 麻婆豆腐 手工番茄鸡蛋面 川味牛肉面 脆青瓜炒肉 青椒牛肉丝 汆水丸子 糖醋排骨 口味猪肝 回锅肉 椒香腰片 口水鸡 可乐鸡翅 辣炒鸡爪 青椒炒鸡丁 啤酒鸭 干锅鸭脚 老鸭萝卜汤 碎炒羊肉 羊肉汤 干煎带鱼 藿香鳝鱼 番茄鲈鱼 盐烧鲈鱼 椒香鲤鱼 葱香鲫鱼 生焖鱼头 甲鱼汤 青椒爆甲鱼 清蒸小龙虾 蒜蓉小龙虾 蒜蓉粉丝蒸花甲 鱼丸火锅 香煎螃蟹 盐焗海鲜 鲜椒小蛙 辣炒田螺 技巧 切土豆丝 去鱼腥味 家猪分解 挑选猪腿 查注水肉 日食记 家常美食 自制棒冰 无敌炒饭 葱油拌面 豚骨拉面 南乳猪手 红烧肉 土豆牛腩 家庭鸡公煲 清蒸大闸蟹 手工便当 鹌鹑蛋虾球 酸菜鱼火锅 珍珠丸子 灵魂花甲 可乐鸡翅 炸串美味 其它 家常美食 番茄炸蛋面 湖州羊肉面 牛肉蛋盖饭 蒜泥白肉 油爆虾]]></content>
      <categories>
        <category>菜谱</category>
      </categories>
      <tags>
        <tag>家常菜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx服务重启失败原因分析]]></title>
    <url>%2Fposts%2F5e4c50a4.html</url>
    <content type="text"><![CDATA[Nginx服务重启失败原因汇总Nginx是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。由于意外重启腾讯云服务器，造成Nginx服务无法重启，云服务器上部署的一些应用瞬间无法访问了。。。于是进行原因排查。 无效的pid号远程登陆云服务器，重载Nginx 1nginx -s reload 提示：无效的pid号。 123[root@jupyter ~]# nginx: [error] invalid PID number "" in "/www/server/nginx/logs/nginx.pid"[root@jupyter ~]# 解决方法 查看配置文件，显示无问题。 123[root@jupyter ~]# nginx -tnginx: the configuration file /www/server/nginx/conf/nginx.conf syntax is oknginx: configuration file /www/server/nginx/conf/nginx.conf test is successful 首先找到nginx进程 pid 12[root@jupyter ~]# ps aux | grep "nginx: master" | grep -v pts | awk '&#123;print $2;&#125;'21968 将pid重新写入nginx.pid,需要注意的是 nginx.pid 的文件的路径，不同的配置，可能路径是不同的。 可以从之前的错误提示中找到路劲。 1echo `ps aux | grep "nginx: master" | grep -v pts | awk '&#123;print $2;&#125;'` &gt; /www/server/nginx/logs/nginx.pid 最后重启Nginx 1nginx -s reload 问题解决。 其它相关问题还未有碰到！]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>腾讯云</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云部署JupyterLab]]></title>
    <url>%2Fposts%2Ff5651246.html</url>
    <content type="text"><![CDATA[Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。 用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等 。用户可以通过电子邮件，Dropbox，GitHub 和 Jupyter Notebook Viewer，将 Jupyter Notebook 分享给其他人。在其中，代码可以实时的生成图像，视频，LaTeX和JavaScript。而Jupyter Lab 是 Jupyter Notebook的升级版本， 安装Anaconda搭建环境：Centos7 系统，宝塔面板已安装。 将执行脚本获取到本地： 1wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.3.1-Linux-x86_64.sh 执行Anaconda安装： 1bash Anaconda3-5.3.1-Linux-x86_64.sh 安装过程提示1： 直接回车 安装过程提示2： 输入yes+回车 安装提示3： Anaconda的安装位置默认会在执行用户的home目录下的anaconda3目录中，如果是要给服务器的全部用户安装的话，建议大家改成个公共的位置（如果安装时没有添加-u，目录如果存在会报错）。下面我是给改成安装在/opt/anaconda3下了。 其实安装位置可以在执行安装脚本的时候直接指定，像上面要指定安装到/opt/anaconda3目录下，可以这样修改执行内容：bash bash Anaconda3-5.3.1-Linux-x86_64.sh -p /opt/anaconda3，这一步安装目录就已经指定好了，直接回车了。 安装提示4： 修改.bashrc脚本将Anaconda目录添加到PATH中，输入yes+回车 安装提示5： 更新：安装2019版本的时候显示如下，输入yes+回车 安装提示6： 是否安装Microsoft VSCode，由于是在云服务器上部署的，输入no+回车 此时Anaconda安装完成！！ 直接输入conda应该会提示说没找到该命令，这时候执行下：source ~/.bashrc，之后就可以正常使用了 Conda管理多个python123conda upgrade condaconda update --allconda update anaconda 查看conda环境： 1conda info -e 12# 基于 python3.7 创建一个名为py38 的环境conda create --name py38 python=3.8 12# 基于 python2.7 创建一个名为py27 的环境conda create --name py27 python=2.7 123# 激活环境activate py3 # windowssource activate 环境名 # linux/mac 退出conda base环境 1conda deactivate 进入conda base 环境 1conda activate base 安装Jupyter lab1.在anaconda环境中安装Jupyter lab 1pip install jupyterlab 2生成配置文件 1jupyter notebook --generate-config 3.生成密码,创建哈希密码 123456ipythonfrom notebook.auth import passwdpasswd()# 输入你自己设置登录JupyterLab界面的密码，# 然后就会生产下面这样的密码，将它记下来，待会儿用'sha1:---------------------------------------------' 4.宝塔面板打开 root/.jupyter/jupter_notebook_config.py, 1234567891011121314151617c.NotebookApp.allow_root = Truec.NotebookApp.ip = '*'c.NotebookApp.open_browser = Falsec.NotebookApp.password = u'sha1:-------------------------------------------------'c.NotebookApp.port = 8081c.NotebookApp.allow_remote_access = Truec.NotebookApp.notebook_dir = u'/home/jupyterlab'#################################允许以root方式运行jupyterlab允许任意ip段访问默认运行时不启动浏览器，因为服务器默认只有终端嘛设置之前生产的哈希密码设置访问端口允许远程访问jupyter运行目录 到此，Jupyter lab已经安装成功了。 启动 Jupyter lab。 1nohup jupyter lab &amp; 然后你就可以在浏览器输入地址 安装Jupyter lab插件安装Node.js 12345678curl -sL https://rpm.nodesource.com/setup_10.x | bash -yum install -y nodejs[root@localhost /]# node -vv10.9.0[root@localhost /]# npm -v6.2.0 安装插件 12pip install jupyter_contrib_nbextensionsjupyter contrib nbextension install --user 安装完后，命令行输入jupyter lab –watch 进入Jupyter Lab界面。点击 Settings –&gt; Advanced Settings Editor ，将Extension Manager 里的enabled 的 false 改成 true（在右边的里面改），如下图： 现在，看向界面左侧应该就可以看到一个插件管理的图标，点击就可以看到刚才安装的插件，这个插件还有查询功能，我们可以很方便的安装卸载插件，上面是已安装的插件，下面是可以安装的插件，安装完成后可以直接更新。 如果你下载了字体插件，还可以更改字体大小和字体：Setting –&gt; Jupyter Lab Theme 如果你下载了字体插件，还可以更改字体大小和字体： 后台运行Jupyter lab1.后台运行 1nohup jupyter lab --ip=0.0.0.0 --no-browser --allow-root &gt; jupyter.log 2&gt;&amp;1 &amp; 用&amp;让命令后台运行, 并把标准输出写入jupyter.log中 nohup表示no hang up, 就是不挂起, 于是这个命令执行后即使终端退出, 也不会停止运行. 2.后台终止 12ps -a #查看进程pidkill -9 pid #终止进程 卸载Jupyter lab命令行输入以下内容 12345678pip uninstall jupyter -ypip uninstall jupyter_core -ypip uninstall jupyter-client -ypip uninstall jupyter-console -ypip uninstall notebook -ypip uninstall qtconsole -ypip uninstall nbconvert -ypip uninstall nbformat -y 参考 Jupyterlab官方文档]]></content>
      <categories>
        <category>Jupyter</category>
      </categories>
      <tags>
        <tag>腾讯云</tag>
        <tag>Jupyter</tag>
        <tag>Jupyterlab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云部署Nextcloud]]></title>
    <url>%2Fposts%2Ff7aa0f14.html</url>
    <content type="text"><![CDATA[nextcloud 是基于云技术的工程教育平台，利用云技术，提高工程教育过程中教学、实验与创新的效率与效果。每一位nextcloud的使用者都可以以教师或学生身份登录， 从而使得每个人都可以传授知识也可以学习知识，真正做到any time， any where的工程教育全新愿景。 搭建环境：Centos7 系统，宝塔面板已安装。 宝塔面板安装远程登陆腾讯云服务器，Centos系统安装命令 ： 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh 安装完成后根据界面提示链接和账号密码登陆宝塔面板。 安装必要的部署环境LNMP: Nginx/MySQL5.5+/PHP 7.0+ 部署Nextcloud1.新建站点 2.点选文件，进入站点目录，然后点击远程下载 nextcloud的安装包下载地址 1https://download.nextcloud.com/server/releases/nextcloud-14.0.4.zip 下载完成后，点击右侧的“解压”，解压到nextcloud根目录。完成后可以看到有个nextcloud的文件夹，我们进入后将里面的文件复制到根目录。 以上几步完成后，就可以打开创建站点时的域名，创建管理员账号界面，输入管理员账号密码，数据库名和密码，数据库用户名。点击“安装完成”。（数据库账号和数据库密码同创建网站时所创建的数据库账号，密码） 点击安装完成，完成后会自动登录。 安全及设置告警解决点选设置—概览，系统检查跳出安全及设置警告如下： 错误1：一些问题没有通过完整性检查 点击无效文件列表，根据提示删除根目录下的无效文件，即可。 错误2：PHP 内存限制低于建议值 512MB 保存并重启PHP即可解决该问题。 错误3：PHP 的安装似乎不正确，无法访问系统环境变量。getenv(“PATH”) 函数测试返回了一个空值。 从宝塔文件管理，打开/www/server/php/73/etc/php-fpm.conf，在其尾部添加一行 1env[PATH] = /usr/local/bin:/usr/bin:/bin:/usr/local/php/bin 保存并重启PHP即可解决该问题。 错误4：PHP 的组件 OPcache 没有正确配置 在PHP7.3配置文件中替换如下几条语句 1234567opcache.enable=1opcache.enable_cli=1opcache.interned_strings_buffer=8opcache.max_accelerated_files=10000opcache.memory_consumption=128opcache.save_comments=1opcache.revalidate_freq=1 错误5： 1.您的网页服务器未正确设置以解析“/.well-known/caldav”。 2.您的网页服务器未正确设置以解析“/.well-known/carddav”。 3.内存缓存未配置，为了提升使用体验，请尽量配置内存缓存。 (1和2)网站配置文件 location 部分添加如下两条语句保存即可。 12rewrite /.well-known/carddav /remote.php/dav permanent;rewrite /.well-known/caldav /remote.php/dav permanent; (3)再在Mysql配置文件中添加两条语句 123[mysqld]innodb_buffer_pool_size=1Ginnodb_io_capacity=4000 将php的扩展开启Apcu和memcached，然后在Nextcloud的config.php文件添加： 12345678910'memcache.local' =&gt; '\OC\Memcache\APCu', 'memcache.distributed' =&gt; '\OC\Memcache\Memcached', 'memcached_servers' =&gt; array ( 0 =&gt; array ( 0 =&gt; 'localhost', 1 =&gt; 11211, ), ), 问题解决。 错误6：通过 HTTP 访问网站不安全。强烈建议您将服务器设置成要求使用HTTPS 协议 添加域名解析，绑定SSL证书。 问题7：所使用的数据库为MySQL但没有对4字节字符的支持。为正确处理文件名或评论中使用的4字节字符（比如emoji表情），建议开启MySQL的4字节字符支持。 1.修改Mysql 配置文件[mysqld],添加语句 1234567#低于Mysql8.0版本，innodb_large_prefix=trueinnodb_file_format=barracudainnodb_file_per_table=1#高于Mysql8.0版本，innodb_file_per_table=1 2.开启Mysql 4字节支持 1ALTER DATABASE sql_118_25_73_16 CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci; 重启mysql. 3.修改nextcloud配置文件config.php，将 utf8mb4值改为 true官方给出的方法是使用occ命令，当然也可以直接修改config.php，occ命令：需要在nextcloud的安装根目录下执行： 1sudo -u www php occ config:system:set mysql.utf8mb4 --type boolean --value="true" 4.修复数据库，同样是occ命令，需要在nextcloud的安装根目录下执行 1sudo -u www php occ maintenance:repair 完成上述操作后，即可修复该告警。如出现登陆界面出现平台进入维护状态，只要修改config/config.php，将 123'maintenance' =&gt; true, 改成'maintenance' =&gt; false, 问题8：HTTP的请求头 “Strict-Transport-Security” 未设置为至少 “15552000” 秒。 解决方法还是修改nextcloud绑定的网站配置文件，添加一行header信息 1add_header Strict-Transport-Security "max-age=63072000;"; 最后附上完善的伪静态文件： 12345678910111213141516171819202122232425262728293031323334#nextcloud一些关键目录的权限设置 location ~ ^/(data|config|\.ht|db_structure\.xml|README) &#123; deny all; &#125;#静态资源重定向1 location ~* \/core\/(?:js\/oc\.js|preview\.png).*$ &#123; rewrite ^ /index.php last; &#125;#webdav重定向 location / &#123; rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect; rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect; rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect; rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;#静态资源重定向2,支持使用acme脚本在申请证书时对域名的验证 if ($uri !~* (?:\.(?:css|js|svg|gif|png|html|ttf|woff)$|^\/(?:remote|public|cron|status|ocs\/v1|ocs\/v2)\.php|^\/\.well-known\/acme-challenge\/.*$))&#123; rewrite ^ /index.php last; &#125; &#125; #静态资源重定向3 location ~* \.(?:png|html|ttf|ico|jpg|jpeg)$ &#123; try_files $uri /index.php$uri$is_args$args; access_log off; &#125; location ~ ^/(?:updater)(?:$|/) &#123; try_files $uri/ =404; index index.php; &#125; #caldav和#carddav rewrite /.well-known/carddav /remote.php/dav permanent; rewrite /.well-known/caldav /remote.php/dav permanent; 文件夹文件无法删除解决方法现象 删除目录或文件时提示：无法删除文件*或者”Error deleting file * 解决方法 查看数据目录下nextcloud.log,可能有三种情况： 情况A 文件或目录被锁 关键词日志中检索 is locked 1&#123;"reqId":"0DijSqEkfOg2iyh9VD8J","remoteAddr":"xx.xx.xx.xx","app":"webdav","message":"Exception: &#123;\"Message\":\"HTTP\\\/1.1 423 \\\"path\\\/file.extension\\\" is locked\",\"Exception\":\"OCA\\\\DAV\\\\Connector\\\\Sabre\\\\Exception\\\\FileLocked\",\"Code\":0,\"Trace\":\"#0 此时是因为文件或目录被锁，可按以下操作暂时解决问题： 1)宝塔面板nextcloud根目录下修改config文件夹内的config.php文件 1'maintenance' =&gt; false, #'maintenance' 赋值 true 进入维护模式 2)宝塔面板登陆nextcloud数据库，使用mysql命令行工具，执行语句 1DELETE FROM oc_file_locks WHERE 1 3)退出维护模式 1'maintenance' =&gt; true, #'maintenance' 赋值 false 退出维护模式 4)确保cron正常运行。 情况B Permission denied 1&#123;"reqId":"***","level":3,"time":"2018-04-28T16:19:53+00:00","remoteAddr":"127.0.0.1","user":"***","app":"PHP","method":"DELETE","url":"\/remote.php\/webdav\***","message":"unlink(\/mnt\/***): Permission denied at ***/lib\/private\/Files\/Storage\/Local.php#112","userAgent":"Mozilla\/5.0 ,"manuscript from cmdgy.com, version":"13.0.1.1"&#125; 此时待删除的①文件、②目录、③目录中有文件 对于php进程无写入权限。 使用chown -R修复数据目录的权限解决。 情况C The first argument to copy() function cannot be a directory at，rename(files_trashbin/files/): Invalid cross-device link at / 123&#123;"reqId":"***","level":3,"time":"2018-04-28T16:26:32+00:00","remoteAddr":"127.0.0.1","user":"***","app":"PHP","method":"DELETE","url":"\/remote.php\/webdav\***","message":"rename(): The first argument to copy() function cannot be a directory at ***/lib\/private\/Files\/Storage\/Local.php#270","userAgent":"Mozilla\/5.0 manuscript from cmdgy.com ","version":"13.0.1.1"&#125;&#123;"reqId":"***","level":3,"time":"2018-04-28T16:26:32+00:00","remoteAddr":"127.0.0.1","user":"***","app":"PHP","method":"DELETE","url":"\/remote.php\/webdav\***","message":"rename(***files_trashbin\/files\/***): Invalid cross-device link at \/***\/lib\/private\/Files\/Storage\/Local.php#270","userAgent":"Mozilla\/5.0 manuscript from cmdgy.com","version":"13.0.1.1"&#125; 此时需检查文件目录是否通过mount -bind方式挂载。]]></content>
      <categories>
        <category>腾讯云</category>
      </categories>
      <tags>
        <tag>腾讯云</tag>
        <tag>宝塔面板</tag>
        <tag>Nextcloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云弹性网卡实现多外网IP]]></title>
    <url>%2Fposts%2Fbacec032.html</url>
    <content type="text"><![CDATA[多IP服务器选择 如图上图所示， 性价比推荐以下两个配置CPU：1核 内存：2GB 可以申请弹性公网IP数量为 弹性网卡数量网卡绑定IP数：2X6=12个IPCPU：2核 内存：2GB 可以申请弹性公网IP数量为 弹性网卡数量网卡绑定IP数：2X10=20个IP 以此类推 购买腾讯云服务器已购买 CPU：1核 内存：2GB的服务器，并创建了实例。 创建弹性网卡选择云产品—私有网络—IP与网卡—弹性网卡—点击默认网卡名字 先配置第一张主网卡 选择 IPV4管理- 先把普通公网IP转换成弹性公网IP，然后点击 修改主IP： 将内网当前IP D段修改为2，以方便后续记忆。 点击 分配内网IP ，手动添加5个（只能添加5个）辅助内网IP : 再配置第二张辅助网卡 主IP可以自动分配也可以手动添加，但一定要和主网卡内网IP再同一个网段内。 选择内网主IP：172.17.15.2 点击绑定给辅助IP绑定弹性公网IP地址，选择新建EIP绑定，会自动申请弹性公网IP并绑定。弹性公网IP申请后立即绑定，弹性公网IP不闲置不收费。(也可以选择使用现有EIP绑定，前提是你之前已经在弹性公网IP申请了空闲的IP地址) 返回弹性网卡，可以看到辅助网卡已新建。 左后绑定云服务器。 辅助网卡绑定服务器成功。 服务器绑定弹性公网IP 实现多IP创建辅助网卡的配置文件远程登陆云服务器 执行以下命令： 1cd /etc/sysconfig/network-scripts/ 创建新网卡的配置文件 ifcfg-eth1 ： 1.输入命令： 1cp ifcfg-eth0 ifcfg-eth1 2.输入命令： 1vim ifcfg-eth1 3.按 “i” 切换至编辑模式，把配置文件内容修改为： 123456DEVICE='eth1'NM_CONTROLLED='yes'ONBOOT='yes'IPADDR='192.168.1.62' # 根据实际填写，此处写弹性网卡上的 IP 地址NETMASK='255.255.255.192' #根据实际填写，此处写子网掩码#GATEWAY='192.168.1.1' #根据实际需要填写。因为eth0文件定义了网关，这里不再写网关，避免网关冲突 我这边使用宝塔面环境进行配置 打开宝塔文件根目录/etc/sysconfig/network-scripts 创建一个ifcfg-eth1的网卡配置文件（不要直接在ifcfg-eth0里边修改） 配置文件中放入如下代码: 123456DEVICE='eth1'NM_CONTROLLED='yes'ONBOOT='yes'IPADDR='192.168.1.62' # 根据实际填写，此处写弹性网卡上的 IP 地址NETMASK='255.255.255.192' #根据实际填写，此处写子网掩码#GATEWAY='192.168.1.1' #根据实际需要填写。因为eth0文件定义了网关，这里不再写网关，避免网关冲突 保存并推出。 关闭 rp_filter 校验rp_filter参数用于控制系统是否开启对数据包源地址的校验,配置完成后需要需要关闭反向过滤，如果不关闭，在本机ping弹性公网IP会不成功 注意：反向过滤指系统在接收到一个 IP 包后检查该 IP 是否符合要求，不合要求则被丢弃。 例如，用户在 A 网卡上收到一个 IP 包，发送 IP 为 B。而给 B 的 IP 发送时应该用的网卡不是 A，则会丢弃。由于默认路由走的是主网卡，所以开启反向过滤后，辅助网卡上的 IP 会 ping 不通。 在 /etc/sysctl.conf 里，打开找到 1net.ipv4.conf.default.rp_filter = 1 删掉并替换成 1234net.ipv4.conf.default.rp_filter = 0net.ipv4.conf.all.rp_filter = 0net.ipv4.conf.eth0.rp_filter = 0net.ipv4.conf.eth1.rp_filter = 0 SSH命令重启网卡生效命令:# sysctl -p 重启网卡:# systemctl restart network.service并查看路由 查看配置后的效果:# ip a 查看弹性公网已经可以ping通。 参考博客： 腾讯官方文档 https://cloud.tencent.com/document/product/576/18535]]></content>
      <categories>
        <category>腾讯云</category>
      </categories>
      <tags>
        <tag>腾讯云</tag>
        <tag>弹性网卡</tag>
        <tag>多公网IP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云部署ImgURL个人图床]]></title>
    <url>%2Fposts%2Fa9a46c5c.html</url>
    <content type="text"><![CDATA[利用腾讯云的官方COSFS工具，把新建的COS存储桶挂载到腾讯云服务器上（操作系统为Centos7）。 再安装ImgURL搭建个人图床。 搭建环境：Centos7 系统，宝塔面板已安装。 建立存储登陆腾讯云控制台—选择对象存储—新建存储桶（我这边已创建完成） 创建完成后整理如下信息： 存储桶名称（bucket_name）：x04680126 替换成你自己的 存储桶APPID（bucket_appid）：1300755540 替换成你自己的 存储桶访问域名（bucket_region）：https://x04680126-1300755540.cos.ap-shanghai.myqcloud.com 生成密钥接下来在密钥管理中切换到API密钥管理，生成密钥。如果是生产环境，建议使用子账户使用密钥。密钥分为SecretId和SecretKey。其中SecretKey需要验证手机号才能显示。 API秘钥id（SecretId）：AKIDXXXXXXXXXXXXXXXXXXXXXXBM951 替换成你自己的 API秘钥key（SecretKey）：jBMXXXXXXXXXXXXXXXXXXXXXXweB 替换成你自己的 服务器上配置Xshell6 远程登陆腾讯云服务器 1.安装环境依赖包1sudo yum install automake gcc-c++ git libcurl-devel libxml2-devel fuse-devel make openssl-devel 2.安装工具使用 GitHub 将源码下载到 /usr/cosfs 为例： 1git clone https://github.com/tencentyun/cosfs-v4.2.1 /usr/cosfs 3.进入到该目录，编译安装12345cd /usr/cosfs./autogen.sh./configuremakesudo make install 注：在这里有一个大坑，使用腾讯云VPS编译安装的时候会报错，但安装完成之后可以正常使用！！！！！！！ 4.配置文件替换自己的真实bucket_appid，secretId和secredKey 12echo kenny-hexo-1256238228:AKIDXXXXXXXXXXXXXXXXXXXXXXBM951:jBMXXXXXXXXXXXXXXXXXXXXXXweB &gt; /etc/passwd-cosfschmod 640 /etc/passwd-cosfs 5.云服务器挂载存储桶1cosfs 1300755540:x04680126 /usr/x04680126-1300755540 -ourl=https://cos.ap-shanghai.myqcloud.com -odbglevel=info 1300755540:x04680126 是自己的 bucket_appid 和 bucket_name， 需要替换为用户自己的； /usr/x04680126-1300755540 是要挂载到服务器上（本地）的目录，需要使用宝塔提前创建； https://cos.ap-shanghai.myqcloud.com 是你的 bucket_region部分 -odbglevel 参数表示信息级别，照写即可。 云服务器卸载存储桶 123fusermount -u /usr/x04680126-1300755540或者umount -l /usr/x04680126-1300755540 查看是否挂载成功 1df -h 出现红框里内容表示挂载成功。 设置图片在线浏览点击创建的存储桶—基础配置—拉到最下—开启静态网站和强制HTTPS 安装ImgURL宝塔面板新建站点—新建站点根目录 123新建站点：http://111.229.17.211:3389/新建站点根目录：/usr/ImgURL 自己设定 软件商店 php安装 fileinfo和imagemagick扩展 Nginx设置伪静态 123456789location / &#123;try_files $uri $uri/ /index.php?$query_string;&#125;location ~* \.(db3|json)$ &#123; deny all;&#125;location ~* ^/(temp|upload|imgs|data|application|static|system)/.*.(php|php5)$ &#123; return 403;&#125; 下载地址:ImgURL，并解压。 宝塔面板进入站点根目录/usr/ImgURL-test，全选解压后的子文件并上传。 浏览器输入 站点域名 http://111.229.17.211:3389/ 并确保检测结果通过—按下一步安装完成。 取消广告新版本安装完成后默认会添加俩个条广告，取消掉都非常简单只需编辑网站根目录下的 footer.php 文件，文件路径 \ application \ views \ user \ footer.php 1234567&lt;script src = 'https://libs.xiaoz.top/assets/imgurl.js'&gt;&lt;/script&gt;如果只是想删除广告，那就删掉以上代码就OK了如果要改为自己的广告就替换为本地调用：&lt;script src = '/static/imgurl.js'&gt;&lt;/script&gt;然后再修改js为自己的广告/static/imgurl.js 使用协议广告路径 1234#使用协议打赏二维码路径/data/pages/use.md#使用协议广告图片路径/application/views/user/page.php 由于本次安装为社区版本，无法绑定腾讯COS等外部存储。 参考博客： https://www.234du.com/1167.html https://blog.nicky1605.com/linux-mount-cos.html]]></content>
      <categories>
        <category>图床</category>
      </categories>
      <tags>
        <tag>腾讯云</tag>
        <tag>宝塔面板</tag>
        <tag>ImgURL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书计划2020]]></title>
    <url>%2Fposts%2F42058630.html</url>
    <content type="text"><![CDATA[建立终生信仰的三观（价值观、人生观、世界观） 构建完整稳定的知识体系，达到对人生世事基本无惑的智慧 完成身体、心灵、与社会三者之间健康、和谐的平衡发展 形成一套完整有效的思考、推演、决策、行动的解决问题模型 基本跟上前沿信息与知识点，不被时代淘汰 技能类❤️利用Python进行数据分析(第二版) 思维类高效能人士的七个习惯 ❤️博弈论 批判性思维 拆掉思维的墙 学会提问 - (美)尼尔.布朗 逻辑学导论 放弃的艺术 别做正常的傻瓜 卓有成效的管理者 第五项修炼 六顶思考帽 墨菲定律 自我完善焦虑症的心理研究与矫治 走出抑郁 ❤️🤍自卑与超越 心理咨询师笔记 爱的艺术 被讨厌的勇气 异类的天赋 信息前沿图说区块链 区块链革命 区块链社会 心理学瞬间读懂身体语言 变态心理学 认知心理学 发展心理学 人格心理学 经济哲学读懂中国制造2025 其它类巨婴国 - 武志红 万万没想到 - 万维钢 洗澡 - 杨绛 显微镜下的大明 - 马伯庸 🤍🤍逆向盈利 ❤️❤️镇魂街 ❤️ 海盗战记]]></content>
      <categories>
        <category>书单</category>
      </categories>
      <tags>
        <tag>书单</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云部署Hexo]]></title>
    <url>%2Fposts%2Fe1764d0e.html</url>
    <content type="text"><![CDATA[原先将Hexo部署到 github 和 coding 上的，访问速度较慢，于是购买了低配腾讯云服务器对原先博客进行重新部署。只要通过三步即可成功部署： 1.云服务器端 git 的配置2.配置Nginx3.本地端 hexo 的设置更改 云服务器重装系统并远程登陆 确保是干净的操作系统，没有安装过其它环境带的Apache/Nginx/php/MySQL（已有环境不可安装）。 安装宝塔Linux面板7.0.2安装命令如下： 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh 宝塔面板登陆： 根据安装完成的提示（登陆地址，账号，密码），登陆宝塔管理面板我的如下： Bt-Panel: http://111.229.17.211:8888/0e1fb823。 安装配置建站环境宝塔面板安装Nginx软件商店选择建站安装环境，本次选择推荐选项安装 Nginx (主要用到这个) Mysql php Pure-Ftpd phpMyAdmin 云服务器端配置git下载 git （下载到 /usr/local/src 目录下） 12cd /usr/local/src wget http://ftp.ntu.edu.tw/software/scm/git/git-2.9.5.tar.gz 解压到当前目录 1tar -zvxf git-2.9.5.tar.gz 编译 12cd git-2.9.5make all prefix=/usr/local/git 安装 git 到 /usr/local/git 目录下 1make install prefix=/usr/local/git 配置 git 环境变量 1echo 'export PATH=$PATH:/usr/local/git/bin' &gt;&gt; /etc/bashrc 使 git 环境变量生效 1source /etc/bashrc 验证安装完成 1git --version 宝塔面板文件管理查看git已安装 云服务器创建git 仓库1.创建hexo的仓库 git仓库用于存放博客网站资源。在 home/git的目录下，创建一个名为hexo的仓库。如果没有 home/git目录，需要先创建，然后修改目录的所有权和用户权限。 12345mkdir /home/git/chown -R $USER:$USER /home/git/chmod -R 755 /home/git/cd /home/git/git init --bare hexo.git 2.创建git hooks 在 /home/git/hexo.git下，有一个自动生成的 hooks文件夹，我们创建一个新的 git钩子 post-receive，用于自动部署。 1vim /home/git/hexo.git/hooks/post-receive 将以下代码写到post-receive 12#!/bin/bash git --work-tree=/home/hexo --git-dir=/home/git/hexo.git checkout -f 宝塔面板文件夹系统内查看如下： 修改文件权限，使得其可执行 1chmod +x /home/git/hexo.git/hooks/post-receive 3.创建博客保存目录hexo 123mkdir /home/hexo/ chown -R $USER:$USER /home/hexo/chmod -R 755 /home/hexo/ 宝塔面板配置 Nginx添加网络，选择之前服务器上创建的根目录 填写1年期免费SSL 证书,可以在腾讯SSL 证书-域名型免费版申请并下载（Nginx的，因为我安装的是这个服务） hexo站点配置文件修改1.打开hexo站点配置文件_config.yml，修改如下： 123456789# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: - type: git repo: tencent: root@111.229.17.211:/home/git/hexo branch: master message: blog update - type: baidu_url_submitter 服务器上部署123hexo cleanhexo generatehexo deploy hexo deploy 期间需要输入云服务器登陆密码。静态文件已部署到服务器中。 若 hexo deploy 出现以下内容： 1rm -rf ~/.ssh/known_hosts 重新ssh连接就可以了！ 参考博客：https://blog.csdn.net/jiejiemcu/article/details/102081674]]></content>
      <categories>
        <category>腾讯云</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>云服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云部署Docker]]></title>
    <url>%2Fposts%2Fd3aaaed9.html</url>
    <content type="text"><![CDATA[Docker是一个开源的应用容器引擎；是一个轻量级容器技术，Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像，Docker运行中的这个镜像称为容器，容器启动是非常快速的。 Docker简介简单的说： Docker是一个开源的应用容器引擎；是一个轻量级容器技术； Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像； Docker运行中的这个镜像称为容器，容器启动是非常快速的； Docker 教程 Docker的几个核心概念： docker主机(Host)：安装了Docker程序的机器（Docker直接安装在操作系统之上）；—我这边是腾讯云服务器 docker客户端(Client)：连接docker主机进行操作；—我这边是笔记本电脑 docker仓库(Registry)：用来保存各种打包好的软件镜像； docker镜像(Images)：软件打包好的镜像；放在docker仓库中； docker容器(Container)：镜像启动后的实例称为一个容器；容器是独立运行的一个或一组应用 需要区分的两个概念：容器和虚拟机 容器 容器技术是和我们的宿主机共享硬件资源及操作系统，可以实现资源的动态分配。容器包含应用和其所有的依赖包，但是与其他容器共享内核。容器在宿主机操作系统中，在用户空间以分离的状态进程运行。 虚拟机 传统虚拟机如 VMware ， VisualBox 之类的需要模拟整台机器包括硬件，每台虚拟机都需要有自己的操作系统，虚拟机一旦被开启，预分配给它的资源将全部被占用。每一台虚拟机包括应用，必要的二进制和库，以及一个完整的用户操作系统。 两者比较图： Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。 它不是模拟一个完整的操作系统，而是对进程进行隔离，相当于是在正常进程的外面套了一个保护层。对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。 Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。 总体来说 Docker 的接口相当简单，用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。 容器相比于传统虚拟机的特性的优势所在： Docker中包括三个基本的概念： 镜像是 Docker 运行容器的前提，仓库是存放镜像的场所，可见镜像更是 Docker的核心。 Image(镜像) docker像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。 镜像（Image）就是一堆只读层（read-only layer）的统一视角，也许这个定义有些难以理解，下面的这张图能够帮助读者理解镜像的定义。 Container(容器) ​ 容器 (container) 的定义和镜像 (image)几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的最 ​ 上面那一层是可读可写的。 由于容器的定义并没有提及是否要运行容器，所以实际上，容器 = 镜像 + 读写 ​ 层。 ​ ​ Repository(仓库) ​ Docker仓库是集中存放镜像文件的场所。镜像构建完成后，可以很容易的在当前宿主上运行，但是， 如果需 ​ 要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry (仓库注册 ​ 服务器)就是这样的服务。有时候会把仓库 (Repository) 和仓库注册服务器 (Registry) 混为一谈，并不严格区 ​ 分。Docker仓库的概念跟 Git 类似，注册服务器可以理解为 GitHub`这样的托管服务。实际上，一个 ​ Docker Registry中可以包含多个仓库 (Repository) 每个仓库可以包含多个标签 (Tag)，每个标签对应着一个镜 ​ 像。所以说，镜像仓库是 Docker 用来集中存放镜像文件的地方类似于我们之前常用的代码仓库。 通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本 。 我们可以通过&lt;仓库名&gt;:&lt;标签&gt;的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 latest 作为默认标签.。 Docker安装在腾讯云服务器Centos系统上安装Docker社区版 1.卸载掉旧版本的 Docker 12345678910sudo yum remove docker \sudo yum remove docker-client \sudo yum remove docker-client-latest \sudo yum remove docker-common \sudo yum remove docker-latest \sudo yum remove docker-latest-logrotate \sudo yum remove docker-logrotate \sudo yum remove docker-selinux \sudo yum remove docker-engine-selinux \sudo yum remove docker-engine 2.安装依赖包 1yum install -y yum-utils device-mapper-persistent-data lvm2 3.通过阿里云下载docker-ce社区版 1yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 4.安装Docker 1yum install docker-ce 5.启动Docker并测试 123systemctl start docker docker run hello-world 6.使用docker -version命令来查看docker是否安装成功 1docker -version 7.Docker的简单运用—Hello World 将名为 hello-world的 image文件从仓库抓取到本地。 1docker pull library/hello-world 8.运行 hello-world 这个 image 文件 1docker run hello-world 输出这段提示以后，hello world 就会停止运行，容器自动终止。 有些容器不会自动终止，因为提供的是服务，比如Mysql镜像等。 Docker提供了一套简单实用的命令来创建和更新镜像，我们可以通过网络直接下载一个已经创建好了的应用镜像，并通过 Docker RUN 命令就可以直接使用。当镜像通过 RUN 命令运行成功后，这个运行的镜像就是一个 Docker 容器啦，容器可以理解为一个轻量级的沙箱， Docker 利用容器来运行和隔离应用，容器是可以被启动、停止、删除的，这并不会影响 Docker 镜像。 Docker架构 Docker采用的是C/S架构，既 Client/Server架构 。 客户端向服务器发送请求，服务器负责构建、运行和分发容器。客户端和服务器可以运行在同一个 Host 上，客户端也可以通过 socket 或 REST API 与远程的服务器通信。 其核心组件包括： Docker Client Docker 提供命令行界面 (CLI) 工具 Docker daemon 服务器组件，以 Linux 后台服务的方式运行，是 Docker 最核心的后台进程，我们也把它称为守护进程。它负责响应来自 Docker Client 的请求，然后将这些请求翻译成系统调用完成容器管理操作。该进程会在后台启动一个 API Server ，负责接收由 Docker Client 发送的请求，接收到的请求将通过Docker daemon 内部的一个路由分发调度，由具体的函数来执行请求。 ​ 运行过程的作用有以下几种可能： 向 Docker Registry 获取镜像 通过 graphdriver 执行容器镜像的本地化操作 通过 networkdriver 执行容器网络环境的配置 通过 execdriver执行容器内部运行的执行工作 ​ 默认配置下， Docker daemon 只能响应来自本地 Host 的客户端请求。如果要允许远程客户端请求，需要 ​ 在配置文件中打开 TCP 监听。我们可以照着如下步骤进行配置： ​ 1、编辑配置文件 /etc/systemd/system/multi-user.target.wants/docker.service ，在环境变量 ExecStart ​ 后面添加 -H tcp://0.0.0.0，允许来自任意 IP 的客户端连接。 ​ centos7下编辑配置文件？？？ ​ 2、重启 Docker daemon ​ systemctl daemon-reload ​ systemctl restart docker.service ​ 3、 实现与远程服务器通信 ​ docker -H 服务器IP地址 info ​ -H 是用来指定服务器主机， info 子命令用于查看 Docker 服务器的信息 Docker Image ​ Docker 镜像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外， ​ 还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据， ​ 其内容在构建之后也不会被改变。我们可将 Docker 镜像看成只读模板，通过它可以创建 Docker 容器。 ​ 镜像有多种生成方式：1.从无到有创建镜像；2.下载并使用别人现成的镜像；3.在镜像上创建镜像 ​ 我们可以将镜像的内容和创建步骤描述在一个文本文件中，这个文件被称作 Dockerfile，通过执行 ​ docker build 命令可以构建出 Docker 镜像 。 Docker Registry ​ 存储 docker image 的仓库， Docker Container ​ Docker 容器就是 Docker 镜像的运行实例，是真正运行项目程序、消耗系统资源、提供服务的地方。 ​ Docker Container 提供了系统硬件环境，我们可以使用 Docker Images 这些制作好的系统盘，再加上我们 ​ 所编写好的项目代码， run 一下就可以提供服务。 Docker组件运作 运作流程如下： 1.Docker 客户端执行 docker run 命令2.Docker daemon 发现本地没有我们需要的镜像3.daemon 从 Docker Hub 下载镜像4.下载完成后，镜像被保存到本地5.Docker daemon 启动容器 Docker常用命令 拉去一个镜像 123docker pull image_name #image_name 为镜像的名称docker pull centos:latest #centos:lastest 是镜像的名称 查看主机有多少镜像 1docker image 查看哪些容器在运行 1docker ps -a 对一个容器进行启动，重启和停止 123docker start container_name/container_iddocker restart container_name/container_iddocker stop container_name/container_id 进入到这个容器 1docker attach container_name/container_id 运行这个容器中的镜像，并且调用镜像里面的 bash 1docker run -t -i container_name/container_id /bin/bash 删除指定容器 1234docker ps -adocker stop container_name/container_iddocker rm container_name/container_id 删除指定镜像 1docker rmi image_name 更多命令： DockerfileDockerfile 是自动构建 docker 镜像的配置文件， 用户可以使用 Dockerfile 快速创建自定义的镜像。Dockerfile 中的命令非常类似于 linux 下的 shell 命令。 Docker 镜像、容器和 Dockerfile 三者之间的关系 ： 上图中可以看到， Dockerfile可以自定义镜像，通过 Docker 命令去运行镜像，从而达到启动容器的目的。 Dockerfile 是由一行行命令语句组成，并且支持已 # 开头的注释行。 可以将 Dockerfile 分为四个部分： 基础镜像(父镜像)信息指令 FROM 维护者信息指令 MAINTAINER 镜像操作指令 RUN 、 EVN 、 ADD 和 WORKDIR 等 容器启动指令 CMD 、 ENTRYPOINT 和 USER 等 例子： 123456789FROM python:2.7MAINTAINER Angel_Kitty &lt;angelkitty6698@gmail.com&gt;#copy 当前目录到容器中的 /app 目录下 复制本地主机的 &lt;src&gt; (Dockerfile所在目录的相对路径)到容器里 &lt;dest&gt;COPY . /appWORKDIR /appRUN pip install -r requirements.txtEXPOSE 5000ENTRYPOINT ["python"]CMD ["app.py"] 命令解析：FROMFROM 是用于指定基础的 images ，一般格式为 FROM or FORM : ，所有的 Dockerfile 都用该以 FROM 开头，FROM 命令指明 Dockerfile 所创建的镜像文件以什么镜像为基础，FROM 以后的所有指令都会在 FROM 的基础上进行创建镜像。 MAINTAINER 是用于指定镜像创建者和联系方式，一般格式为 MAINTAINER 。 COPY COPY 是用于复制本地主机的 (为 Dockerfile 所在目录的相对路径)到容器中的 。 当使用本地目录为源目录时，推荐使用 COPY 。一般格式为 COPY 。例如我们要拷贝当前目录到容器中的 /app 目录下，我们可以这样操作： 1COPY . /app WORKDIR WORKDIR 用于配合 RUN，CMD，ENTRYPOINT 命令设置当前工作路径。可以设置多次，如果是相对路径，则相对前一个 WORKDIR 命令。默认路径为/。一般格式为 WORKDIR /path/to/work/dir 。例如我们设置/app 路径，我们可以进行如下操作： 1WORKDIR /app run RUN 用于容器内部执行命令。每个 RUN 命令相当于在原有的镜像基础上添加了一个改动层，原有的镜像不会有变化。一般格式为 RUN 。例如我们要安装 python 依赖包，我们做法如下： 1RUN pip install -r requirements.txt EXPOSE EXPOSE 命令用来指定对外开放的端口。一般格式为 EXPOSE […] 例如上面那个例子，开放5000端口： 1EXPOSE 5000 ENTRYPOINT ENTRYPOINT 可以让你的容器表现得像一个可执行程序一样。一个 Dockerfile 中只能有一个 ENTRYPOINT，如果有多个，则最后一个生效。 ENTRYPOINT 命令也有两种格式： ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;] ：推荐使用的 exec形式 ENTRYPOINT command param1 param2 ：shell 形式 CMD CMD 命令用于启动容器时默认执行的命令，CMD 命令可以包含可执行文件，也可以不包含可执行文件。不包含可执行文件的情况下就要用 ENTRYPOINT 指定一个，然后 CMD 命令的参数就会作为ENTRYPOINT的参数。 123CMD ["executable","param1","param2"]：推荐使用的 exec 形式。CMD ["param1","param2"]：无可执行程序形式CMD command param1 param2：shell 形式。 一个 Dockerfile 中只能有一个CMD，如果有多个，则最后一个生效。而 CMD 的 shell 形式默认调用 /bin/sh -c 执行命令。CMD 命令会被 Docker 命令行传入的参数覆盖：docker run busybox /bin/echo Hello Docker 会把 CMD 里的命令覆盖。 例如我们要启动 /app ，我们可以用如下命令实现： 1CMD ["app.py"] 参考博客： https://blog.csdn.net/deng624796905/article/details/86493330 https://blog.csdn.net/u011781521/article/details/80469804 ​]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win10下IE浏览器图标无法删除的解决办法]]></title>
    <url>%2Fposts%2Fed3f23a1.html</url>
    <content type="text"><![CDATA[为自学MySQL,在Win10电脑上安装SQLyog软件，安装完毕时突然发现电脑桌面自动添加了IE浏览器的图标，而且该图标无法直接右键删除。 我去【控制面板】-【程序卸载】里面也没有找到安装IE浏览器（之前一直没有遇到过这种情况） ，那该如何是好呢？通过百度后，我将相关的解决办法记录与此，以便日后出现同类问题可以及时的解决。 Win+R,输入“regedit”,进入注册表编辑器, 进入如下目录 1\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Desktop\NameSpace 找到{00010203-0001-0305-102938475600}字典目录 删除{00010203-0001-0305-102938475600}字典目录 这时再返回电脑桌面，发现原先的IE图标已经被删除，问题成功解决！]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>IE浏览器</tag>
        <tag>系统优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL学习笔记二：DQL查询语言]]></title>
    <url>%2Fposts%2F2a4d6fbc.html</url>
    <content type="text"><![CDATA[MySQL-DQL查询语言 将参考用数据库 myemployees.sql添加至图形化用户界面客户端 MySQL常见命令1、查看当前所有数据库 1show databases; 2、打开指定数据库 1use 库名 3、查看当前库的所有表 1show tables; 4、查看其它库的所有表 1show tables from 库名;` 5、创建一个表 123456create table 表名( 列名 列类型, 列名 列类型, .......) 6、查看表结构 1desc 表名 5、查看服务器的版本 方式一：登录到mysqI服务端， 1select version(); 方式二：未连接到mysql服务端 1mysql --version 或 mysql --V MySQL语句规范 不区分大小写，但建议关键字大写，表名、列名小写 每条命令最好用分号结尾 每条命令根据需要，可以进行缩进或者换行 注释 单行注释：#注释文字 单行注释：–[空格]注释文字 多行注释 基础查询语句（进阶一）语法：select 查询的列表 from 表名 查询列表可以是：表中的字段、常量值、表达式、函数 查询的结果是一个虚拟的表格 1、查询字段 查询表中的单个字段 1select last_name from employees 查询表中多个字段 1select last_name, salary, email from employees 查询表中所有字段 1select * from employees 2、查询常量值 注意:字符型和日期型的常量值必须用单引号引起来，数值型不需要 12select 100select 'john' 3、查询表达式 注意：不支持++、–等运算方式 1select 100*98 4、查询函数 1select version(); 5、为字段起别名 123451、asselect 100*98 as 结果select last_name as 姓,first_name as 名 from employees2、空格select last_name 姓,first_name 名 from employees 便于理解 如果要查询字段有重名，使用别名可以区分开来 如果别名中有特殊符号，建议别名上加双引号。 6、为字段去重 select distinct 字段名 from 表名； 案列：查询员工表中涉及到的所有部门编号 语句中需添加 DISTINCT 1select DISTINCT department_id from employees 7、+号的作用 +仅仅只有加法运算功能 select 90+199；两个操作数均为数值型，则做加法运算 如果有其中一方为字符型，，试图将字符型数值转换成数值型 select ‘123’+100; 如果转换成功，则继续做加法运算 select ‘john’+90 ; 如果转换失败，则将字符型数值转换成0 select ‘null’+100; 只要其中一方为null，则结果肯定是null 8、contact 函数 起到拼接字符的功能 案列：查询员工名和姓连接成一个字段，并显示为 姓名 1select concat(last_name,first_name) as 姓名 from employees 9、【补充】ifunll函数 判断某字段或表达式是否为unll,如果是返回指定值，否则返回原本值。 10、【补充】isunll函数 判断某字段或表达式是否为unll,如果是返回1，否则返回0。 条件查询语句（进阶二）语法： 123456select 查询列表from 表名where 删选条件 分类： 按条件表达式删选：&gt; &lt; != &lt;&gt; &gt;= &lt;= 按逻辑表达式删选：and or not &amp;&amp; 和 and 两个条件都为true，结果为true，反之为flase || 和 or 两个条件有一个为true，结果为true，反之为flase ! 和not 如果链接的条件本身为flase，结果为true，反之为flase 模糊查询：like、between、 in、 is null 按条件表达式删选 案例1：查询工资&gt;12000的员工的信息 1SELECT * FROM employees WHERE salary &gt;12000 案例2：查询部门编号不等于90号的员工名和部门编号 12345678SELECT last_name, department_idFROM employees WHERE department_id&lt;&gt;90 按逻辑表达式删选 案例1：工资在1万到2万之间的员工名、工资、奖金信息 12345678SELECTlast_name,salary,commission_pctFROMemployeesWHERE salary&gt;=10000 AND salary&lt;=20000 案例2：查询部门编号不在90到110之间，或者薪水高于15000的员工信息 123456SELECT*FROMemployeesWHERENOT(department_id&gt;=90 AND department_id&lt;=110) OR salary&gt;15000; 模糊查询删选 1 2 3 4 is null =或者,&gt;不能用于判断null值 is null或is not null可以 案例1：查询没有奖金的员工名和奖金率 1234567SELECTlast_name,commission_pctFROMemployeesWHEREcommission_pct IS NULL 案例2：查询工资为12000的员工信息 使用 &lt;=&gt; 安全等于 1234567SELECTlast_name,salaryFROMemployeesWHEREsalary &lt;=&gt; 12000 注意： is null 仅仅可以判断 null值，可读性较高，建议使用。 &lt;=&gt; 既可以判断null值，又可以判断普通数量，可读性较低。 综合案列1:查询没有奖金，且工资小于18000的salary/last_name 12345678SELECTlast_name,salaryFROMemployeesWHEREcommission_pct IS NULL AND salary &lt; 18000; 综合案例2：查询employees表中，job_id不为 ‘IT’ 或者 工资为12000的员工信息。 12345678SELECT*FROMemployeesWHEREjob_id &lt;&gt; 'IT'OR salary = 12000; 综合案例3：查看departments表的结构 1DESC departments 综合案例4： 查看部门中涉及到那些位置编号 （关键是去重） 1SELECT DISTINCT location_id FROM departments; 排序查询语句（进阶三）语法：select 查询列表 ​ from 表名 ​ where 【筛选条件】 ​ oder by 排序列表【asc | desc】 特点： desc 降序，asc升序 不写的话默认升序 order by 子句可以支持单个字段，多个字段、表达式、函数、别名 order by 子句一般放在查询语句的最后面，limit子句除外。 案例1：查询员工工资，从高到底排序 12345SELECT *FROM employeesORDER BY salary DESC; 案例2：查询部门编号大于等于90的员工信息。按入职时间先后进行排序 1234567SELECT*FROMemployeesWHEREdepartment_id&gt;=90ORDER BY hiredate ASC; 案例3：【按表达式排序】按年薪的高低显示员工的信息和年薪 123456SELECT*,salary*12*(1+IFNULL(commission_pct,0)) AS 年薪FROMemployeesORDER BY 年薪 DESC; 案例4：按姓名的长度显示员工的姓名和工资【按函数排序】 1234567SELECTLENGTH(last_name) 字节长度,last_name,salaryFROM employeesORDER BY 字节长度 DESC; 案例5：查询员工信息，先按工资排序升序，再按员工编号排序降序【按多个字段排序】 12345SELECT*FROMemployeesORDER BY salary ASC,department_id DESC; 常见函数学习（进阶四）将一组逻辑语句封装在方法体中，对外暴露方法名 好处1：隐藏实现细节 2、提高代码重用性 调用：select 函数名(实参列表) 【from 表】 特点： 叫什么（函数名） 干什么的（函数功能） 分类 单行函数 字符函数、数学函数、日期函数、其他函数、流程控制函数， 分组函数 统计函数、聚合函数等 单行函数 字符函数 1、length 获取参数值的字节数 12SELECT LENGTH('jhon');SELECT LENGTH('张三丰hahaha'); 2、concat 拼接/连接 字符串 1SELECT CONCAT(last_name,'_',first_name) 姓名 FROM employees; 3、upper、lower 大写/小写 案例：将姓变大写，名变小写,然后拼接 1SELECT CONCAT(UPPER(last_name),LOWER(first_name)) 姓名 FROM employees; 4、substr/substring 截取字符长度 注意：截取从1开始 截取从指定索引处后面的所有字符 1SELECT SUBSTR('占敏捷爱上谢菲',6) 输出结果; 截取从指定索引处指定字符长度的字符 1SELECT SUBSTR('占敏捷爱上谢菲hahhahah',4,2) 输出结果; 案例1：姓名中首字母大写，其它字母小写，然后用_拼接 1SELECT CONCAT(UPPER(SUBSTR(last_name,1,1)),'_',LOWER(SUBSTR(last_name,2)))FROM employees; 5、instr 返回子串第一次出现的索引,如果找不到返回0。 6、trim 去前后空格 7、lpad 左填充 用指定的字符实现左填充指定长度 8、rpad 右填充 用指定的字符实现右填充指定长度 9、replace 全部替换 1SELECT REPLACE('张无忌爱上了周芷若','周芷若','赵敏') 输出; 数学函数 1、ronud 四舍五入 123SELECT ROUND(-1.55); -2SELECT ROUND(-1.45); -1SELECT ROUND(-1.45678,2); -1.46 四舍五入，并保留小数点后2位 2.ceil 向上取整 1SELECT CEIL(1.02); 2 返回》=该参数的最小整数 3.floor 向下取整 1SELECT FLOOR(9.99); 9 4、truncate 截断 1SELECT TRUNCATE(1.2345678,2); 1.23 5、mod 取余 mod(a,b)：a-a/b*b 12SELECT MOD(10,3); 1SELECT 10%3 1 6、rand 获取随机数，返回0-1之间的小数 日期函数 1、now/year/date/month/hour 返回当前系统日期+时间 1SELECT NOW(); 2、curdate 返回当前系统日期，不返回时间 1SELECT CURDATE(); 3、curtime 返回当前系统时间，不返回日期 1SELECT CURTIME(); 可以获取指定部分。年、月、日、小时、分钟、秒 1234SELECT YEAR(NOW()) 年;SELECT MONTH(NOW()) 月;SELECT MONTHNAME(NOW()) 月; November 4、str_to_data** 将字符通过指定的格式转换成日期 案例： 5、date_format 将日期转换成字符 案例：查询有奖金的员工名和入职日期（格式：xx年/xx月 xx年） 1234567SELECTlast_name,DATE_FORMAT(hiredate,'%m月/%d日 %y年') 入职日期FROMemployeesWHEREcommission_pct IS NOT NUL 相关格式符： 6、datediff、返回两个日期间的天数 7、monthname、以英文形式返回 其它函数 1234SELECT VERSION();SELECT DATABASES();SELECT USER();SELECT PASSWORD(); 流程控制函数 用于实现一些流程控制的 1、if函数 ：if else 的效果 if（条件表达式，表达式1，表达式2）:如果条件表达式成立，返回表达式1，否则返回表达式2； 12345SELECT last_name,commission_pct,IF(commission_pct IS NULL,'没奖金，呵呵','有奖金，嘻嘻') 备注；FROMemployees 2、case函数 case 使用语法一： 语法如下： case 变量或表达式或字段 when 常量1 then 值1 when 常量2 then 值2 …… else 值n end 案例1： 查询员工工资，部门号=30.显示工资为1.1倍；部门号为40，显示工资为1.2倍；部门号=50，显示工资为1.3倍；其它的部门显示的工资为原来工资。 12345678910SELECTsalary 原始工资,department_id,CASE department_idWHEN 30 THEN salary*1.1WHEN 40 THEN salary*1.2WHEN 50 THEN salary*1.3ELSE salaryEND AS 新工资FROM employees; case 使用方法二： 语法如下： case when 条件1 then 值1 when 条件2 then 值2 …… else 值n end 案例：查询员工的工资情况，如果大于20000，显示A级别；如果工资大于15000，显示A级别，如果工资大于10000，显示C级别，否则显示D级别 123456789SELECT salary,CASEWHEN salary&gt;20000 THEN 'A'WHEN salary&gt;15000 THEN 'B'WHEN salary&gt;10000 THEN 'c'ELSE 'D'END AS 工资级别FROMemployees; 综合案例 1：显示系统时间（注意：日期+时间） 1SELECT NOW(); 综合案例 2：查询员工号，姓名，工资，以及工资提高20%后的结果（new salary） 1234SELECTemployee_id,last_name,salary,salary*1.2 AS 'new aslary'FROMemployees; 综合案例 3：将员工的姓名按首字母排序，并写出姓名长度 12345SELECTlast_name 姓名,LENGTH(last_name) 姓名长度,SUBSTR(last_name,1,1) 首字母FROMemployeesORDER BY 首字母; 综合案例 4：做一个查询，产生下面的结果 earns monthly but wants &lt;salary*3&gt; Dream salary King earns 24000 monthly but wants 72000 12345SELECT CONCAT(last_name,'earns',salary,'monthly but wants',salary*3) AS "Dream alary"FROM employeesWHERE salary=24000; 综合案例 5：使用case-when 按照下面的条件： job qrade AD_PRES A ST_MAN B IT_PROG C SA_PRE D IT_CLEAR E 产生下面的结果 last_name job_id Grade King AD_PRES A 1234567891011SELECT last_name,job_id AS job,CASE job_idWHEN 'AD_PRES' THEN 'A'WHEN 'ST_MAN' THEN'B'WHEN 'IT_PROG' THEN 'C'WHEN 'SA_PRE' THEN 'D'WHEN 'IT_CLEAR' THEN 'E'END AS GradeFROM employeesWHERE job_id = 'AD_PRES' 分组函数 分组函数其功能：用作统计使用，又称为聚合函数或统计函数或组函数 分类包括：sum求和、avg平均值、max最大值、min最小值、count计算个数 语法：select max（字段）from 表名； 简单使用方法： 1234567SELECT SUM(salary) 求和,AVG(salary) 平均值,MIN(salary) 最小值,MAX(salary) 最大值,COUNT(salary) 计数值 FROM employees; 参数支持哪些类型 sum、avg 一般处理数值型 ​ max、min、count 可以处理任何类型 是否忽略null sum、avg、max、min、count 都忽略null值。 可以和distinct搭配 1SELECT SUM(DISTINCT salary),SUM(salary) FROM employees; count 函数详细介绍 123SELECT COUNT(字段) FROM employees; 统计该字段非空值的个数SELECT COUNT(*) FROM employees; 统计结果集的行数SELECT COUNT(1) FROM employees; 一般推荐COUNT(*) 来进行统计使 和分组函数一同查询的字段有限制，要求是group by 后的字段 综合案例1：查询公司员工工资的最大值，最小值，平均值及总和 1234567SELECT MAX(salary) 工资最大值,MIN(salary) 工资最小值,AVG(salary) 工资平均值,SUM(salary) 工资总和 FROM employees; 综合案例2：查询员工中的最大入职时间和最小入职时间的相差天数（DIFFRENCR） 12SELECT DATEDIFF(MAX(hiredate),MIN(hiredate)) DIFFRENCE FROM employees; 综合案例3：查询部门编号为90的员工个数 1234SELECT COUNT(*)FROM employeesWHEREdepartment_id=90; 分组查询语句（进阶五）语法： select 分组函数，列名（要求出现在group by 的后面） from 表名 【where 筛选条件】 group by 分组的列名 【order by子句】 注意： 查询列表必须特殊，要求是分组函数和group by后出现的字段 group by 支持单个字段查询，也支持多个字段查询（多字段之间用用逗号隔开，没有先后顺序之分） 也可插入排序语句，放在整个分组查询语句的最后 分组分类 1.分组前查询 原始表 group by 之前 2.分组后查询 分组后的结果集 group by 之后 能用分组前删选的，尽量用分组前查询。 简单分组查询 案例1：查询每个工种的最高工资 1234SELECTMAX(salary),job_idFROM employeesGROUP BY job_id; 案例2：查询每个位置上的部门个数 1234SELECTCOUNT(*),location_idFROM departmentsGROUP BY location_id; 添加删选条件的分组查询 1、添加分组前删选 案例1：查询邮箱中包含a字符的，每个部门的平均工资 123456SELECTAVG(salary),department_idFROM employeesWHEREemail LIKE '%a%'GROUP BY department_id; 案例2：查询有奖金的 每个领导手下员工的最高工工资 123456SELECTMAX(salary),manager_idFROM employeesWHEREcommission_pct IS NOT NULLGROUP BY manager_id; 2、添加分组后删选 案例1：查询哪个部门的员工个数大于2 思路：先查询每个部门的员工个数—再查询大于2个员工的部门 123456SELECTCOUNT(*),department_idFROMemployeesGROUP BY department_idHAVING COUNT(*)&gt;2; 案例2：查询每个工种有奖金的员工的最高工资大于12000的工种编号和最高工资 12345678SELECTMAX(salary),job_idFROMemployeesWHEREcommission_pct IS NOT NULLGROUP BY job_idHAVING MAX(salary)&gt;12000; 案例3：查询领导编号大于102的每个领导手下最低工资大于5000的领导编号 12345678SELECTMIN(salary),manager_id FROMemployeesWHEREmanager_id&gt;102GROUP BY manager_idHAVING MIN(salary)&gt;5000; 2.1、按表达式或函数分组 案例4：按员工姓名长度分组，查询每一组员工的个数，删选员工个数大于5的有哪些 123456SELECTCOUNT(*),LENGTH(last_name) 姓名长度FROMemployeesGROUP BY LENGTH(last_name)HAVING COUNT(*)&gt;5; 2.2、按多个字段分组 查询每个部门每个工种的员工的平均工资 12345SELECTAVG(salary),department_id,job_idFROM employeesGROUP BY department_id,job_id; 2.3、添加排序 查询每个部门每个工种的员工的平均工资，并按照工资从高到底排序 123456SELECTAVG(salary),department_id,job_idFROM employeesGROUP BY department_id,job_idORDER BY AVG(salary) DESC; 综合案例1：查询员工最高工资和最低工资的差距（DIFFERENCE） 1234SELECTMAX(salary)-MIN(salary) DIFFRENCEFROM employees; 综合案例2：查询各个管理者手下员工的最低工资，其中最低工资不能低于6000，没有管理者的员工不计算在内 1234567SELECTMIN(salary),manager_idFROMemployeesWHERE manager_id IS NOT NULLGROUP BY manager_idHAVING MIN(salary)&gt;=6000; 案例3：查询所有部门的编号，员工数量和工资平均值，并按平均工资降序 123456SELECTdepartment_id 部门编号,COUNT(*) 员工数量,ROUND(AVG(salary),2 )平均工资FROMemployeesGROUP BY department_idORDER BY 平均工资 DESC; 案例4：选择具有各个job_id的员工人数 12345SELECTCOUNT(*),job_idFROMemployeesGROUP BY job_id 连接查询语句（进阶六）当查询中涉及到多个表的字段，需要使用多表连接 select 字段1，字段2 from 表1，表2，…….. 笛卡尔乘积现象：表1 有m行，表2有n行，结果=m*n行,发生这个原因是由于没有有效的链接条件，要想避免该现象，只要添加有效的链接条件即可。 连接查询分类： 按年代分类： sql92 连接查询 等值 非等值 自连接 sql99 连接查询 （推荐使用） 内连接 等值 非等值 自连接 外连接 左外 右外 全外（MySQL不支持） 交叉连接 SQL92语法1、等值连接 语法： select 查询列表 from 表1 别名，表2 别名 where 表1.key=表2.key （等值连接条件） 【AND 删选条件】 【groub by 分组字段】 【having 分组后的删选】 【order by 排序】 注意事项： 多表的顺序没有要求 一般需要为表起别名 可以搭配前面介绍的所有查询语句 n表连接，至少需要n-1个连接条件 多表等值连接的结果为多表的交集部分 案例1：查询女神名对应的男神名 12SELECT NAME,boyname FROM boys,beautyWHERE beauty.boyfriend_id=boys.id ; 案例2：查询员工名和对应的部门名 1.2、为表起别名，提高语句简洁度/区分多个重名的字段。 如果为表起别名，则查询的字段就不能使用原来的表名 案例1：查询员工名，工种号、工种名 123SELECT d.last_name,d.job_id,s.job_titleFROM employees d,jobs sWHERE d.job_id=s.job_id; 1.3、可以加删选 案例1：查询有奖金的员工名、部门名 1234SELECT e.last_name,d.department_name,commission_pctFROM employees e,departments dWHERE e.department_id=d.department_idAND commission_pct IS NOT NULL; 案例2：查询城市名中第二个字符为O的对应的部门名和城市名 1234SELECT department_name,cityFROM departments d,locations fWHERE d.location_id=f.location_idAND city LIKE '_o%'; 1.4、加分组 案例1：查询每个城市的部门个数 1234SELECT COUNT(*),cityFROM departments d,locations lWHERE d.location_id=l.`location_id`GROUP BY city; 案例2：查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资 12345SELECT MIN(salary),f.manager_id,department_nameFROM employees d,departments fWHERE d.`department_id`=f.`department_id`AND commission_pct IS NOT NULLGROUP BY department_name,f.manager_id; 1.5、加排序 案例1：查询每个工种的工种名和员工个数，并且按员工个数降序 12345SELECT job_title,COUNT(*)FROM employees d,jobs fWHERE d.`job_id`=f.`job_id`GROUP BY job_titleORDER BY COUNT(*) DESC; 1.6 实现三表连接 案例1：查询员工名 部门名 所在城市 1234SELECT last_name,department_name,cityFROM employees d,departments m,locations sWHERE d.department_id=m.department_idAND m.`location_id`=s.`location_id` 2、非等值连接 语法： select 查询列表 from 表1 别名，表2 别名 where 非等值的连接条件 【AND 删选条件】 【groub by 分组字段】 【having 分组后的删选】 【order by 排序】 案例1：查询出员工 的工资和工资级别 123SELECT salary,grade_levelFROM employees e,job_grades fWHERE salary BETWEEN f.lowest_sal AND f.highest_sal; 3.自连接 语法： select 查询列表 from 表 别名1，表 别名2 where 非等值的连接条件 【AND 删选条件】 【groub by 分组字段】 【having 分组后的删选】 【order by 排序】 综合案例1：显示员工表的最大工资，工资平均值 1SELECT MAX(salary),AVG(salary) FROM employees; 综合案例2：查询员工表的employee_id,job_id,last_name,按department_id降序，salary升序 123SELECT employee_id,job_id,last_nameFROM employeesORDER BY department_id DESC,salary ASC; 综合案例3：查询员工表的job_id中包含a和e 的，并且a 在 e前面 123SELECT last_name,job_id FROM employeesWHERE job_id LIKE '%a%e%'; 综合案例4： 已知表student,里面有id（学号），name ， gradeID（年级编号） 已知表grade，里面有id（年级编号） ,name（年级名） 已知表result，里面有id ，score，studentNo（学号） 要求查询姓名、年级名、成绩 1234SELECT a.name b.name scoreFROM student a,grade b,result cWHERE a.id=c.studentNoAND a.gradeID=b.id 综合案例5：显示所有员工的姓名，部门号和部门名称 1234USE myemployees;SELECT last_name,d.department_id,department_nameFROM employees e,departments dWHERE e.`department_id`=d.`department_id`; 综合案例6：查询90号部门员工的job_id和90号部门的location_id； 1234SELECT job_id,location_idFROM employees e,departments dWHERE e.`department_id`=d.`department_id`AND e.department_id=90; 综合案例7：选择所有奖金员工的last_name，department_name,location_id,city 12345SELECT last_name,department_name,s.location_id,cityFROM employees e,departments d,locations sWHERE e.`department_id`=d.`department_id`AND d.`location_id`=s.`location_id`AND e.commission_pct IS NOT NULL; 综合案例8：选择city在Toroto工作的员工的last_name,department_id,department_name 12345SELECT last_name,e.department_id,department_name,f.cityFROM employees e,departments d,locations fWHERE e.`department_id`=d.`department_id`AND d.`location_id`=f.`location_id`AND f.`city`='Toronto' 综合案例9：查询每个工种、每个部门的部门名、工种名和最低工资 12345SELECT department_name,job_title,MIN(salary)FROM departments d,jobs j,employees eWHERE d.`department_id`=e.`department_id`AND j.job_id`=e.`job_id`group by department_name,job_title 综合案例10：查询每个国家下的部门个数大于2的国家编号 第77课时 12345SELECT country_id,COUNT(*)FROM departments d,locations sWHERE d.location_id=s.location_idGROUP BY country_idHAVING COUNT(*)&gt;2 SQL99语法语法： select 查询列表 from 表1 别名 【连接类型】jion 表2 别名 on 连接条件 【where 筛选条件】 【group by 分组】 【having 筛选条件】 【order by 排序条件】 分类 内连接：inner 外连接 左外：left 【outer】 右外: right 【outer】 全外： full 【outer】 交叉连接 1.内连接 语法： select 查询列表 from 表1 别名 inner join 表2 别名 on 连接条件； 分类： 等值 非等值 自连接 特点： 可添加排序、分组、筛选 筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读 inner 可以省略 inner join连接和sql92语法中的等值连接效果是一样的，查询表的交集部分 1.1、等值连接 案例1：查询员工名，部门名 1234SELECT last_name,department_nameFROM employees eINNER JOIN departments bON e.`department_id`=b.`department_id`; 案例2：查询名字中包含e的员工名和工种名 12345SELECT last_name,job_titleFROM employees eINNER JOIN jobs bON e.`job_id`=b.`job_id`WHERE last_name LIKE '%e%'; 案例3：查询部门个数&gt;3的城市名和部门个数 123456SELECT city,COUNT(*) 部门个数FROM locations lINNER JOIN departments dON l.`location_id`=d.`location_id`GROUP BY cityHAVING COUNT(*)&gt;3; 案例4：查询哪个部门的部门员工数》3的部门名和员工个数，并按个数降序排列。 1234567SELECT department_name,COUNT(*) 员工数FROM departments dINNER JOIN employees eON d.`department_id`=e.`department_id`GROUP BY department_nameHAVING 员工数 &gt;=3ORDER BY 员工数 DESC; 案列5：查询员工名、部门名、工种名，并按部门名降序 12345SELECT last_name,department_name,job_titleFROM employees eINNER JOIN departments d ON e.`department_id`=d.`department_id`INNER JOIN jobs j ON e.`job_id`=j.`job_id`ORDER BY department_name DESC 1.2、非等值连接 案例1：查询员工的工资级别 1234SELECT salary,grade_levelFROM employees eJOIN job_grades jON e.salary BETWEEN j.lowest_sal AND j.highest_sal; 案例2：查询工资级别的个数&gt;20的个数，并且按工资级别降序排序 1234567SELECT COUNT(*) 工资级别个数,grade_levelFROM employees eJOIN job_grades jON e.salary BETWEEN j.lowest_sal AND j.highest_salGROUP BY grade_levelHAVING COUNT(*)&gt;20ORDER BY COUNT(*) DESC; 1.3、自连接 案例1：查询姓名中包含K的员工的名字、上级名字 12345SELECT e.last_name 员工名,d.last_name 上级名FROM employees eINNER JOIN employees dON e.manager_id=d.employee_idWHERE e.last_name LIKE '%k%'; 1.4、左（右）外连接 应用场景：用于查询一个表中有，另一个表中没有的记录 特点： 1、外连接的查询结果为主表中的所有记录 如果从表中有和它匹配的，则显示匹配的值 如果从表中没有和他匹配的，则显示null 外连接查询结果=内连接结果+主表中有而从表中没有的记录 2、左外连接 left join 左边的是主表/右外连接 right join 右边是主表 3、左外和右外如果交换两表的顺序，可以实现同样的效果 案例1：查询没有男朋友的女神名 1234SELECT b.name,d.*FROM beauty bLEFT OUTER JOIN boys dON b.`boyfriend_id`=d.`id` 案例2：查询哪个部门没有员工 12345SELECT d.*,e.employee_idFROM departments dLEFT OUTER JOIN employees eON d.department_id = e.department_idWHERE e.employee_id IS NULL 1.5 全外连接 全外连接=内连接的结果+表1有表2没有的+表2有表1没有的 不支持 1.6、交叉连接 SQL99 语句图形示意： 综合案例1：查询编号&gt;3的女神的男朋友信息，如果有则列出详细，如果没有就用null填充 12345SELECT b.id,b.name,bo.*FROM beauty bLEFT OUTER JOIN boys boON b.`boyfriend_id`=bo.`id`WHERE b.id &gt;3; 综合案例2：查询哪个城市没有部门？ 12345678910111213左外连接SELECT city,s.*FROM departments sRIGHT OUTER JOIN locations lON s.`location_id`=l.`location_id`WHERE s.department_id IS NULL；右外连接SELECT city,s.*FROM locations lLEFT OUTER JOIN departments sON s.`location_id`=l.`location_id`WHERE s.department_id IS NULL； 综合案例3： 查询部门名为SAL或IT的员工信息 12345SELECT d.department_name,e.*FROM departments dLEFT OUTER JOIN employees eON d.`department_id`=e.`department_id`WHERE d.department_name IN('SAL','IT') 子查询语句（进阶七）出现在其它语句中的select语句，称为子查询或内查询 外部的查询语句，称为主查询或外查询 分类： 按出现的位置分类： select后面 仅仅支持标量子查询 from后面 支持表子查询 where或having后面 标量子查询、列子查询&gt;、行子查询 exists后面 表查询 按结果集的行列数不同： 标量子查询（结果集只有一行一列） 列子查询（结果集只有一列多行） 行子查询（结果集只有一行多列） 表子查询（结果集一般为多行多列） 1、where和having后面 标量子查询（单行子查询） 一般搭配单行操作符使用 列子查询（多行子查询） 一般搭配多单行操作符使用 in、any/some、all 行子查询（多列多行） 特点： 子查询放在小括号内 子查询一般放在条件的右侧 标量子查询，一般搭配单行操作符使用 子查询的执行优先与主查询执行 1.1where后面的标量子查询 案例1查询谁的工资比Albel的工资高 思路：1.查询Albel的工资——2.查询员工的信息，满足salary&gt;1的结果 123456789SELECT *FROM employeesWHERE salary&gt;(SELECT salaryFROM employeesWHERE last_name = "Abel"); 案例2：返回job_id与141号员工相同，salary比143号员工多的员工姓名，job_id 和工资 思路：1.查询 与141号员工相同的job_id——2.查询143号员工的工资——3查询员工姓名，job_id 和工资，满足1结果且工资大于2结果 123456789101112131415SELECT last_name,job_id,salaryFROM employeesWHERE job_id=(SELECT job_idFROM employeesWHERE employee_id=141)AND salary&gt;(SELECT salaryFROM employeesWHERE employee_id=143); 案例三：返回公司工资最少的员工的last_name,job_id和salary$$ $$ 12345678SELECT last_name,job_id,salaryFROM employeesWHERE salary=(SELECT MIN(salary)FROM employees); 案例4：查询最低工资大于50号部门最低工资的部门id和其最低工资 思路 :1、查询50号部门的最低工资——2、查询所有部门的最低工资——3、在2结果的基础上筛选 满足最低工资大于1结果 12345678910SELECT MIN(salary),department_idFROM employees GROUP BY department_idHAVING MIN(salary)&gt;(SELECT MIN(salary)FROM employees WHERE department_id=50); 1.2where后面的列子查询（多行子查询） in/not in (等于列表中的任意一个值) any|some （和子查询返回的某一个值比较） 推荐用 a&gt;min()代替a&gt;any() all （和子查询返回的所有值比较） 推荐用 a&gt;max()代替a&gt;any() 案例1：返回location_id 是1400或者1700的部门中所有员工的姓名 思路：1：查询location_id是1400或1700的部门编号—2：查询满足1结果的员工姓名 123456789SELECT last_nameFROM employeesWHERE department_id IN(SELECT DISTINCT department_idFROM departmentsWHERE location_id IN(1400,1700)); 案例2：返回其他部门中比job_id为’IT_PROG’部门任一工资低的员工的：工号、姓名、job_id,以及salary. 123456789SELECT employee_id,last_name,job_id,salaryFROM employeesWHERE salary &lt;ANY(SELECT DISTINCT salaryFROM employeesWHERE job_id='IT_PROG')AND job_id&lt;&gt;'IT_PROG' 案例3：返回其他部门中比job_id为’IT_PROG’部门所有工资低的员工的：工号、姓名、job_id,以及salary. 123456789SELECT employee_id,last_name,job_id,salaryFROM employeesWHERE salary &lt;(SELECT min(msalary)FROM employeesWHERE job_id='IT_PROG')AND job_id&lt;&gt;'IT_PROG' 1.3where后面的行子查询（结果集一行多列或多行多列） 案例：查询员工编号最小且工资最高的员工信息 方法1：之前的语法 123456789101112SELECT *FROM employeesWHERE employee_id=(SELECT MIN(employee_id)FROM employees)AND salary=(SELECT MAX(salary)FROM employees); 1.4 select后面 案例1：查询每个部门的员工个数 90~95级 重学&gt; 综合案列讲解： 1.查询工资最低的员工信息：last_name salary 思路1：查询最低工资 123select min(salary)from employees; 思路2：查询满足1的 last_name salary 1234567891011select last_name,salaryfrom employeeswhere salary=(select min(salary)from employees); 2.查询平均工资最低的部门信息 1234567891011SELECT *FROM departmentsWHERE department_id=(SELECT department_idFROM employeesGROUP BY department_idORDER BY AVG(salary) LIMIT 1); 3.查询平均工工资最低的部门信息和该部门的平均工资 123456789101112SELECT d.*,agFROM departments dINNER JOIN(SELECT AVG(salary) ag,department_idFROM employeesGROUP BY department_idORDER BY agLIMIT 1)ag_depON d.`department_id`=ag_dep.department_id 4.查询平均工资最高的job信息 123456789SELECT *FROM jobsWHERE job_id=(SELECT job_idFROM employeesGROUP BY job_idORDER BY AVG(salary) DESCLIMIT 1); 5.查询平均工资高于公司平均工资的部门有哪些？ 1234567891011SELECT d.department_name FROM departments dINNER JOIN (SELECT AVG(salary) dvg,department_idFROM employeesGROUP BY department_idHAVING AVG(salary)&gt;(SELECT AVG(salary) FROM employees)) dvg_depON d.department_id=dvg_dep.department_id 6.各个部门中最高工资中最低的那个部门的最低工资是多少 7.查询平均工资最高的部门的manager的详细信息：last_name,depatment_id,email,salary 6.查询出公司中所以有manager的详细信息 所有manager的员工编号 分页查询语句（进阶八）应用场景：当我们要显示的数据一页显示不全，我们就要分页提交sql请求。 语法： select 查询列表 from 表 【join type】join 表2 on 连接条件 where 删选条件 group by 分组字段 having 分组后的删选 order by 排序的字段 limit offset, size; 其中： offset：要显示条目的起始索引，从0开始,。从0开始offset可省略 size：要显示的条目个数; 特点： limit语句在查询语句的最后，在执行顺序中也是最后一步。 公式 要显示的页数 page, 每页的条目数size select 查询列表 from 表 limit （page-1）*size，size 123456size=10page1 02 103 20 案例1：查询前五条员工信息 123SELECT *FROM employeesLIMIT 0,4; 案例2：查询第1条—第25条 123SELECT *FROM employeesLIMIT 10,15; 案例3：有奖金的员工信息，并且工资较高的前10名显示出来 1234SELECT *FROM employeesWHERE commission_pct IS NOT NULL ORDER BY salary DESC LIMIT 10; 综合案例讲解： 已知表 stuinfo id 学号 name 姓名 email 邮箱 grade id 年级编号 sex 性别 男 女 age 年龄 已知表 grade id 年级编号 gradeName 年级名称 答题1：查询所有学员的邮箱用户名（注：邮箱中@前面的字符） 123select substr(email,1,instr(email,‘@‘)-1) 用户名from stuinfo 注： instr(field, str) 函数，第一个参数 field 是字段，第二个参数 str 是要查询的串，返回串 str 的位置，没找到就是0 答题2：查询男生和女生的个数 12345select count（*）个数，sexfrom stuinfo group by sex; 答题3：查询年龄大于18岁的所有学生的姓名和年级名称 1234567select s.name,g.gradeNamefrom stuinfo sinner join grade g on s.grade id=g.idwhere age&gt;18; 答题4：查询哪个年级的学生最小年龄&gt;20岁 思路1：查询每个年级学生的最小年龄数 2:在一的基础上删选 1234567select min(age),grade idfrom stuinfogroup by grade idhaving min(age)&gt;20; 答题5：试说出查询语句中涉及到的所有关键字，及执行先后顺序 select 查询的列表 7 from 表 1 1 链接类型 join 表2 2 on 连接条件 3 where 删选条件 4 group by 分组条件 5 having 分组后的删选条件 6 order by 排序条件 8 limit 偏移条目数 9]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL学习笔记一：MySQL8.0安装及启动]]></title>
    <url>%2Fposts%2Fca03e1e5.html</url>
    <content type="text"><![CDATA[MySQL介绍MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。 其特点在于：开源、免费、成本低；性能高、移随性好；体积小、便于安装。 目前MySQL已推出8.0版本。 数据库概念1、数据库好处 可以持久化数据到本地 结构化查询 2、数据库常见概念 DB (Data Base)，存储数据的仓库 DBMS (Data Base Management System) 数据库管理系统，DB是通过DBMS创建和操作的容器。 SQL（Strucure Query Language）结构化查询语言，专门用来同数据库通信的语言。 其特点： DBMS都支持SQL 简单易学 是一种强有力的语言。 3、MySQL存储数据的特点 1、将数据放到表中，再将表放到数据库中。 2、一个数据库中可以有多个表，每个表都有一个名字，每张表具有唯一的表名，用来标识自己。 3、表具有一些特性，这些特性定义了数据在表中如何存储。 Win10下安装MySQL8.0下载MySQL8.0添加环境变量Windows下安装数据库，将下载的的压缩包解压， 文件位于：C:\mysql-8.0.18-winx64 然后去配置环境变量，点击电脑-&gt;属性-&gt;高级系统配置-&gt;环境变量；先对系统变量进行设置 新建配置文件打开mysql-8.0.16-winx64文件，在当前目录下，新建一个名为my.ini的文件，然后打开该文件，将下列代码加入到该文件中； 12345678910111213141516171819202122232425[mysqld]# 设置3306端口port=3306# 设置mysql的安装目录basedir=C:\mysql-8.0.18-winx64# 设置mysql数据库的数据的存放目录datadir=C:\mysql-8.0.18-winx64\Database# 允许最大连接数max_connections=200# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统max_connect_errors=10# 服务端使用的字符集默认为UTF8character-set-server=utf8# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB# 默认使用“mysql_native_password”插件认证default_authentication_plugin=mysql_native_password[mysql]# 设置mysql客户端默认字符集default-character-set=utf8[client]# 设置mysql客户端连接服务端时默认使用的端口port=3306default-character-set=utf8 命令行登录进入C:\mysql-8.0.18-winx64\bin 目录,以管理员身份打开CMD窗口， 1C:\WINDOWS\system32&gt;CD C:\mysql-8.0.18-winx64\bin MySQL服务安装， 执行mysqld install命令当出现Service successfully installed时表示mysql服务安装完成 ， 1mysqld --install 注意：mysqld –install [服务名] 后面的服务名可以不写，默认的名字为 mysql。当然，如果你的电脑上需要安装多个MySQL服务，就可以用不同的名字区分了，比如 mysql5 和 mysql8。 MySQL服初始化， 在MySQL安装目录的 bin 目录下执行命令： 1mysqld --initialize --console 执行完成后，会打印 root 用户的初始默认密码，比如： 注意！执行输出结果里面有一段： [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: Ng* jbnKGd2!其中root@localhost:后面的“Ng*jbnKGd2!”就是初始密码（不含首位空格）。在没有更改密码前，需要记住这个密码，后续登录需要用到。要是手贱，关快了，或者没记住，那也没事，删掉初始化的 datadir 目录，再执行一遍初始化命令，又会重新生成的。当然，也可以使用安全工具，强制改密码，用什么方法，自己随意。 启动MySQL的服务，通过命令net start mysql启动 进入D:\Program Files\mysql-8.0.11-winx64\bin路径下，执行mysql -u root -p命令，然后输入之前保存的密码，我这里是Ng*jbnKGd2_! 121、cd C:\mysql-8.0.18-winx64\bin2、mysql -u root -p 至此数据库安装成功 修改初始登陆密码： 修改用户密码，在MySQL中执行命令： 1ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'qq886991985'; Navicat Premium 12 登录MySQLNavicat Premium 12+注册机 简单连接配置即可连接使用，使用界面如下： 服务的启动和停止方式一：net start 服务名 / net stop 服务名 方式二: 计算机—右击—管理—服务 登录和退出登录：MySQL 【-h 主机名 -p 端口号】-u 用户名 -p密码 退出：exit 或者 ctrl +C]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win10中使用Hyper-V安装Ubuntu18.04并SSH远程]]></title>
    <url>%2Fposts%2Fb9259de4.html</url>
    <content type="text"><![CDATA[安装Hyper-V 首先安装Hyper-V：打开Win10控制面板–程序–启用或关闭Windows功能–选择Hyper-V勾选上（全部）–然后点击确定进行安装 。 等待安装完毕后重启电脑，安装即可生效。 快速创建虚拟机提前下载Ubuntu操作系统镜像文件。 最后点击创建虚拟机，进入以下界面并点击链接 点击启动 进入到下面页面后选择Install Ubuntu，进行Ubuntu系统安装： 进入安装界面后，选择中文（简体），然后继续： 键盘布局选择默认就好，然后继续： 选择正常安装，其他选项暂不勾选，避免安装速度过慢，然后继续： 由于是在虚拟机里面，选择第一项就好，然后选择现在安装开始安装系统： 点击中国所在位置，选择时区，然后继续： 设置用户信息及登陆信息，然后继续： 等待安装完成： 进入主界面，打开终端安装net-tools(可以通过ifconfig查询主机IP) 1sudo apt install net-tools 查看 ubuntu 的 ssh 服务是否启动 1ps -e | grp ssh 出现以下提示，表示Openssh-Server已安装。 若未出现以上提示则需要安装openssh-server,方ssh软件远程操作 1sudo apt-get install openssh-server 设置防火墙允许22端口被访问 1sudo ufw allow 22 查询主机IP Win+R 调用命令提示符CMD Ping 虚拟机主机地址+端口 并回车 1telnet 172.31.84.77 22 出现如下提示表示 地址端口可以ping通。 安装远程登陆软件推荐MobaXterm 安装完毕后，进行相关登录设置 至此SSH远程登陆成功]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Hyper-V</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书计划2019]]></title>
    <url>%2Fposts%2F10f46d57.html</url>
    <content type="text"><![CDATA[读书是一剂良药读书读来读去，读的都不是未来，而是过去。人为何要钟情于阅读？ 有些人，经历一些生活的打击，会怨恨，愤慨，绝望。而还有一些人，经历一些生活的打击，反而学会了宽恕，淡忘，释然。后者多半内心平静。从前有人说，现在静不下来读书了。另一人说，搞错了，不是静下来读书，是读书让你静下来。读书到底有没有用，我想说某种程度上没有用，但它能让人平静。平静这种心情， 在这样躁动的年代，书是一种精神药物。摆在书架上，它就像是一颗颗药丸，各有不同的功效，治各种不同的精神创伤。 读书计划2019职场管理类❤️❤️ 小强升职记 - 邹鑫 ❤️搞定 - [美]戴维·艾伦 🤍专业主义 - 大前研一 ❤️非暴力沟通 - [美] 马歇尔·卢森堡 原则 - [美]瑞·达利欧 ❤️每周工作4小时 - 蒂莫西·费里斯 ❤️高效演讲-胡维 ❤️把时间当作朋友-李笑来 经济类❤️ 穷爸爸富爸爸 - [美] 罗伯特·清崎 ❤️ 小狗钱钱 - [德] 博多·舍费尔 🤍魔鬼经济学 - [美] 史蒂芬·列维特 互联网类❤️人人都是产品经理 - 苏杰 ❤️人人都是产品经理2.0 - 苏杰 ❤️新零售的未来 - 翁怡诺 重新定义公司 - [美]埃里克·施密特 参与感_小米口碑营销内部手册 从零开始做运营进阶篇-张亮 生活技能类❤️斯坦福完美睡眠法 - 西野精致 ❤️如何阅读一本书 - [美]莫提默·J.艾德勒 美国纽约摄影学院摄影教材（上） 美国纽约摄影学院摄影教材（下） 社会人文🤍激荡十年 - 吴晓波 🤍激荡三十年 - 吴晓波 🤍大败局 - 吴晓波 ❤️❤️今日简史 - 尤瓦尔·赫拉利 ❤️❤️未来简史 - 尤瓦尔·赫拉利 事实 - 汉斯·罗斯林 ❤️乌合之众 - (法)古斯塔夫.勒庞 小说❤️❤️三体1-地球往事 - 刘慈欣 ❤️❤️三体2-黑暗森林 - 刘慈欣 ❤️❤️三体3-死神永生 -刘慈欣 ❤️流浪地球 - 刘慈欣 ❤️长安十二时辰 🤍古董局中局1- 武则天明堂玉佛头失窃案 🤍古董局中局2- 清明上河图 🤍古董局中局3- 掠宝清单 🤍古董局中局4- 大结局 历史❤️空王冠 玫瑰战争与都铎王朝的崛起 ❤️易中天 品三国 ❤️易中天 风流南宋]]></content>
      <categories>
        <category>书单</category>
      </categories>
      <tags>
        <tag>书单</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5G移动通信技术简介(二)]]></title>
    <url>%2Fposts%2Fbc8dfb1d.html</url>
    <content type="text"><![CDATA[第五代移动通信技术（英语：5th generation mobile networks或5th generation wireless systems、5th-Generation，简称5G或5G技术）是最新一代蜂窝移动通信技术，也是即4G（LTE-A、WiMax）、3G（UMTS、LTE）和2G（GSM）系统之后的延伸。5G的性能目标是高数据速率、减少延迟、节省能源、降低成本、提高系统容量和大规模设备连接。Release-15中的5G规范的第一阶段是为了适应早期的商业部署。Release-16的第二阶段将于2020年4月完成。 下面简单对5G移动通信技术作基本介绍：]]></content>
      <categories>
        <category>移动通信</category>
      </categories>
      <tags>
        <tag>5G</tag>
        <tag>移动通信</tag>
        <tag>通信技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5G移动通信技术简介(一)]]></title>
    <url>%2Fposts%2F57e87839.html</url>
    <content type="text"><![CDATA[第五代移动通信技术（英语：5th generation mobile networks或5th generation wireless systems、5th-Generation，简称5G或5G技术）是最新一代蜂窝移动通信技术，也是即4G（LTE-A、WiMax）、3G（UMTS、LTE）和2G（GSM）系统之后的延伸。5G的性能目标是高数据速率、减少延迟、节省能源、降低成本、提高系统容量和大规模设备连接。Release-15中的5G规范的第一阶段是为了适应早期的商业部署。Release-16的第二阶段将于2020年4月完成。 下面简单对5G移动通信技术作基本介绍：]]></content>
      <categories>
        <category>移动通信</category>
      </categories>
      <tags>
        <tag>5G</tag>
        <tag>移动通信</tag>
        <tag>通信技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云之对象存储OSS]]></title>
    <url>%2Fposts%2F411cd2b5.html</url>
    <content type="text"><![CDATA[什么是OSSOSS对象存储服务，是阿里云提供的海量、安全、低成本、高可靠性的云存储服务。提供与平台无关的RESTful API接。基于盘古架构提供99.99999999999%的服务持久性。相比较物理存储它的优势在于：海量、安全、高可靠性、低成本。按量收费，无需担心存储容量。 OSS主要功能1、任何时间、任何地点、任何平台上对数据进行上传和下载 2、通过API或者WEB页面方式管理海量数据 3、弹性扩展，海量存储空间，随时增加，弹性增长 4、大规模，支持同一时间内高并发，大流量的读写访问。 5、图片处理，OSS上的图片，支持缩略、裁剪、水印、压缩和格式转换 6、按使用付费，按照存储、流量、请求次数付费，节省成本。 OSS特点1、稳定 服务设计可用性不低于99.9% 规模自动扩展，不影响对外服务 数据三重备份，持久性99.9999999999% 2、低成本 与传统硬件存储系统高投入相比，OSS使用成本低很多。 通过内网地址访问，免流量费，无需运维投入。 3、安全 结合云盾防DDoS系统 多种安全认证机制 提供访问日志有助于追查非法访问 4、大规模、高性能 存储容量无限扩展 处理能力弹性增长 多线BGP，各运营商访问流畅 OSS应用场景适合作为应用程序的持久化存储 应用场景1：数据处理（IMT）剪裁、旋转、水印、缩放/媒体转码（MT）音视频格式转换 应用场景2：海量存储 网络摄像机直存等 应用场景3: 动静态资源分离 动态资源：数据库记录 静态资源：利用BGP网络实现网页中图片、附件、音视频资源的超低延时传输。 OSS访问域名和数据中心Bucket和数据中心的关系： Bucket是地域内作用的资源，可按照费用的单价，请求来源分布，网络延迟等方面的综合考虑。Bucket一旦创建完成，不可以修改所属的数据中心。 OSS支持Bucket级别的数据中心设置，不支持Object设置数据中心。Bucket所在的数据中心确定后，该Bucket下的所有Object将一直存放在该数据中心中。 访问OSS的数据请求，都是针对Bucket的三级域名[Bucket名字+.+EndPoint(根据Bucket所在地域的不同，内外网访问方式的不同会有所区别) 以华北2节点位列： 外网地址为：oss-cn-beijing.aliyuncs.com 内网地址为：oss-cn-beijing-internal.aliyuncs.com Bucket内网访问 内网访问OSS需要满足以下两个件. 条件1:只有ECS实例可以通过Bucket内网地址进行访问 条件2：ECS实例和Bucket在同一个地域，如不在同一个地域，需使用Bucket外网域名访问 Object访问地址构成规则 1、bucket的权限为公共读或公共读写，Object的访问规则如下： 2、http://&lt;bucket名字&gt;./&lt;object名字&gt; 3、可以直接将URL连接写入HTML中访问Object 使用Bucket1、Bucket是OSS上的命名空间，也是计费、权限控制、日志记录功能的管理实体。 2、Bucket名称在整个OSS服务中具有全局唯一性，存储OSS上的每一个Object必须都包含在Bucket中。 3、一个应用，例如图片分享网站，可以对应一个或多个Bucket中。 4、一个用户在同一地域下最多可以创建30个Bucket,一旦创建成功，其名称、所处地域、存储类型不能修改。每个Bucket中存放的Object没有限制，存储容量没有限制。 其命名规则： 只能包括小写字母，数字和短横线（-） 必须以小写字母或者数字开头和结尾。 长度必须3-63字节之间。 Object操作1、Object是OSS存储数据的基本单元，也被称为OSS文件。 2、Object由元信息，用户数据和文件名组成，对象由存储空间内部唯一的KEY来识别。 3、根据不同的上传方式，object的大小限制是不一样的，分片上传最大支持48.8T的对象大小，其它的上传方式最大支持5GB。 4、Object在管理控制台上展现的形式为文件或文件夹，OSS服务没有文件夹的概念，所有文件都是由 Object来存储，文件夹本质上是创建一个size为“0”以“/”结尾的Object,方便在OSS控制台上管理Object。 命名规则： 使用UTF8编码 长度必须在1-1023字节之间 不能以“/”或“\”字符开头 区分大小写 获取文件访问地址 非私有：http://&lt;bucket名字&gt;./&lt;object名字&gt; 私有：http://&lt;bucket名字&gt;./&lt;object名字&gt;&lt;?签名字符串&gt; 删除文件 可单个删除/批量删除/自动删除 碎片管理 分片上传，超过一定容量的文件需要使用分片上传模式时，将Object切成若干个的Part,这些Part称为碎片。 自定义域名绑定使用场景：网页静态内容存储在OSS Bucket中时 域名绑定说明： OSS域名绑定（CNAME）功能目前只支持OSS三级域名访问方式进行绑定。既OSS配置方式为bucket_name.endpoint。 OSS未绑定域名，通过浏览器访问Object的URL，则为强制下载模式。 绑定的域名需要提供工信部备案号，域名持有者身份证等有效资料。经由阿里云审批通过后可以使用。 每一个Bucket可以绑定20个域名。 绑定自定义域名前的访问方式： http://&lt;bucket名字&gt;./&lt;object名字&gt; 绑定自定义域名后的访问方式： http://自定义域名/Object名字 防盗链设置试用场景：为减少存储于OSS的数据被他人盗链而产生额外的费用。 OSS是按照使用量收费的服务，为减少OSS的数据被其它人盗链而产生额外的费用。OSS支持基于HTTP Header中字段referer的防盗链方法。 每个referer白名单使用换行符风格，支持通配符（*，？） 白名单为空时： 不会检查referer字段是否为空 白名单不为空： 设置不允许referer字段为空的规则：只有referer属于白名单的请求被允许，其它请求（包括referer为空的请求）会被拒绝。 设置了允许referer字段为空的规则；则referer为空的请求和符合白名单的请求会被允许，其它请求都会被拒绝。如果使用浏览器直接浏览，需要设置referer字段为空。 静态网站托管 OSS支持静态网站托管。通过OSS控制台将自己的存储空间配置成静态网站的托管模式。支持索引和404默认页面，仅支持当前Bucket下的html格式的文件；为空则不启用静态网站托管。 静态网站托管网址：http://osstest.acper.net/ OSS图片处理图片服务（IMG）是阿里云OSS对外提供海量、安全、低成本、高可靠性的图片处理服务。 调用简单：通过调用阿里云提供的RESTfUL接口调用，不受时间、地点、设备的限制。随OSS服务一并开通，无需单独开通。 1、图片服务提供如下功能： 图片缩放、剪裁、旋转 图片添加图片、文字、混合水印 图片格式转换 自定义图片处理样式 通关管道顺序调用多种图片处理能力 获取图片信息 2、图片服务规则： 通过URL的形式进行服务。 http://Bucket./object?x-oss-process=image/action.parame_value ​ Bucket:用户的IMG频道 ​ endpoint：用户的Bucket所在数据中心的访问域名。 ​ object:在IMG中，用户操作图片的基本数据单元是Object。既OSS对应的Object,单个Object允许的最大大小是20MB. ​ action:用户对图片做的操作。 ​ parame:用户对图片做的操作所对应的参数。 3、URL方式访问： &lt;文件URL&gt;?x-oss-process=style 例如：http://osstest.acper.net/image.jpg?x-oss-process=style/imgtest1 4、分隔符方式访问： &lt;文件URL&gt;&lt;分隔符&gt; 例如：http://osstest.acper.net/image.jpg@!imgtest1 OSS安全控制安全功能介绍基于盘古分布式架构建设。 安全控制OSS提供Bucket object级别的权限访问控制。 权限包括： 公共读写——任何人可以对bucket中的Object读写、操作 公共读写、私有读写——只有创建者或被授权者可以对Bucket中的Object进行读写操作，任何人可以对Object进行读操作。 私有读写——只有创建者或被授权者可以对Bucket中的Object进行读写操作，其它人未经许可无法访问。 默认权限——Bucket是什么权限，Object就是什么权限。 防盗链OSS是按量收费的服务，OSS基于HTTP Header中的字段referer的防盗链方法。 服务器端加密存储OSS支持在服务器端对用户上传的数据进行加密编码。数据上传时，OSS对收到的数据进行加密编码并保存。数据下载时，OSS自动对保存的加密数据进行解密并把原始数据返回给用户。并在返回的HTTP请求Header中，声明该数据进行了服务器端加密。 支持加密的操作包括： Put Object:简单上传 Copy Object:复制Object Initiate Multipart Upload:分片上传 客户端加密SDK1、使用阿里云KMS托管用户主密钥，上传对象时指定KMS用户主密钥ID。 2、用户自主管理密钥，自主生成并保管加密密钥，当用户本地客户端加密时，由用户自主上传加密密钥 至本地加密客户端。]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>OSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云之虚拟私有云VPC]]></title>
    <url>%2Fposts%2Ffa1159eb.html</url>
    <content type="text"><![CDATA[VPC概念介绍1、什么是虚拟专用网络VPC问题1？系统上云后，是否可以向管理传统数据中心一样进行管理？ 问题2？已经有了一个数据中心，后续的扩容以及新系统的建设想建设在阿里云上，如何处理云上系统及现有系统之间的管理？ 基于上述2个问题，阿里云VPC应运而生。 2、虚拟专用网络VPC的特点1、VPC VLAN级别的隔离，彻底阻断VPC之间的网络通信。 2、实现网络地址的自定义，我的地盘我做主。 3、专线/VPN接入，实现传统架构的平滑上云。 3、VPC产品介绍专有网络是自己完全掌控的网络，例如选择IP地址范围、配置路由表、网关等，可以在自定义的专有网络中使用阿里云相关产品。 专有网络支持连接到其它专有网络或本地网络，形成一个按需定制的网络环境。实现应用的平滑迁移上云和对数据中心的扩展。 专有网络VPC是基于阿里云构建的一个隔离的网络环境，专有网络之间逻辑上彻底隔离。其优势主要为：安全隔离、软件定义网络、访问控制、丰富的网络连接控制、 VPC功能特点特点1：安全隔离 使用隧道技术实现传统VLAN相同的隔离效果。 实现了不同云服务器间的二层网络隔离。（网卡MAC信息不进入物理网络）因此也实现了不同专有网络之间的二层网络隔离。 专有网络内的ECS使用安全组防火墙进行三层网络访问控制。 解决的问题 专有网络之间的彻底隔离。 专有网络内，网卡级别的隔离。 特点2：访问控制 灵活的访问控制规则。 满足政务、金融的安全隔离规范。 特点3：软件自定义网络 按需配置网络，软件定义网络。 管理操作实时生效。 特点4：丰富的网络连接方式 支持专线连接 支持软件VPN VPC应用场景应用场景一: 本地数据中心+云上业务 混合模式 将内部核心系统与核心数据放置在自建的数据中心。来确保核心数据的安全性。 云上部署对外客户的应用系统，实现对业务访问的激增。 应用场景二: 多租户的安全隔离 希望在云上构建一个完全隔离的业务环境。传统云架构的多租户共享机制不能保证数据的安全性。 自主定义私有网络配置。 应用场景三: 主动访问公网的抓取类业务 专有网络中的多个服务器可以主动访问互联网。 避免这些服务器的公网IP暴露在公网上。 应用场景四: 多个应用流量波动大—共享宽带包 系统中同时存在多个面向互联网的应用 各个应用都需要对外提供服务，并且其波峰时间点不一致。 VPC网络基本概念OSI以太网7层协议 OSI以太网7层协议和TCP/IP协议比较 数据链路层：网桥、二层交换机、网卡 网络层：路由器、三层交换机 路由器和二层交换机的区别路由器： 工作在网络层（三层） 以IP地址作为为寻址方式，支持TCP/IP协议 支持划分子网 可以连接不同的网段（跨网段） 二层交换机： 工作在数据链路层（二层），以MAC地址作为寻址方式 不能划分子网 用于同一网段内的数据交换 路由器和网关网关是一个网络连接另一个网络的“关卡”，它是一个逻辑概念。 路由器是物理设备 路由器可以实现网关的功能。 网关也可以由局域网中的一台双网卡机器来实现。 VLAN（虚拟局域网）是一组逻辑上的设备和用户，不受物理位置限制，可以根据部门、应用、功能等因素讲他们组织起来，相互之间的通信就好像在同一个网段中一样。 VLAN之间默认是二层联通。三层通过对数据包封装VLAN_ID隔离。 VLAN之间需要通过网关来实现数据交换。 其优点： 端口隔离，通过一台交换机进行多个VLAN划分，实现交换机的利用最大化。 提高安全，含有敏感数据的用户组可与网络的其它部分隔离。 管理灵活，将不同地点、不同网络，不同用户组组合在一起，形成一个虚拟的网络环境。 VPC云产品综述VPC是用户独有的、完全掌控的的云上私有网络。可以根据需求对IP地址、路由表和网关等网络基础要素进行统一规划并使用阿里云提供的其它产品。（如ECS、RDS、SLB） VPC由虚拟路由器和虚拟交换机共同组成。 为实现和本地数据中心的平滑互通，可通过使用高速通道（专线）或VPN方式，将VPC与原有的本地物理网络连接，组成混合网络。 VPC的安全隔离1、不同账号的云服务器在不同的VPC里。 2、VPC基于目前主流的隧道技术，每个VPC都有一个独立的隧道ID。一个隧道ID对应一个VPC。一个VPC内的云实例之间的传输数据包都会加上隧道ID封装，带有唯一隧道ID标识，然后送到物理网络上进行传输，不同VPC内的ECS实例因为所在隧道ID不同，本身处于两个不同的路由平面。所以不同VPC内的云产品实例无法进行通信，天然被隔离。 3、不同专有网络之间内部网络完全隔离,只能通过对外映射IP（弹性公网IP和NAT IP）互联。 VPC名词解释 VPC与其它云产品之间的关系VPC阿里主推网络类型，支持VPC的阿里云产品有：ECS、SLB、RDS。 VPC创建成功并创建虚拟交换机后，具备了在相应地域下可用区中创建处于这个交换机下的ECS、RDS和SLB实例。 VPC收费模式 VPC：免费（VPC内的 路由器、交换机、路由表、路由条目、私网高可用虚拟IP） 弹性公网IP：收费（预付费和后付费两种模式 ） VPC创建创建VPC1、创建VPC时，需以CIDR Block 方式指定VPC 内私网网段。-指定的网段无法修改。 2、VPC创建成功后，任需创建虚拟交换机，之后才可以创建云产品实例（ECS、SLB、RDS）。 3、删除指定的VPC前，必须先删除VPC内的所有云产品实例（安全组、交换机、产品实例、路由条目）。 如何使用交换机1、VPC状态为可用时，才能创建交换机。 2、交换机不支持并行创建，只支持one by one方式创建。 3、交换机创建后，不能再修改网段。 4、删除交换机之前，必须先删除交换机下的所有云产品实例。 弹性公网IP的使用申请弹性公网IP]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>VPC</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云之弹性伸缩服务ESS]]></title>
    <url>%2Fposts%2F5a90a5b6.html</url>
    <content type="text"><![CDATA[什么是弹性伸缩服务ESSESS介绍 ESS(弹性伸缩)自动调整弹性计算资源大小，来满足业务需求的变化。可根据设置的伸缩策略，在业务需求增长时自动增加ECS实例来保证计算能力。在业务需求降低时，自动减少ECS实例来节约成本。 ESS伸缩性服务的特点 弹性扩展、弹性收缩、弹性自愈 ESS名词解释 弹性伸缩（Auto Scalling） 弹性伸缩是根据用户的业务和策略，自动调节其弹性计算资源的管理服务。其能够在业务增长的时自动增加ECS实例，并在业务下降时自动减少ECS实例。 伸缩组 伸缩组是具有相同应用场景的ECS实例集合，伸缩组定义了组内ECS实例数的最大值，最小值及相关的负载均实例和RDS实例等属性。 伸缩配置 伸缩配置定义了用于弹性伸缩的ECS实例的配置信息。 伸缩规则 伸缩规则定义了具体的扩展和收缩操作，例如加入或移出N个ECS实例。 伸缩活动 伸缩规则成功触发后，就会产生一条伸缩活动，伸缩活动主要用来描述伸缩组内ECS实例变化情况。 冷却时间 冷却时间指，在同一伸缩组内，一个伸缩活动执行完成后的一段锁定时间。在这段锁定时间内，该伸缩组不执行其他的伸缩活动。 ESS概念之间的关系 伸缩配置 伸缩规则 包含在伸缩组中（管理生命周期） 伸缩活动 ​ 伸缩触发任务有定时服务,云监控报警任务等类型。 ​ 定时任务，不依赖伸缩组的生命周期管理，删除伸缩组不会删除定时任务。 ESS使用规则ESS使用规则一伸缩规则 定义了具体扩展或伸缩操作，例如加入或移出N个实例 伸缩规则对ECS实例数量是执行增加或是减少的操作。是根据伸缩组中定义的MinSize和MaxSize判断的。 ​ 例如某个伸缩组：MaxSize=3 当前实例数2，伸缩规则定义为增加3台ECS实例。实际执行过程中只会增加1台ECS实例（伸缩规则中的值不会调整） ​ 例如某个伸缩组：MinSize=2 当前实例数3，伸缩规则定义为减少5台ECS实例。实际执行过程中只会较少1台ECS实例（伸缩规则中的值不会调整） ESS使用规则二伸缩活动 同一伸缩组内，同一时刻只能有一个伸缩活动在执行。 伸缩活动不可以中断，某个创建20台ECS实例的伸缩活动在执行时，当创建到第6台ECS实例时，无法强制终止该伸缩活动。 伸缩活动有ECS实例加入伸缩组失败时，需要保持ECS实例级事务的完整性。而非伸缩活动级事务的完整性。既进行ECS实例回滚，而非伸缩级回滚。例如，当伸缩组创建了20台ECS实例，只有19台成功加入SLB负载均衡，则只对1台不成功的ECS实例进行释放操作。 ESS使用规则三冷却时间 伸缩组在冷却时间内，只会拒绝云监控报警任务类型的伸缩活动请求，其它类型的触发任务可以绕过冷却时间立即执行伸缩活动。 伸缩规则冷却时间和伸缩组默认冷却时间同时存在时，以伸缩规则的冷却时间为伸缩活动的执行标准。 当伸缩组加入或移除多个ECS实例时，只有最后一个ECS实例加入或移出完成后，整个伸缩组的冷却时间才开始计算。 停用伸缩组后再开启伸缩组，冷却时间效果会消失。 ESS收费介绍弹性伸缩免费。 通过弹性伸缩自动创建的或手工添加的ECS实例按ECS相关实例类型进行付费。 按量付费ECS关机后，任收取实例费用。只有释放后才不再收取。 弹性伸缩尽力保证弹性伸缩服务足额正常弹出，也存在由于地域云服务器库存不足，启动时间长等问题导致弹性伸缩的实例无法全额弹出的情况。 ESS的定时模式 定时模式 自定义自动伸缩发生的时间和频率，例如每天13:00添加ECS实例。 动态模式 基于云动态监控指标(如CPU性能指标)自动增加或减少ECS实例。 固定数量模式 通过设置最小实例数（MinSize）,既健康运行ECS实例最小数量，以保证可用性。 自定义模式 通过API调用自有监控系统，执行手动操作。 健康模式 ECS实例为非RUNNING状态时，弹性伸缩将自动移出或释放不健康ECS。 多模式并行 以上所有模式都可以组合配置，例如设置每天13:00~14:00创建20个ECS实例来应对业务高峰，但实际情况可能需要 多于20个的实例，则可以选择其它模式与定时模式配合一起使用。 ESS限制伸缩组内部署在ECS实例的应用必须无状态，并且可横向扩展 。 弹性伸缩无法自动添加ECS实例到开放缓存，实例白名单需要自行添加。 弹性伸缩无法纵向扩展，既无法自动升降ECS实例的vCPU,内存，带宽等。 数量限制 伸缩组：20个，每一个伸缩组内可创建10个伸缩配置及50个伸缩规则。 支持ESS实例：1000台（含自动添加，不包含手动添加）。 定时任务：20个。 伸缩组创建创建伸缩组注意事项 RDS： 1、指定的RDS实例必须是运行中状态。 2、指定的RDS实例访问白名单的IP个数不能达到上限 3、伸缩组创建成功后，不会立即生效，只有启用才能接受伸缩组规则触发和执行相关伸缩活动。 修改伸缩组注意事项 1、地域、负载均衡、RDS数据库实例不可以修改。 2、伸缩组有 生效、失效、删除 三种状态。只有生效和失效状态才可以修改伸缩组属性。 3、当伸缩组的ECS实例数不满足修改后的MaxSize和MinSize时，弹性伸缩服务会自动加入或移出ECS实例。使得伸缩组的ECS实例数量匹配MaxSize和MinSize。 启用伸缩组注意事项 1、当伸缩组为失效状态时，才可以启用伸缩组。 2、当伸缩组有生效的伸缩配置时，才可以启用伸缩组。 3、一个伸缩组在同一时刻只能有一个生效的伸缩配置。 停用伸缩组注意事项 1、只有在当前伸缩组没有任何伸缩活动进行时，才能停用伸缩组。 2、当前伸缩组为生效状态时，才能停用伸缩组。 删除伸缩组1、控制台删除一个伸缩组时，默认使用强制删除模式。 2、删除伸缩组，包含删除相关的伸缩配置、伸缩规则、伸缩活动、伸缩信息等。但不会删除定时任务，云监控报警任务，负载均衡实例，RDS实例。 3、通过Open AI 删除伸缩组时，可以看到强制删除属性。表示伸缩组存在ECS实例或正在进行伸缩活动。是否强制删除伸缩组并移出和释放ECS实例。 创建伸缩配置1、伸缩配置一旦创建成功，不可以编辑更改，只能创建一个新的伸缩配置来替换不需要的伸缩配置。 2、依据被替换的伸缩配置，而添加进组的ECS实例任可正常运行。 3、一个伸缩组内最多创建10个伸缩配置，但只能有1个伸缩配置处于激活状态。 删除伸缩配置注意事项 1、伸缩配置在伸缩组中属于生效状态,则伸缩配置不允许删除。 生命周期挂钩什么是生命周期挂钩当伸缩组发生伸缩活动时，生命周期挂钩会暂停伸缩活动一段时间，伸缩活动进入等待状态。 应用场景扩张活动时：可以在等待期间初始化ECS实例配置。 收缩活动时：获取ECS实例数据 作用时机扩张活动时：加入RDS、SLB实例白名单前 收缩活动时：移除RDS、SLB实例白名单前 创建管理定时任务1、每个账户最多能创建20个定时任务 2、由于伸缩组正发生伸缩活动或者伸缩组停用等原因，导致定时任务触发执行伸缩规则失败，在重试过期时间内，定时任务会自动重试触发，否则放弃本次定时触发。 3、若多个定时任务在相近的时间内触发同一个伸缩组的伸缩规则，则最早触发的定时任务会先执行伸缩活动。由于同一个伸缩组在同一时刻只能有一个伸缩活动。排在后面的定时任务会在重试过期时间内自动重试实时触发。如上一个伸缩活动完成之后，排在后面的定时任务还在重试过期时间内重试，则执行该定时任务的伸缩规则并触发相应的伸缩活动。 报警任务 1、基于 云监控服务（CMS）运行的。 2、如果该报警任务名称已经存在，则用新的值进行替换。 3、在使用报警任务之前，需要在ECS镜像里安装新版本的云监控插件。]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>ESS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows10命令行调用openssl]]></title>
    <url>%2Fposts%2Fac409ae6.html</url>
    <content type="text"><![CDATA[在计算机网络上，OpenSSL是一个开放源代码的软件库包，应用程序可以使用这个包来进行安全通信，避免窃听，同时确认另一端连接者的身份。这个包广泛被应用在互联网的网页服务器上。 下载安装windows平台openssl密钥生成工具 执行安装目录bin下的”openssl.exe”，执行后弹出命令窗口如下 生成私钥，命令行输入 1genrsa -out rsa_private_key.pem 1024 在bin目录下多了一个rsa_private_key.pem文件，将这个文件通过文本编辑器打开，将看到你所需要的私钥，使用时记得把—BEGIN PRIVATE KEY—，—END PRIVATE KEY—字样删掉。 生成公钥，命令行输入 1rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem 在bin目录下多了一个rsa_public_key.pem文件，将这个文件通过文本编辑器打开，将看到你所需要的公钥，使用时记得把—BEGIN PRIVATE KEY—，—END PRIVATE KEY—字样删掉。 RSA私钥转换成 PKCS8 格式，命令行输入 1pkcs8 -topk8 -inform PEM -in rsa_private_key.pem -outform PEM -nocrypt 回车，key直接显示在窗口中 12345678910111213141516-----BEGIN PRIVATE KEY-----MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBALaGPKpNJmgH6oV3tO19bPty3U52ELXQilxRvcXuIQbqWkteK86FUi4W7eM+eK+ldVuuJt3YVsBeSPh72HIFatdzxqbE5oXq7vyuWUj9fi3ldD3i0obN0v52qKBL6gNQqRThQjbRqaf2uix4BORP5DCALVanQKU4QUaL6Tnsy9MPAgMBAAECgYEApFlc2K+dTIEMP9+Y71tHvWYhNZwD0eKUIyqLKWURIgv0//YslcngRJXq3/qJawceFE5MuucovhBnvi6tp4WPPCk0UA1gsEPYN9CC4M7DFy2NV+thY+PLZ5pv/mcNiO/eNMIVoibQK1luNIyH3bKbCQHofkAyk5Ji8/TEfyVphmkCQQDj8HPXEtSe9RtbCkXyrx0Piq+4kF79+ALQJwREisgJLTtABgrOeWkse03gQHp64LgTJG0BgaBQZwsm++hwttONAkEAzP6GhuelN4zElPSJskWApRjQOCTBKUf/5e6g5WH284SO9tjjL4Kb8OetN4XmOijEcsWk7p6cEugVEnBjT4asCwJAa8fOLrujuEo0FjdkXd25wxiUAJSbpkF4qw5X8UUiU1yE8MAqqfk05yii6U/z2liaEcselCDEOmCPIG7rOSjqHQJBALuz/6h9aYog6kveUksbWv1RaC9QcFKFa+q1gzwmZMJ8SY/77qKtPG7tJG2nvLTaaW8STMB2GUEyo0DcCgNitBsCQCbNHgqw/cE//p/qLEuZgLZRBM6xOrsuLYU7ODXc3xL9H48l2iGt3mSnjLkEuW+OjaLMNKRLIujc/0AMhDYfL3w=-----END PRIVATE KEY----- –后续持续更新–]]></content>
      <categories>
        <category>openssl</category>
      </categories>
      <tags>
        <tag>openssl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云之弹性计算服务ECS]]></title>
    <url>%2Fposts%2F26340115.html</url>
    <content type="text"><![CDATA[阿里云弹性计算服务ECS什么是弹性计算服务ECS1、传统物理服务器 随着业务的上升用户数和访问量急剧上升，传统的物理服务器都是会通过询价—采购—安装—调试—防病毒处理—BGP线路。。。。一套体系进行新增。 2、云服务器Elastic Compute Service (ECS) 阿里云提供的是一种随时创建、扩容、释放的基础云计算服务。 从管理方式上来讲，云服务器（简单、高效、稳定、安全、易用、成本低），使得开发者更加专注于核心业务的创新。 ECS定位云服务器（ECS）是阿里云产品体系中最基础的计算服务，通常用作应用程序的运行环境，其最重要的特性是弹性。 ECS的基础运行环境1、ECS是应用程序的基础运行环境 每个ECS都运行着用户选择的操作系统，一般是某个Linux或Windows的发行版。 用户的应用程序运行在实例的操作系统之上 2、最简化的弹性结构 较好的实践是将ECS和其他云计算产品搭配使用，列如ECS运行Webserver，使用RDS作为数据库，OSS作为文件存储 应避免完全将原有物理服务器上的应用照搬照抄到云服务器上。 ECS的弹性伸缩能力1、支持垂直方向和水平方向的扩展。 垂直扩展：五分钟内升级CPU、内存、磁盘、网络。 水平扩展：十分钟内启动N多的ECS实例，度过峰值后可以立刻销毁。 ECS的产品特点1、稳定 可靠性99.999%，自动宕机迁移，数据备份和回滚，系统性能报警。无需再单独购买配置 2、安全 防DDoS，安全组规则的保护多用户隔离 ，防密码破解。无需再单独购买配置 3、弹性 10分钟内创建一家中型互联网公司的IT资源（约100台），5分钟内停机升级CPU和内存，在线不停机升级带宽。 4、高性能 随机IOPS 100万，4000MB/s增强型SSD云盘性能；多线BGP骨干网络接入（避免了各宽带运营商之间数据交换进行的计费）；高性价比，低运营成本。 ECS的应用场景ECS应用场景广泛 主要应用场景1：企业网站、个人博客、APP后台、Web应用。 主要应用场景2：数据库，通过在ECS上安装数据软件库，将ECS改造成后台数据库。 ECS的基本概念ECS，由多个并列，又相互关联的产品概念组成，包括： 1、实例，instance; 2、存储，storage; 3、快照，copy 4、镜像，image 5、安全组，security group ECS位置概念1、地域 Region 地域，是阿里云提供的云计算服务的城市位置，一般一个Region会覆盖一个地域。 2、可用区 Zone 可用区，是Region下，电力和网络独立存在，软件故障隔离的物理数据中心，可用区的开发，目的是容许用户自行选择资源的分配策略。 ECS产品关系 选择地域 按服务接入点、就近选择地域 各种资源在不同的地域价格略有不同 选择可用区 资源放在同一个可用区 优点：低时延 缺点：低可用性 资源放在不同可用区 优点：高可用性 缺点：高时延 ECS实例概念1、实例，是ECS产品最核心的部分，是指虚拟计算环境。只有基于实例，才能使用网络、存储、快照等其它资源。 2、实例规格，决定了ECS实例的计算和存储能力，是指实例的不同配置，包括vCPU核数、内网、网络（内网）性能等。 ECS故障迁移当一个实例的物理主机宕机时，ECS系统将启动宕机迁移过程，既将此物理机上运行的云服务器都迁移到其它物理机上。 当发生宕机故障，阿里云发送迁移短信。 迁移完成后，阿里云再次发送给短信，配置信息迁移前后保持不变。 迁移过程持续时间5-10分钟，对于要求高可用的应用，使用SLB负载均衡到多个ECS实例上，应对宕机故障。 设置应用程序开机自动启动，避免宕机重启后应用程序没有启动，如Apache。 设置待迁移ECS实例上部署应用的自动重连功能如：连接数据库。 宕机迁移只针对使用云盘的ECS实例，使用本地盘的ECS实例收到宕机短信后，通过工单的方式确认是否需要保留本地数据等事项，并进入下一个恢复事项。 ECS实例计费方式 ECS存储(上)云盘存储的相关概念： ECS存储 一台ECS实例最多挂载16块云盘，云盘的出发点：高可靠性、兼顾低时延。 ECS云盘 各类云盘技术参数 独立云磁盘： 指单独购买的云盘（系统盘随ECS实例购买），可随时挂载，卸载 只可挂载同一可用区域内的任何实例上 但在同一时间只能挂载到一个实例上 可设置是否随实例一起释放 支持按量付费 ECS存储(中)共享块存储（公测中）ECS共享块存储是一种支持多个ECS实例并发读写访问的数据块级存储设备，具备多并发、高性能、高可靠等特性，单个共享块存储最多支持同时挂载到一个可用区下的16个ECS实例上。（公测阶段为16个） 共享存储块技术参数 ECS存储(下)本地存储 出发点：超低延时，低可靠性 •无盘古可分布式系统 •与ECS实例在同一台物理服务器上，是否可靠由物理服务器决定，存在单点故障风险 •收到宕机短信后，需通过工单方式确认是否需要保留本地数据等事项，并进入下一个恢复环境。 •不建议存放需要长期保存的数据。 计费 本地盘的费用包括在本地盘实例的费用中。 生命周期 本地盘的生命周期与它所挂载的实例周期相同。 只能在创建本地盘实例时创建本地磁盘。本地磁盘的存储容量由本地盘实例规格决定，不能自行添加或减少。 本地盘实例释放时，本地盘也会同时释放。 ECS本地存储技术参数 ECS快照ECS快照功能： 某一个时间点上某一个磁盘的数据备份。采用按量付费功能。 ECS快照用途： 1、系统盘、数据盘的日常备份，可以利用快照定期的对重要业务数据进行备份，来应对误操作、攻击、病毒导致的数据丢失风险。 2、更换操作系统，应用软件升级或业务数据迁移等重大操作前，可以创建一份或多份数据快照，一旦升级、迁移过程中出现任何问题，可以通过数据快照及时恢复到正常系统数据状态。 3、生产数据的多副本应用，通过生产数据创建快照，从而为数据挖掘、报表查询、开发测试等应用提供接近实时的真是生产数据。 4、通过系统盘快照创建自定义镜像。批量复制出与当前系统完全一样的ECS实例。 5、通过数据盘快照可以复制出与目前磁盘数据完全一样的新磁盘。 ECS自动快照： 阿里云除用户手动快找外，还提供自动快照简化用户管理。 通过控制台/API设置自动快照策略。支持自动定义时间点、每周重复日期、快照保留时长。查询快照关联磁盘及详情。 可创建自动快照时间段来错开应用的高峰期。（创建快照时I/O的特性会降低） 每块磁盘拥有64个的额度。 ECS快照的收费 快照所占存储空间的大小计费。开通快照时默认按照实际使用量按小时计费。 购买存储包（包月）的方式，来提前购买存储资源的使用额度和时长。（按量后付费模式） ECS快照机制 快照使用增量方式，只拷贝两个快照间数据变化的部分 数据变化情况不同，快照创建的时长也不同。第一次创建快照的时间最长。 ECS镜像ECS镜像： ECS镜像：是ECS实例运行环境的模板。模板中包括了特定的ECS操作系统信息。也包括一些额外安装的应用程序。 镜像相当于副本文件。包含一个或多个磁盘中的所有数据。对于ECS来说，这些数据可以是单个系统盘，也可以是系统盘+数据盘的组合。 ECS镜像的类型及主要作用: ECS自定义镜像的创建 1、使用快照创建镜像 自定义镜像是ECS实例系统盘在某一时刻的快照 通过自定义镜像开通的实例，可与原实例配置的系统相同，也可以不同。 使用说明: 使用自定义镜像开通的ECS实例可以升级CPU、内存、带宽、磁盘等。 创建自定义镜像的ECS实例到期或数据释放后，创建的自定义镜像不受影响。使用自定义镜像开通的ECS实例也不会受影响。 Linux注意事项: Linux实例的系统盘创建自定义镜像时，umonut linux 挂载的所有文件系统。不要在/etc/fstab文件中加载数据盘信息否则* 使用该镜像创建的实例无法启动。 请勿随意升级内核或操作系统版本，请勿调整系统盘分区，请勿修改默认登录用户名root。 2、使用实例创建镜像 基于实例创建一个自定义镜像，把实例中的所有磁盘，包括系统盘和数据盘中的数据，完整得复制到自定义镜像中。 创建自定义镜像的过程中，该实例中的每块磁盘都自动创建了一个快照，这些快照组合起来，构成一个自定义镜像。 使用说明： 创建镜像的过程中，不要改变实例状态，不要停止、启动或重启实例，避免创建失败。 使用带数据盘的自定义镜像创建实例时，默认根据镜像创建数据盘。 更换系统盘时，不能使用带数据的自定义镜像。 ECS自定义镜像适用范围 ECS自定义镜像的注意事项 1、数据盘mount Linux实例的系统盘创建镜像时，要umount linux挂载的所有文件系统，及不要在/etc/fstab文件中加载数据盘信息。否则使用该镜像的实例无法启动。因为一块磁盘只能同时被一个实例挂载。 2、敏感数据 自定义镜像可以共享给他人，为保证数据安全，在创建自定义镜像前，应删除敏感数据（如：密码 个人文件） 3、自动启动服务 为了自动扩展能力而创建的镜像，应当设置好启动时需要启动的程序。如Apache。 ECS的网络和安全组如何兼顾ECS实例的安全及实例之间的数据通信？ ECS网络包括： 专有网络： 一个隔离的网络环境。 可以自定义网络的拓扑和IP地址，适用于对网络安全性较高和有一定网络管理能力的用户。 经典网络：已淘汰 ECS内网 在同一地域，实例之间传输数据，一般推荐内网&gt;连接方式 1、经典网络实例： 同一账号、同一地域实例，如果在同一个安全组，既默认内网互联。 同一账号、同一地域，不同可用区实例，如果在同一个安全组，即使内网地址不在同一网段，也可内网连接。 不同账号，相同地域的实例，可以通过安全组实现内网互联。 2、专有网络实例： 同一账号、同一地域、同一VPC网络的实例： 在同一个安全组内，内网互联 不在同一个安全组内，需安全授权后才能内网互联 同一账号、同一地域实例，如果在不同的VPC网络，需要通过高速通道实现网络互联。 实例的网络类型不同，默认不能内网互联。 ECS安全组 ECS安全组是一种虚拟防火墙，通过设置一个或多个规则，实现单台或多台实例网络访问控制。规则包含允许访问的网络协议、端口、源IP等信息，这些规则对于加入该安全组的所有实例均生效，每个实例至少要加入一个安全组。 安全组用途： 1、对ECS进行分组，限制互相访问权限控制时需要使用安全组功能。 2、通过安全组的配置可以实现： 允许或限制特定的安全组或者特定的来源是否可以访问自己 允许或限制本安全组的实例是否可以访问组外特定资源 ECS防火墙规则经典网络防火墙规则由源（IP、IP网段或安全组），协议类型，端口、策略（允许/拒绝），网络类型（内网/公网）组成。 每个安全组可以通过两种方式授权其它人访问自己 方式一：指定IP地址段，如123.123.0.0/16，公网IP段访问安全组1中的实例。 方式二：指定安全组ID，用于内网间授权。 安全组方向限制：安全组对出和入两个方向都配置防火墙规则，入方向即将自己作为访问目标，出方向即将自己作为访问源。 安全组限制：每个账号最多100个安全组，每个安全组最多1000个实例。每个实例最多加入5个安全组。每个安全组最多100条规则。 安全组优先级数字越小，优先级越高。 1、服务器只有一个安全组。 两条优先级相同的规则，先判断第一条规则是否符合，不符合的情况下，判断第二条规则是否符合。 两条优先级不相同的规则，优先级小的数字高，优先级大的数字小。 2、服务器至少有二个安全组。 安全组1和安全组2的优先级一样的情况下，依次执行安全规则。 1234安全组1 1.1.1.1 优先级1安全组1 1.1.1.2 优先级1安全组2 2.2.2.1 优先级1 安全组2 2.2.2.2 优先级1 安全组1和安全组2的优先级不一样的情况下，安全组1 1.1.1.1—安全组2 2.2.2.1— 安全组1 1.1.1.2 —安全组2 2.2.2.2 1234安全组1 1.1.1.1 优先级1安全组1 1.1.1.2 优先级2安全组2 2.2.2.1 优先级1 安全组2 2.2.2.2 优先级2 ECS产品创建注意事项1、服务器要部署在什么区域： ECS所在地域与目标用户所在的地理位置 ECS与其他阿里云产品之间的关系 资源价格 某些地区的特殊要求，如中国大陆要求的ICP备案，选择大陆地域的数据中心。 2、服务器需要什么样的配置： 根据应用系统所需的最大CPU、内存的需求选择所需配置 如果需要存储大量数据，按需选择附加磁盘 考虑是否需要本地存储 3、选择操作系统 WINDOWS / LINUX 32位/64位 4、服务器的I/O系统满足需要么？ 选择I/O优化的实例，挂载SSD云盘时，能获得SSD云盘全部存储性能。 对于不支持I/O优化的实例，挂载SSD云盘时，能获得1000左右的IOPS性能。(SSD云盘追高支持2000IOPS) 5、预算是否充足 按年/月付费适合24*7小时的部署服务，按量付费适合临时使用。 预算足够可直接购买峰值所需配置。预算不足适当降低配置，设定服务器、CPU利用率告警。 ECS的API通过向ECS API的服务端地址发送GET或POST请求，并按照接口说明在请求中加入相应请求参数来完成的。根据请求的处理情况，系统会返回处理结果。 请求结构 服务地址：ecs.aliyuncs.com 通信协议: 支持HTTP或HTTPS , 推荐HTTPS 请求方法：支持HTTP或HTTPS GET/POST方法发送请求，这种方式下请求参数需要包含在请求的URL中。 字符编码：请求及返回结果都使用UTF-8字符集进行编码。 返回格式：支持XML和JSON两种，默认为XML格式。]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>ECS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云之云盾]]></title>
    <url>%2Fposts%2F24ecca15.html</url>
    <content type="text"><![CDATA[阿里云盾介绍为响应2018年6月《中华人民共和国网络安全法》政策的正式实施，提高全民网络安全意识。 阿里云盾功能1、网络防护 网络防护:默认开通，可升级至DDoSa高防IP，主要面向产品 ECS、SLB。监测方式：时实。 2、提醒功能 默认开通，主要面向产品：ECS。监测方式：实时。内容包括：安全规则删除，异地登录，暴力破解，云资源的创建删除提醒。提醒方式：短信、邮件、旺旺（持续更新要看文档）。 3、安全体检 默认不开通，内容包括：WEB漏洞监测，系统漏洞监测，网页挂码监测等。 阿里云盾特点1、免费开通（DDoS基础防护） •无需购买昂贵设备 •无需专业安全团队 •拥有ECS即可免费开通云盾服务 2、简单易用（WEB菜单式选择） 3、专业团队 •完善的监控体系和安全团队，20年安全经验 常见网络攻击类 网络防护_DDoS攻击防护DDoS攻击是什么DDoS攻击：分布式拒绝服务攻击。 DDoS攻击目的：让既定目标，无法提供正常服务。防御难度很大。 DDoS防护功能： 攻击流量的发现，牵引和自动处理 有效抵御基于网络层、传输层及应用层的DDoS攻击。包括但不限于：SYN Flood / UDP Flood / ICMP Flood /ACK Flood/DNS Query Flood / NTP Reply Flood,但不支持防护CC攻击。 攻击分析全自动监测。精准识别攻击，受到该攻击不会影响用户访问速度，妙级开启防护，基础DDoS防护免费（ECS、SLB、EIP、NAT）。 可管理。自动进行异常流量抓包，支持攻击事件、攻击流量的管理统计。 DDoS攻击防护原理 主机防护_安骑士安骑士架构及功能 安骑士特点1、轻量化资源占用 普通状态：安骑士插件占用约1%CPU及50MB内存 峰值状态：安骑士插件占用不超过10%CPU和80MB内存，如果占用资源超过峰值，插件停止工作。 2、实时告警 控制台集中管控，短信实时报警黑客攻击行为及高危漏洞风险。 3、支持非阿里云服务器 腾讯云、青云、AWS、UCloud Web防护—Web应用防火墙（WAF）应用防火墙（WAF）是什么应用防火墙（WAF）功能1、常见Web攻击防护 SQL注入、XSS跨站、Webshell上传、后门隔离保护、命令注入、非法HTTP协议请求、常见Web服务器漏洞攻击、核心文件非授权访问、路径穿越、扫描防护等。 0day补丁定期及时更新。 2、CC恶意攻击防护 对单一来源IP访问频率进行控制。 针对海量慢速请求攻击，根据统计响应码及URL请求分布，异常Referer及User-Agent特征识别，结合网站精准防护规则进行综合性防护。 3、虚拟补丁 在Web应用漏洞补丁发布和修复之前，通过调整Web防护策略实现快速防护。 4、攻击事件管理 支持攻击事件、攻击流量、攻击规模的集中管理统计 应用防火墙（WAF）特点1、配置简单 工作在用户端和网站之间，只需修改DNS记录 2、强大的Web防御功能 内置千条防护规则，每周有规则的新增和优化；Web 0day漏洞补丁修复，24小时内防护，全球同步；专业攻防团队进行漏洞研究；捕获0day漏洞生成防护规则。 3、检测块、防护稳 一毫秒内检测攻击并防护生效，防护无延迟。新的防护规则一分钟内全球同步，全年稳定在线可用。 内容安全—（阿里绿网）内容安全功能 站点监测 OSS违规监测服务 内容监测API 内容安全特点 1、性价比高 节省90%的人力成本，支持妙级返回结果，达到99%以上准确率。 2、接入成本低 一次接入即可提供音视频、图片、文字等形式的内容监测，覆盖恐暴、鉴黄、涉政、广告等风险防范。 3、灵活服务方式 与OSS、ECS等云产品无缝对接，还可通过API方式同用户审核系统集成。]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>云盾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云之负载均衡SLB]]></title>
    <url>%2Fposts%2Fb0f46966.html</url>
    <content type="text"><![CDATA[SLB的由来互联网应用随着业务量的发展、访问量和数据流量的不断增长，单一的服务器设备已经无法承担。 SLB的定义将前台执行的任务分摊到后台多台较低配置的服务器处理，然后返回结果给客户。 传统的SLB在客户端和服务器之间添加负载均衡硬件设备。 好处：1、扩展了网络设备和服务器的带宽，增加了吞吐量。2、增强了网络数据处理能力。3、提高了网络灵活性和可用性。 劣势：1、设备价格昂贵。2、达到上限需继续购买硬。 阿里弹性负载均衡SLB弹性负载均衡定义基于软件的负载均衡SLB解决方案。是对多台服务器进行的流量分发的一种负载均衡。 弹性负载均衡特点1、高可用性（全冗余的设计，消除了单点故障，支持同城容灾；搭配DNS的话可以实现跨地域容灾，可用性高达99.95%；在流量波动的情况下，不中断对外服务。） 2、低成本（同传统负载均衡系统高投入相比投入下降60%，且不需要运维；在私网类型网络中免费使用。） 3、高安全性（结合云盾防DDoS系统。） 弹性负载均衡应用场景—&gt;适合做应用程序的流量入口 SLB负载均衡，横向扩展的应用系统服务能力，适用于App Server 服务器Server。当部分ESC宕机后，应用系统能继续工作。 ESC，(阿里云后端服务器)可运行linux或Windows Server,(无状态无数据) Apache+Web应用，可水平扩展。 OSS，(对象存储) RDS,（数据库应用） 举例： 浙江政务服务网 学信网 ## 弹性SLB用途 1、流量分发扩展应用系统对外服务能力，通过消除单点障碍提升应用系统可用性。 2、SLB可以通过设置虚拟地址，将同一地域的多台ESC资源虚拟成一个高性能，高可用的资源地。（规则检查，按规则分发） 3、SLB检查ECS资源池中的ECS健康状况，能自动隔离异常ECS，解决单点故障，提高服务能力。 4、具备HTTP与TCP抗DDos攻击能力。（阿里云开启SLB实例服务的同时默认开启云盾服务） 5、SLB是ESC面向多机方案的一项配套服务，需要搭配ESC来使用。 弹性SLB容灾1、本地容灾 2、同城容灾（通过DNS轮询） 3、跨地域容灾（通过DNS轮询） 弹性SLB的功能架构 弹性SLB的主要功能功能一：提供四层（TCP/UDP协议）和七层（HTTP/HTTPS协议）的均衡负载。 功能二：对后端ECS进行健康检查，自动屏蔽异常状态的ECS，待该ECS恢复正常后自动解除屏蔽。 功能三：提供会话保持功能，在Session的生命周期内，将同一客户端的请求转发到同一ECS上。 功能四：提供轮询、加权轮询（WRR）、加权最小连接数（WLC）3种转发方式。 轮询：依次将请求发送到后端ECS上。 加权轮询：为后端的ECS设置权重，权重越高被分发的几率越大。 加权最小连接数：在后端ECS权重相同的情况下，将请求分发到当前连接数最小的ECS上。 功能五：针对HTTP协议，提供统一的证书管理服务，解密处理在SLB实例上，降低后端ECS的CPU开销。 功能六：支持公网或私网类型的负载均衡。(私网类型免费试用)。 功能七：带宽控制，支持根据监听设置其对应服务所达到的带宽峰值。 功能八：安全防护，结合云盾，可提供5G以下防DDoS攻击能力。 功能九：容灾，支持同一地域跨可用区的容灾，结合DNS轮询支持跨地域容灾。 功能十：提供控制台，API、SDK三种控制方式。 弹性SLB使用开通SLB之前，需要考虑的问题 1、ESC部署在什么区域？ 按照用户所在位置就近选择区域，来提升用户访问速率。 2、需要多少台后端服务器？ 根据实际业务需求申请并部署。 3、采用什么样的协议进行SLB转发？ 根据应用系统使用的协议选择四层或七层协议。 4、SLB是公网还是内网服务？ 根据SLB的用途进行选择。 5、是否需要域名？ 需要就提前准备域名。 选择离用户最近节点的SLB服务，配置实例后才可使用。默认按量付费的实例为60个。 弹性SLB服务监听设置1、七层网络(HTTP)监听配置——适用场景为:SLB使用HTTP或者HTTPs协议的负载均衡。（会话保持基于COOKIE） 2、七层网络(HTTPs)监听配置 比HTTP多了一个证书的服务。（会话保持基于COOKIE） 3、四层网络(TCP)监听配置——适用场景为:SLB使用TCP协议的负载均衡。（会话保持基于源地址） 监听配置的限制 负载均衡数量50个/实例 每个用户上传证书的数量小于等于100个 如何选择监听协议 弹性SLB服务管理后端服务器主备服务器组： 主机正常，流量往主机走；主机宕机，流量往备机走。 备机不进行健康检查，所以主机健康检查失败，系统将流量直接切到备机上，主机健康检查恢复正常后流量重新切回主机。 一个主备服务器组只允许添加两个ECS实例，一个作为主机，一个作为备机，主备服务器组只支持四层监听。 虚拟服务器组： 当需要将不同的请求转发到不同的后端服务器上时，或需要通过域名或URL进行请求转发，可以选择虚拟服务器组。 如设置了虚拟服务器组，默认在SLB实例维度末端添加的后端服务器不再接受请求。 权值设置：最高为100，最低为0，权值越高轮询概率越大。 弹性SLB证书管理1、SLB证书只支持PEM格式的证书，在上传证书之前需确保证书、证书链和私钥符合格式要求，其中私钥是加密存储的。 2、自建证书可以通过OpenSSL生成。 3、证书管理是地域及资源 4、SLB协议前端口选择HTTPs协议，端口选择443；后端选择HTTP，端口选择80。 5、SLB支持管理100个证书用户。 服务器证书（单项认证的证书）、CA证书（双向认证的证书） 弹性SLB的API通过向负载均衡API服务端地址发送HTTP GET请求，并按照接口说明在请求中加入相应请求参数来完成的；根据请求的处理情况，系统会返回处理结果。 请求的结构： 服务地址：slb.aliyuncs.com 通信协议：支持HTTP/HTTPS,推荐HTTPS 请求方式：支持HTTP GET方法发送请求，这种方式下请求参数需要包含在请求URL中。 字符编码：请求及返回结果采用UTF-8字符集进行编码。 弹性SLB的API-LoadBalancer相关API 弹性SLB的API-Listener相关API 弹性SLB的API-BackendServer相关API 以上这些均可在阿里云API官网 查看和调用。 SLB相关思考题题目1： SLB连接1台ECS服务器，这种情况下如何将任务进行流量分发？ 答： 初始配置ECS时默认网络是固定带宽的，(例如初始创建5M带宽)随着业务的发展，继续升级带宽会造成浪费。阿里云支持续费降配方式去修改网络计费方式。但是需要等到下个计费周期，在这种的情况下最简单最快的方法就是开通SLB，通过SLB来实现带宽的扩展。SLB默认采用按流量计费的方式，SLB作为前段服务，后端连接ESC即可，这样做还方便后期增加ESC来实现多台ESC的负载。 如果你的业务场景（网站平时流量不高，基本带宽够用，但在明显的峰谷时却不能流畅访问）不妨考虑在前端增加一个SLB。 题目2： 后端20台ECS服务器，有一台的ECS权值设置成0，会发生什么？ 答： 由于一台ECS服务器权值被设置成0，会导致SLB健康检查异常 由于一台ECS服务器权值被设置成0，SLB不会将新的连接转发给该ECS 题目3： 设置ECS的权重为0和移除ECS的区别 答: ECS权重设置为0时，ECS已建立的长连接依然存在。 设置ECS权重值为0只适用于主动运维，如部署应用或升级ECS。]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>SLB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nest添加雪花飘落效果]]></title>
    <url>%2Fposts%2Fc5826913.html</url>
    <content type="text"><![CDATA[引言Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。 为了增加博客站点的趣味性，这次主要介绍 NexT 7.2.0 在PC端下添加雪花飘落的效果。 添加雪花飘落效果在\themes\next\source\js\src目录下新建一个snow.js文件，复制粘贴一下代码。 样式一是六边形的雪片，样式二是小圆点雪花，选择自己喜欢的样式即可。 123456789101112131415161718192021222324252627282930313233343536373839404142/*样式一*/(function($)&#123; $.fn.snow = function(options)&#123; var $flake = $('&lt;div id="snowbox" /&gt;').css(&#123;'position': 'absolute','z-index':'9999', 'top': '-50px'&#125;).html('&amp;#10052;'), documentHeight = $(document).height(), documentWidth = $(document).width(), defaults = &#123; minSize : 10, maxSize : 20, newOn : 1000, flakeColor : "#AFDAEF" /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */ &#125;, options = $.extend(&#123;&#125;, defaults, options); var interval= setInterval( function()&#123; var startPositionLeft = Math.random() * documentWidth - 100, startOpacity = 0.5 + Math.random(), sizeFlake = options.minSize + Math.random() * options.maxSize, endPositionTop = documentHeight - 200, endPositionLeft = startPositionLeft - 500 + Math.random() * 500, durationFall = documentHeight * 10 + Math.random() * 5000; $flake.clone().appendTo('body').css(&#123; left: startPositionLeft, opacity: startOpacity, 'font-size': sizeFlake, color: options.flakeColor &#125;).animate(&#123; top: endPositionTop, left: endPositionLeft, opacity: 0.2 &#125;,durationFall,'linear',function()&#123; $(this).remove() &#125;); &#125;, options.newOn); &#125;;&#125;)(jQuery);$(function()&#123; $.fn.snow(&#123; minSize: 5, /* 定义雪花最小尺寸 */ maxSize: 50,/* 定义雪花最大尺寸 */ newOn: 300 /* 定义密集程度，数字越小越密集 */ &#125;);&#125;); 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128/*样式二*//* 控制下雪 */function snowFall(snow) &#123; /* 可配置属性 */ snow = snow || &#123;&#125;; this.maxFlake = snow.maxFlake || 200; /* 最多片数 */ this.flakeSize = snow.flakeSize || 10; /* 雪花形状 */ this.fallSpeed = snow.fallSpeed || 1; /* 坠落速度 */&#125;/* 兼容写法 */requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) &#123; setTimeout(callback, 1000 / 60); &#125;;cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame;/* 开始下雪 */snowFall.prototype.start = function()&#123; /* 创建画布 */ snowCanvas.apply(this); /* 创建雪花形状 */ createFlakes.apply(this); /* 画雪 */ drawSnow.apply(this)&#125;/* 创建画布 */function snowCanvas() &#123; /* 添加Dom结点 */ var snowcanvas = document.createElement("canvas"); snowcanvas.id = "snowfall"; snowcanvas.width = window.innerWidth; snowcanvas.height = document.body.clientHeight; snowcanvas.setAttribute("style", "position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;"); document.getElementsByTagName("body")[0].appendChild(snowcanvas); this.canvas = snowcanvas; this.ctx = snowcanvas.getContext("2d"); /* 窗口大小改变的处理 */ window.onresize = function() &#123; snowcanvas.width = window.innerWidth; /* snowcanvas.height = window.innerHeight */ &#125;&#125;/* 雪运动对象 */function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) &#123; this.x = Math.floor(Math.random() * canvasWidth); /* x坐标 */ this.y = Math.floor(Math.random() * canvasHeight); /* y坐标 */ this.size = Math.random() * flakeSize + 2; /* 形状 */ this.maxSize = flakeSize; /* 最大形状 */ this.speed = Math.random() * 1 + fallSpeed; /* 坠落速度 */ this.fallSpeed = fallSpeed; /* 坠落速度 */ this.velY = this.speed; /* Y方向速度 */ this.velX = 0; /* X方向速度 */ this.stepSize = Math.random() / 30; /* 步长 */ this.step = 0 /* 步数 */&#125;flakeMove.prototype.update = function() &#123; var x = this.x, y = this.y; /* 左右摆动(余弦) */ this.velX *= 0.98; if (this.velY &lt;= this.speed) &#123; this.velY = this.speed &#125; this.velX += Math.cos(this.step += .05) * this.stepSize; this.y += this.velY; this.x += this.velX; /* 飞出边界的处理 */ if (this.x &gt;= canvas.width || this.x &lt;= 0 || this.y &gt;= canvas.height || this.y &lt;= 0) &#123; this.reset(canvas.width, canvas.height) &#125;&#125;;/* 飞出边界-放置最顶端继续坠落 */flakeMove.prototype.reset = function(width, height) &#123; this.x = Math.floor(Math.random() * width); this.y = 0; this.size = Math.random() * this.maxSize + 2; this.speed = Math.random() * 1 + this.fallSpeed; this.velY = this.speed; this.velX = 0;&#125;;// 渲染雪花-随机形状（此处可修改雪花颜色！！！）flakeMove.prototype.render = function(ctx) &#123; var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size); snowFlake.addColorStop(0, "rgba(255, 255, 255, 0.9)"); /* 此处是雪花颜色，默认是白色 */ snowFlake.addColorStop(.5, "rgba(255, 255, 255, 0.5)"); /* 若要改为其他颜色，请自行查 */ snowFlake.addColorStop(1, "rgba(255, 255, 255, 0)"); /* 找16进制的RGB 颜色代码。 */ ctx.save(); ctx.fillStyle = snowFlake; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); ctx.restore();&#125;;/* 创建雪花-定义形状 */function createFlakes() &#123; var maxFlake = this.maxFlake, flakes = this.flakes = [], canvas = this.canvas; for (var i = 0; i &lt; maxFlake; i++) &#123; flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed)) &#125;&#125;/* 画雪 */function drawSnow() &#123; var maxFlake = this.maxFlake, flakes = this.flakes; ctx = this.ctx, canvas = this.canvas, that = this; /* 清空雪花 */ ctx.clearRect(0, 0, canvas.width, canvas.height); for (var e = 0; e &lt; maxFlake; e++) &#123; flakes[e].update(); flakes[e].render(ctx); &#125; /* 一帧一帧的画 */ this.loop = requestAnimationFrame(function() &#123; drawSnow.apply(that); &#125;);&#125;/* 调用及控制方法 */var snow = new snowFall(&#123;maxFlake:60&#125;);snow.start(); 然后在\themes\next\layout\_layout.swig文件里的&lt;body&gt;&lt;/body&gt;内部进行引用：`` 1234567&lt;!-- 雪花特效 --&gt;&lt;script type="text/javascript"&gt; var windowWidth = $(window).width(); if (windowWidth &gt; 480) &#123; document.write('&lt;script type="text/javascript" src="/js/src/snow.js"&gt;&lt;\/script&gt;'); &#125;&lt;/script&gt; hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 即可本地预览效果。 参考文章: https://blog.csdn.net/stormdony/article/details/86001618]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
        <tag>雪花</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nest添加Live2d看板动画效果]]></title>
    <url>%2Fposts%2F896b141d.html</url>
    <content type="text"><![CDATA[引言Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。 为增添页面趣味性，这次主要介绍 NesT 7.2.0 添加Live2d看板动画效果。 添加Live2d看板动画看板动画 站点根目录下载插件，安装成功后，你可以在你的站点根文件夹/node_modules/底下找到live2d-widget这个文件夹。 1npm install --save hexo-helper-live2d 安装你想要的live2d动画人物，这里选择 live2d-widget-model-haruto 1npm install live2d-widget-model-haruto 在站点根目录下_config.yml添加如下代码 123456789101112131415161718192021222324#live2d看板动画live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false log: false model: use: live2d-widget-model-haruto display: superSample: 2 width: 150 height: 300 position: right hOffset: 100 vOffset: -100 mobile: show: true scale: 0.5react: opacityDefault: 0.7 opacityOnHover: 0.2 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 即可本地预览效果。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nest添加底部运行时间设置]]></title>
    <url>%2Fposts%2Fe1575a4c.html</url>
    <content type="text"><![CDATA[引言Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。 这次主要介绍 NexT 7.2.0 主题底部添加运行时间设置。 底部添加运行时间找到 \themes\next\layout\_partials\下面的footer.swig文件，底部添加以下代码： 12345678910111213141516171819&lt;div class="run_time" style=" text-align:center;"&gt; &lt;span id="timeDate"&gt;载入天数...&lt;/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/span&gt; &lt;script&gt; var now = new Date(); function createtime() &#123; var grt= new Date("07/23/2019 10:00:00");//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 )&#123;hnum = "0" + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = "0" + mnum;&#125; seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = "0" + snum;&#125; document.getElementById("timeDate").innerHTML = "(*^_^*)本站已运行 "+dnum+" 天 "; #可自行修改中文 document.getElementById("times").innerHTML = hnum + " 小时 " + mnum + " 分 " + snum + " 秒"; &#125; setInterval("createtime()",250); &lt;/script&gt;&lt;/div&gt; hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 即可本地预览效果。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Discord使用不需翻墙]]></title>
    <url>%2Fposts%2F615f044c.html</url>
    <content type="text"><![CDATA[Discord是一款非常好的语音聊天软件，相较国内的QT，YY等聊天软件 纯净、无广告，但就是这样的良心软件在国内被墙，无法使用。 解决的办法是：在C:\Windows\System32\drivers\etc 修改Hosts文件权限后， 在里面添加相关设置 123456789104.16.58.5 discordapp.com 104.16.58.5 support.discordapp.com 104.16.58.5 dl.discordapp.net 104.16.58.5 gateway.discord.gg 104.16.58.5 status.discordapp.com 104.16.58.5 cdn.discordapp.com 104.16.58.5 media.discordapp.net 104.16.58.5 images-ext-1.discordapp.net 104.16.58.5 images-ext-2.discordapp.net 保存后，Discord既可使用。]]></content>
      <categories>
        <category>Discord</category>
      </categories>
      <tags>
        <tag>Discord</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用myQR生成二维码]]></title>
    <url>%2Fposts%2Fe6266321.html</url>
    <content type="text"><![CDATA[安装相关环境安装Python这一环节可以自行百度。 安装MyQR库MyQR是Python的一个子模块 打开命令行CTRL + R,输入cmd，回车 输入python会出现相关的信息,表明有python环境，再输入exit()退出环境 输入 pip3 install MyQR安装MyQR模块，等待下载安装完成,成功安装会显示succeessful。（我这边之前已安装完成） 输入pip list在安装的清单中可以找到此模块 MyQR库安装完成。 利用myQR生成二维码编译器设置我这里使用vs code 编译器 搜索Python,安装该插件 搜索 language，添加语言插件包 查看—命令面板—运行Python 生成无图片二维码在电脑桌面新建一个zmj2008文件夹，使用vs code打开该文件夹，并在文件夹下新建MyDB.py文件。右侧导航栏显示如下： 输入from MyQR import myqr 载入模块 输入myqr.run(&quot;www.shiyanlou.com&quot;)在本地C:\Users\Mayjor_Zmj会有生成一个二维码图片 qrcode.png 生成动态图片二维码将选好的动态图片timg.gif放在zmj2008文件夹下，输入以下代码 123456789101112from MyQR import myqrimport osversion, level, qr_name = myqr.run( words='https://www.iamzmj.top', # 可以是字符串，也可以是网址(前面要加http(s)://) version=1, # 设置容错率为最高 level='H', # 控制纠错水平，范围是L、M、Q、H，从左到右依次升高 picture='timg.gif', # 将二维码和图片合成 colorized=True, # 彩色二维码 contrast=1.0, # 用来调节图片亮度 save_name='55.gif', # 保存文件的名字，格式可以是jpg,png,bmp,gif save_dir=os.getcwd() #控制位置 ) 123456789101112from MyQR import myqrimport osversion, level, qr_name = myqr.run( words='https://www.iamzmj.top', version=1, level='H', picture='timg.gif', colorized=True, contrast=1.0, save_name='55.gif', save_dir=os.getcwd() ) 调试代码，发现zmj2008文件夹下生成55.gif。 静态图片二维码设置和动态图片设置一样。]]></content>
      <categories>
        <category>myQR</category>
      </categories>
      <tags>
        <tag>myQR</tag>
        <tag>二维码</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[了解良渚-良渚时代的中国与世界]]></title>
    <url>%2Fposts%2F38b98be1.html</url>
    <content type="text"><![CDATA[良渚文明从发展阶段和发展复杂程度上来讲还略低于国外的历史文明 我们不能把中原文明作为中华文明的唯一代表，在五千年左右中原文明形成之前还有很多区域性的文明，比如说环太湖有一个文明，湖南湖北有一个文明，山东有一个文明，还有其它一些比较小的文明。最后直到夏朝的时候才形成了比较统一的中华文明。 我们也不能以简单的青铜器、文字或者城市来作为判断一个文明的标准。没有青铜器没有文字没有城市就不是文明了。这几个标准其实是在国外古埃及两河流域的考古中被提炼出来的。逐渐我们知道了玛雅文明、印加帝国等南美洲文明，这些考古的发现毫无疑问已经进入文明阶段，是被世界考古学界所认可。但是玛雅文明没有铜器，印加帝国没有文字，所以用教条式的准则来判断一个文明的方式早已被学术界所抛弃。 我们也不能拿中华文明去和国外的几个文明做对比。只有中华文明中的独立文明和国外的独立文明之间才有可比性。 所有文明的形成之前都是有长时间的文化积淀，它们不是一夜之间冒出来就变成文明的，距今五千年左右在人类历史上都是一个里程碑式的转折点。迈过了五千年之后实际上就进入了文明时代，人类的社会就有了更高更快速的发展。 良渚时代的世界除了传统上的四大古文明之外，在欧洲和南美洲也都有些其它的早期文明。比方说： 1、 安慕斯文明之母：卡拉尔文明（距今5000-4300年） 它是南美洲最早的一个文明大约5000年前出现在秘鲁海岸。这个文明的年代和良渚文明差不多。可以看到用石头或者土砌起来的这种结构非常的宏伟，也非常的有意思。卡拉尔文明于2009年列入世界遗产名录，是晚古时期建筑的最佳代表，并且是古秘鲁时期经过精心规划和设计建造而成的城市。 坐落在沙漠和干旱的高原之上，在苏佩河 (Supe River) 流域占主导地位。其保存完好，结构复杂，岩石布局特殊，加之泥土平台和圆形露台，因此引起了人们的广泛关注。这座城市是当时这片地区的18个城市居住区之一，在此期间，社会高度发展。 2、基克拉底文明：（距今5200-4000年） 希腊爱琴海文明之源，是在地中海的基克拉迪群岛上产生的文明，考古发现的古代器物多达数千种，包括最具特点的大理石雕像、石料或贝壳为原料的串珠项链、金属工具和装饰品、石头用具等。为外界所知的代表性器物是大理石小雕像，迄今为止推测总计有1400多尊，流散在世界各地。它们造型别致，具有现代雕刻艺术的气质。总之，无论是石料还是金属器物，它们的加工水平都高于同期的米诺文明，学者们据此推测该文明比米诺文明更成熟。 3、英国的巨石阵 英国的巨石阵由巨大的石块组成，每块重约50吨，它是欧洲着名的寺庙遗址，位于英格兰威尔特郡的索尔兹伯里平原。 良渚时代的中国中华文明的形成过程 距今九千年左右，中华文明在不同的地理环境下已经逐步孕育出不同 的文化面貌。江浙沪的环太湖地区是几个区域的文化代表。同时期发展的文化区域还有多个。 裴李岗时代（9000-7000年）不平等的起源 考古工作者发现了一种距今七、八千年的新的文化遗存，这种新的文化遗存在郑州地区发现了30余处，如新密莪沟北岗遗址、马良沟遗址、新密老城遗址、高沟遗址，巩义铁生沟遗址、北营遗址，登封双庙沟遗址、朝阳沟遗址，中牟业王遗址等等。由于这类文化遗存以磨制石器为代表，因此被确定为新石器文化。又因为文化面貌以最早发现的裴李岗遗址最为典型，所以被统称为“裴李岗文化”。 六千年之后我们称之为玉器时代，在六千至四千年期间在中国出现了许多强势的文化，如较早期的庙底沟、凌家滩、红山文化。稍晚的距今五千年前后的良渚文化、屈家岭文化、大汶口文化以及更晚的龙山文化、石家河文化、陶寺文化、齐家文化等。出土了大量的玉器，玉器非常的精美，还通过玉器来区分人的等级和身份， 庙底沟时代（距今6000-5300）规模的文化整合 在河南 陕西 山西省都有庙底沟文化的通路，面积非常的广大，是良渚文化的前身。我们现在都说我们是炎黄子孙，我们如果拿考古发现的时代来和炎帝黄帝时期做比对的话，那就是庙底沟时代大概在五千年左右。这个是庙底沟文化的一个遗址，面积一百多万平方米，在这个遗址中出土了一些比较特殊的器物，比如彩陶可能是当时祭祀的一个用具，这个是人面纹的盆，还有这个上面刻了动物的形象。 东山村崧泽王之墓地（距今5800-5500）良渚文明的一个源头 这个是崧泽文明的一个遗址，这个墓地里面发现了许多较早的阶层分化的迹象，在这个墓地里面埋葬的全是等级比较高的人，贫民埋在别的地方，贵族墓葬中出土了很多的玉器 很多的陶器 随葬品比较的丰富，古代社会分层分阶出现的最早实例。 安徽凌家滩（距今5800-5000）良渚文明的另一个源头 墓葬中出土了多琳琅满目的玉器，出土了罕见玉钺群还有玉人、玉版、玉龟、玉勺等一大批精美绝伦、工艺精湛的玉器。 接下来就要提到良渚时代，什么是良渚时代呢？ 良渚文化的时代就是（距今5300-4300）在这个时期中国有很多个发展比较快，社会程度比较复杂的文化，比方说山东的大汶口还有辽宁的红山文化。这些文化都被认为进入了文明阶段。良渚是其中的一个代表，为何良渚古城遗址可以较早的申遗成功，是因为良渚古城的考古做的比较充分，古城的规模比较大，而且保存比较好。未来通过进一步的发掘揭示它的复杂程度。 长江中游的屈家岭文化 在屈家岭文化中发现了18座城池，最大的城池在1这个位置。周边有很多小的城市。形成了一个复杂的城市体系。陶器里面发现很多玉器，非常精美，看史物的话同指甲盖这么大，上面还要刻纹饰是非常不容易的，工艺已非常精湛不亚于良渚的玉器了。 山东大汶口文化中晚期：焦家遗址 遗址出土了 类似良渚文化的玉琮，有些墓葬里面还发现了人殉。 甘肃西王村文化（距今5000年前后）大地湾的”宫殿” 遗址中发掘了一个房子面积大概四百二十万平方米，放在现在也算是一个豪宅。关键是这个房子的地面是用类似混凝土的工艺来做的。非常硬已经达到了现代混凝土结构的强度了，所以保存非常的好。还在房子里面出土了这么这一组器物，类似于量器。考古学者猜测这个房子是当时地区中心的神庙，周边有很多善男信女信奉这个神，需要供奉，这个器物就是用来收集贡品的。 河南西坡遗址 西坡遗址是铸鼎原遗址群中较大的遗址之一，现存面积达40万平方米。以城乡公路为界，可将遗址分为南、北两区。 良渚时期为代表的东亚文明和西亚文明在历史的发展，表现出来的物质的文化是不一样的，这是一些简要的对比。玉器是中华文化最重要的物质基因，中华名族还是一个爱玉的名族，黄金有价玉无价。但是在西方人眼里玉器并不是那么重要。有位研究玛雅文明的学者说 玛雅文明出土了很多玉器，在玛雅语中光是描述玉器的词汇就有十来种，在西班牙入侵之后，这个玉器就不行了。到现在墨西哥人或者中美洲人对玉器也都没有什么概念。我们中国就不一样，对玉的爱好，一直从七八千年开始出现，五千年到达巅峰，又一直流传下来。 从建筑上来讲我们能的建筑有个特点是不好看，不管是阿房宫、乾阳宫遗址去看那些都不起眼，就在地面之下地面上啥都没有的，要是没有讲解员讲解的话根本不知道。 相比古埃及建筑，还有石头阵这些就不一样了，它们很难被腐蚀掉一直屹立在地面之上，视觉上比较直观。五千年左右西亚中亚的一些文化有向东方进行传播，比方说铜器，铜器不是我们中国原产的，大麦、小麦、黄牛、绵阳、山羊都不是中国原产的是从国外引进的。丝绸之路的前身在五千年的时候就已经开始了，后来成为中华文化中的一些重要元素。 我们对文明应该有一个怎么样的概念？ 文化代表了一种文化方式，比方说喝的矿泉水，用的电脑还有我们穿的衣服、住的房子、我们的语言这些都是文化的表现形式，文明就是文化发展到一个高的层次高的阶段就可以叫文明。从考古意义上来讲我们可以从很多个标准来判断这个文化是不是文明。比方说我们提到良渚文化它有大规模的城子、发达的农业、高超的手工业、等级化的墓葬有这么一些特征。 我们说良渚时代已经进入国家阶段，是东亚最早的一个国家社会。这是国外的一个考古学家权威说的。其实早在良渚水利系通发现之前国内考古界就有这样的说法了。把良渚文化定义成一个国家还是比较有挑战的，良渚遗址发现了这么大规模的城，这么大规模的宫殿区，它不能是几个村庄所能建立起来的。它可能是好几千个人，做了好几十年的工作才把这个城建设起来，说明当时的良渚社会会有一个非常大的号召能力。这也是我们判断良渚是一个进步国家社会的一个证据。]]></content>
      <categories>
        <category>良渚</category>
      </categories>
      <tags>
        <tag>良渚</tag>
        <tag>考古</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手机如何登陆Google应用商店]]></title>
    <url>%2Fposts%2F34057798.html</url>
    <content type="text"><![CDATA[引言因为谷歌在国内的退出，导致很多人的Android手机上无法安装上Google play store。那是否有什么简单的方法能让手机安装上Google play store 呢？方法还是有的，大致介绍如下。 安装在PC机的安卓模拟器上安装Google空间。 雷电安卓模拟器 Google空间 雷电模拟器上安装Google空间 添加Google账户 账户添加绑定后既可以访问Googleplay应用商店。在自己的手机上也是如此的操作。 相对繁琐的是谷歌账号注册需科学上网，这里分享一个科学上网软件。 是不是发现原来访问Google play 应用商店是一件非常简单的事情！]]></content>
      <categories>
        <category>GooglePlay</category>
      </categories>
      <tags>
        <tag>GooglePlay</tag>
        <tag>手机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win10下Git多账号同一电脑多个ssh-key的管理]]></title>
    <url>%2Fposts%2F1526b943.html</url>
    <content type="text"><![CDATA[有时候在电脑上，需要同时管理多个代码托管平台，在推送不同平台时，需要使用不同 的SSH进行链接，如何进行多个SSH的创建和管理一时间让我有些头痛。查询百度后，解决办法大致如下： 本次要在一台电脑上同时管理Github和码云，由于是多SSH管理，需要在局部环境下创建2个SSH。 云码注册的邮箱是：zhanminie@hotmail.com Github注册的邮箱是：qq435271761@hotmail.com 管理员模式打开Git Bash，输入git config --global --list 查看自己电脑主机是否对Git进行了相关的全局设置: 1git config --global --list 如果存在，先删除全局变量，例如： 12git config --global --unset user.name "13588245977"git config --global --unset user.email "zhanminjie@hotmail.com" 12git config --global --unset user.name "zmj2008"`git config --global --unset user.email "qq435271761@hotmail.com" 新建两个SSH 1234git config --global user.name "zmj2008"git config --global user.email "qq435271761@hotmail.com"ssh-keygen -t rsa -C qq435271761@hotmail.com 执行命令 创建github对应的sshkey，将其命名为id_rsa 123git config --global user.name "13588245977"git config --global user.email "zhanminjie@hotmail.com"ssh-keygen -t rsa -C zhanminjie@hotmail.com 执行命令创建云码对应的sshkey，将其命名为id_rsa_gitee 创建成功示意图如下： 123456789101112131415161718192021C:\Users\Mayjor_Zmj&gt;ssh-keygen -t rsa -C zhanminjie@hotmail.comGenerating public/private rsa key pair.Enter file in which to save the key (C:\Users\Mayjor_Zmj/.ssh/id_rsa): id_rsa_giteeEnter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in id_rsa_github.Your public key has been saved in id_rsa_github.pub.The key fingerprint is:SHA256:TmR4BCxLZX1JVRB/dtI9B1JVL18Y+PiEruvFs/MOUSE zhanminjie@hotmail.comThe key's randomart image is:+---[RSA 2048]----+| o+o...oE**.+|| o..o. o .+ *o|| . o. +. +*.X|| . + o.o*=|| S ..o .|| o .... || . .= || ...+ || .o..+o |+----[SHA256]-----+ 此时在系统sysem32中会将生成id_ rsa,id_rsa.pub(公钥); id_rsa_gitee,id_rsa_gitee.pub(公钥) 四个文件，将其放到C:\Users\Mayjor_Zmj\ .ssh 文件夹下 把云码和github对应的公钥绑定到对应网站到服务器 将新建SS加入 SSH agent当中 ssh-agent bashssh-add ~/.ssh/github_id_rsassh-add ~/.ssh/gitlab_id_rsa_gitee 在C:\Users\Mayjor_Zmj\ .ssh 文件夹下新建config.txt文本文件对两SSH进行配置 在.ssh目录下创建config文本文件并完成相关配置(最核心的地方) 每个账号单独配置一个Host，每个Host要取一个别名，每个Host主要配置HostName和IdentityFile两个属性即可 Host的名字可以取为自己喜欢的名字，不过这个会影响git相关命令，例如：Host mygithub 这样定义的话，命令如下，即git@后面紧跟的名字改为mygithubgit clone git@github:PopFisher/AndroidRotateAnim.git HostName 这个是真实的域名地址IdentityFile 这里是id_rsa的地址PreferredAuthentications 配置登录时用什么权限认证–可设为publickey,password publickey,keyboard-interactive等User 配置使用用户名 12345678910111213# githubHost github.comHostName github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsaUser zmj2008 # smartgitHost gitee.comHostName gitee.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa_giteeUser 13588245977 设置玩完成后，输入ssh -T git@github.com/ssh -T git@gitee.com进行测试，查看配置是否成功。 测试1成功： 123Mayjor_Zmj@DESKTOP-CVQMHBH MINGW64 ~/Desktop$ ssh -T git@github.comHi zmj2008! You've successfully authenticated, but GitHub does not provide shell access #出现该句表示成功 测试2未成功： 123Mayjor_Zmj@DESKTOP-CVQMHBH MINGW64 ~/Desktop$ ssh -T git@gitee.comgit@gitee.com: Permission denied (publickey). #测试未成功，未有权限 若发生上述情况，处理的解决办法是先输入eval ssh-agent -s 再输入ssh-add ~/.ssh/id_rsa_github就解决了。 1234567Mayjor_Zmj@DESKTOP-CVQMHBH MINGW64 ~/Desktop$ eval `ssh-agent -s`Agent pid 1749Mayjor_Zmj@DESKTOP-CVQMHBH MINGW64 ~/Desktop$ ssh-add ~/.ssh/id_rsa_giteeIdentity added: /c/Users/Mayjor_Zmj/.ssh/id_rsa_gitee(zhanminjie@hotmail.com) 测试2成功： 123Mayjor_Zmj@DESKTOP-CVQMHBH MINGW64 ~/Desktop$ ssh -T git@gitee.comHi zhanminjie! You've successfully authenticated, but GITEE.COM does not provide shell access. 这样两个SSH在局部变量下创建成功。Github和码云既可以分别进行管理了。]]></content>
      <categories>
        <category>ssh-key</category>
      </categories>
      <tags>
        <tag>ssh-key</tag>
        <tag>多账号</tag>
        <tag>Windows</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hugo安装和部署到码云]]></title>
    <url>%2Fposts%2Fd5c577fc.html</url>
    <content type="text"><![CDATA[Hugo是一个用Go编写的静态HTML和CSS网站生成器。它针对速度，易用性和可配置性进行了优化。Hugo获取包含内容和模板的目录，并将它们呈现为完整的HTML网站。 Hugo依赖Markdown文件和元数据的前端内容，您可以从任何目录运行Hugo。这适用于您没有特权帐户的共享主机和其他系统。Hugo在几分之一秒内呈现了一个中等规模的典型网站。一个好的经验法则是每个内容呈现大约1毫秒。Hugo旨在适用于任何类型的网站，包括博客和文档等。 Hugo安装方式1：命令行安装先安装Chocolatey，管理员方式运行cmd.exe，输入 1@"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin" 安装hugo，管理员方式运行cmd.exe，输入 1choco install hugo -confirm 方式2：zip安装点击Hugo，选择对应系统（WIN10 64位）最新版—并下载 下载完成后—解压到自己制定文件夹，我这里是（C:\hugo0.56.2）下，该版本为之前已下载。 为Hugo添加环境变量（自行百度就可以添加） 添加完成后，WIN+R打开运行框输入 Hugo version 若显示Hugo Static Site Generator v0.56.2-5F033A7F windows/amd64 BuildDate: 2019-07-30T09:06:05Z说明安装成功。 12345Microsoft Windows [版本 10.0.18950.1000](c) 2019 Microsoft Corporation。保留所有权利。C:\Users\Mayjor_Zmj&gt;hugo versionHugo Static Site Generator v0.56.2-5F033A7F windows/amd64 BuildDate: 2019-07-30T09:06:05Z #表示安装成功 生成站点根目录输入cd c:/hugo0.56.2进入Hugo文件夹 123C:\Users\Mayjor_Zmj&gt;cd c:/hugo0.56.2c:\hugo0.56.2&gt; 新建博客站点blog,输入new site c:/hugo0.56.2/Blog 12345678910111213c:\hugo0.56.2&gt;hugo new site c:/hugo0.56.2/BlogCongratulations! Your new Hugo site is created in c:\hugo0.56.2\Blog. #表示新建成功Just a few more steps and you're ready to go:1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the "hugo new theme &lt;THEMENAME&gt;" command.2. Perhaps you want to add some content. You can add single files with "hugo new &lt;SECTIONNAME&gt;\&lt;FILENAME&gt;.&lt;FORMAT&gt;".3. Start the built-in live server via "hugo server".Visit https://gohugo.io/ for quickstart guide and full documentation. 安装主题选用该hugo-icarus-theme主题 进入themes文件夹，下载主题： 12345678910c:\hugo0.56.2&gt;cd Blogc:\hugo0.56.2\Blog&gt;cd themes #进入该文件夹c:\hugo0.56.2\Blog\themes&gt;git clone https://github.com/digitalcraftsman/hugo-icarus-theme.git #下载主题Cloning into 'hugo-icarus-theme'...remote: Enumerating objects: 1041, done.remote: Total 1041 (delta 0), reused 0 (delta 0), pack-reused 1041Receiving objects: 100% (1041/1041), 2.34 MiB | 5.00 KiB/s, done.Resolving deltas: 100% (670/670), done. 点击进入icarus主题文件夹下的exampleSite文件夹将config.toml的内容复制到Blog根目录下覆盖原有config.toml，修改config.toml头部文件，theme、themesDir的配置，其他的配置可以之后慢慢设置。 回到Blog根目录，输入hugo server 本地运行成功后，在浏览器上输入http://localhost:1313/查看如下： Hugo部署到码云创建SSH码云账号：13588245977 码云密码：zhanminjie@hotmail.com 1ssh-keygen -t rsa -C zhanminjie@hotmail.com 创建云码对应的sshkey，将其命名为id_rsa_gitee 123456789101112131415161718192021C:\Users\Mayjor_Zmj&gt;ssh-keygen -t rsa -C zhanminjie@hotmail.comGenerating public/private rsa key pair.Enter file in which to save the key (C:\Users\Mayjor_Zmj/.ssh/id_rsa): id_rsa_giteeEnter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in id_rsa_github.Your public key has been saved in id_rsa_github.pub.The key fingerprint is:SHA256:TmR4BCxLZX1JVRB/dtI9B1JVL18Y+PiEruvFs/MOUSE zhanminjie@hotmail.comThe key's randomart image is:+---[RSA 2048]----+| o+o...oE**.+|| o..o. o .+ *o|| . o. +. +*.X|| . + o.o*=|| S ..o .|| o .... || . .= || ...+ || .o..+o |+----[SHA256]-----+ 把云码和github对应的公钥绑定到对应网站到服务器 将新建SS加入 SSH agent当中 ssh-agent bash ssh-add ~/.ssh/gitlab_id_rsa_gitee 打开bash here，c测试电脑和平台的链接。 123Mayjor_Zmj@DESKTOP-CVQMHBH MINGW64 ~/Desktop$ ssh -T git@gitee.comHi zhanminjie! You've successfully authenticated, but GITEE.COM does not provide shell access. 码云代码托管平台上新间仓库，仓库名称同项目名称，最后生成的网址就是https://gitee.com/仓库名称.io 开启Page功能 博客根目录上传代码按步骤输入 hugo --theme=even --buildDrafts --baseUrl=“https://zhanminjie_admin.gitee.io” cd public git init git remote add origin https://gitee.com/zhanminjie_admin/zhanminjie_admin.git git add -A git commit -m “first commit” git config --global user.name &quot;13588245977&quot;git config --global user.email &quot;zhanminjie@hotmail.com&quot; git push origin master git pull --rebase origin master #问题是因为github中的README.md文件不在本地代码目录中，可以通过如下命令进行代码合并. git push origin master 12345678910111213141516171819202122hugo --theme=even --buildDrafts --baseUrl=“https://zhanminjie_admin.gitee.io”cd publicgit initgit remote add origin https://gitee.com/zhanminjie_admin/zhanminjie_admin.gitgit add -Agit commit -m “first commit” git config --global user.name "13588245977"git config --global user.email "zhanminjie@hotmail.com"git push origin mastergit pull --rebase origin master #问题是因为github中的README.md文件不在本地代码目录中，可以通过如下命令进行代码合并git push origin master 参考教程： https://baijiahao.baidu.com/s?id=1630800288039248525&amp;wfr=spider&amp;for=pc https://zilongshanren.com/post/move-from-hexo-to-hugo/ https://juejin.im/post/5cefc5c351882520724c7cf5 https://github.com/nusr/blog/blob/master/config.toml]]></content>
      <categories>
        <category>Hugo</category>
      </categories>
      <tags>
        <tag>Hugo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[空王冠读书笔记]]></title>
    <url>%2Fposts%2F2023e993.html</url>
    <content type="text"><![CDATA[历史背景玫瑰战争是英国历史上有名的一个名词，它发生在15世纪1455年至1485年之间。是英王爱德华三世的两支后裔家族，兰开斯特家族和约克家族为争夺王位而发生的一场内战。两大家族都是金雀花王朝王室的分支，约克家族是爱德华三世的第四子的后裔、兰开斯特家族是爱德华三世的第三子的后裔。 “玫瑰战争”一名并未使用于当时，后来在玫瑰战争结束以后一百年既1591年，莎士比亚有一部历史剧《亨利六世》，该剧总共有上、中、下三部，这这部《亨利六世》里以两朵玫瑰被拔标志战争的开始后才成为普遍用语。此名称源于两个家族所选的家徽，兰开斯特的红玫瑰Rosa gallica和约克的白蔷薇Rosa alba。 战争最终以兰开斯特家族的亨利七世与约克的伊丽莎白联姻而结束，也结束了法国金雀花王朝在英格兰的统治，开启了新的威尔士人都铎王朝的统治。 也标记着在英格兰中世纪时期的结束并走向新的文艺复兴时代。英国BBC电视台之前就有部非常有名的电视剧《都铎王朝》，都铎王朝也是英国历史上比较有名的一个时期，它之所以有名就是因为它意味着中世纪的结束和文艺复习的开始。既文艺复兴是从都铎王朝开始的，在英国历史上非常有意义的转折点。 2012年英国广播公司BBC根据莎士比亚的《理查二世》、《亨利四世：第一部》、《亨利四世：第二部》和《亨利五世》拍出了《空王冠》，是BBC电视台为2012年伦敦奥运会精心制作的4部莎士比亚剧集，旨在为宣传英国文化。2016年BBC又根据莎士比亚的《亨利六世》拍出了《空王冠》第二季。同时热门美剧《冰与火之歌 权力的游戏》也取材自玫瑰战争的历史，可见英国的这段历史非常的有名。 笔记主要分三部分阐进行阐述。 玫瑰战争的历史是怎样的《空王冠-玫瑰战争与都铎王朝的崛起》是由研究英国中世纪历史的著名历史学家丹.琼斯所写，以详尽的历史资料为读者展现了真实的玫瑰战争史，获得过多项大奖。 这段30年的战争历史大致上可以分为三个阶段： 第一阶段讲一个政权的四面楚歌，遭遇接二连三的灾难，而国王偏偏昏庸无能，国内最强大的一些城民努力避免一些灾难，但还是深陷内战无法自拔。 1420年亨利五世国王打败并重创法国后和法兰西国王的女儿凯瑟琳结婚，同时和法国签订了特鲁瓦条约，获得了法兰西王位的继承。当时法国的实际控制权不在疯癫的查理六世国王手中而是在其皇后手中，签订特鲁瓦条约的核心内容是亨利五世娶国王的女儿并获得法国的继承权，废除太子查理七世的继承权。 1422年不满36岁的英国国王亨利五世突然间患痢疾去世，紧接着法国国王查理七世也去世。英国王位落到不满9个月大的亨利六世手中，在亨利六世的遗嘱中让自己的大弟弟掌管英格兰，让自己的二弟弟掌管法兰西，让他的舅舅作他儿子的监护人。 1428年法国圣女贞德的出现使英国军队在法兰西战场上溃败，很多领土被法国军队收回。在特鲁瓦条约中被废除了继承权德法兰西太子在那一年冬天登基为法兰西国王查理七世。见此情景英格兰不得不把年幼德亨利六世送往法国巴黎也登基为法国国王，法国同时出现了两个国王。 1435年亨利五世德两个弟弟先后死亡，造成了英格兰政权德空虚，内部派系开始争斗，政局发生动荡。贵族们首先就将矛头指向国王的近臣，掌玺大臣首先被驱逐和杀害，英格兰沿海发生了暴乱，然后叛军冲进英格兰国王亨利六世逃亡。 1450年爱尔兰总督约克家族约克公爵回国和兰开斯特家族萨默塞特公爵开战，战败后的约克公爵被带到伦敦宣誓效忠国王。 1453年8月到1454年的圣诞节，亨利六世突然发疯病，神志昏迷长达15个月，英国的议事会不得不任命约克公爵为护国主，萨默塞特公爵被关押入狱，同年玛格丽特皇后生下爱德华王子。国王清醒以后护国主职位撤销，塞默塞特公爵被释放，两大家族的矛盾升级。 1455年在第一次圣奥尔本斯战役中，约克公爵打败了国王率领的军队，国王亨利六世被俘，萨默塞特公爵战死。回到伦敦后再次担任护国主职务，实际掌管政权。 1458年在亨利六世的倡议下各路贵族在伦敦举行了名为爱之日的大游行，皇后玛格丽特（兰开斯特家族的代表）和约克公爵（约克家族代表）手挽着手在大街上游行，示意贵族之间要团结。 1459年游行刚刚结束没多久，两大家族战事又起，约克公爵战败逃回爱尔兰。 1460年约克党人沃里克伯爵率军打进了伦敦，和国王军队在北安普敦交战，国王军队战败国王亨利六世再次被俘。并将约克公爵迎回伦敦。公爵提出要做国王，议事会拒绝了他的要求，达成了国王仍给亨利六世，剥夺了王子爱德华的继承权，转由约克公爵及其后人继承的协议，约克公爵同意了。 2个月后逃亡的玛格丽特皇后及其兰开斯特党人向约克家族展开反击，约克公爵战败被杀。但约克党人沃里克伯爵仍控制着亨利六世。第二次圣奥尔本斯战役爆发，亨利六世战败。沃里克伯爵扶持爱德华四世加冕为英国国王。 第二阶段讲有一个人决定要让这个风雨飘摇的国家重整起来，不是鼓励无能的国王努力治理国家，而是将其废除，自己取而代之。 爱德华四世加冕为国王后，逐渐和沃里克伯爵发生了不和甚至开战，到1469年7月爱德华四世战败被服。但是沃里克伯爵因为控制不了全国的局势，不得不将爱德华四世释放，然后自己逃亡法国。到9月份沃里克在法国贵族的支持下，又率雇佣军军攻打回英国。爱德华四世流亡比利时布鲁日。城头变换大王旗在当时变化的非常的普遍。 一年后爱德华打着“打败篡位者亨利”从新带着雇佣军打回英国夺回皇位，沃里克伯爵战死。兰开斯特家族玛格丽特又从法国率领雇佣军和爱德华四世开战，战败被囚禁，爱德华王子被杀。爱德华四世知道不论亨利六世在哪里对自己都是一个威胁，若把他从伦敦塔释放了他还是会复辟回来当国王，只有把他杀死自己才能心安理得的睡觉。所以在爱德华四世凯旋回国的当天晚上，关在伦敦塔里的亨利六世离奇死亡。 第三阶段讲都铎王朝是如何崛起的。 亨利六世有位同母异父的兄弟，叫亨利都铎。有位叔叔叫贾斯伯都铎。当时也是想要回来同玛克利特汇合来推翻爱德华四世，但是还未赶到就听到玛格丽特战败被囚的消息，随即逃亡布列塔尼公国。 1483年4月爱德华四世突然患病去世，爱德华四世的弟弟查理三世想当护国主，但议会否决了该方案，理查三世在护送自己的侄儿爱德华五世去伦敦的时候，逮捕了其侄儿的监护人，又任命自己为护国主。回到伦敦之后理查三世又突然宣布其侄儿爱德华五世是私生子没有继承权，于1483年7月任命自己是英国国王查理三世。当时的英国民间常有三个月内三个国王的传言。查理三世登基以后，想到在布里塔尼公国还有一位兰开斯特家族的人亨利都铎，他和布列塔尼公爵达成了交换叔侄两人的协议。没想到叔侄两听到风声后立马逃到了法国，受到法国国王的欢迎。 1485年叔侄两借钱装备了一只4000人的雇佣军，从发源地威尔士登陆，8月份打响了伯斯伯斯战役，在亨利都铎的军队快要被打败的时候，其继父威廉斯坦利爵士突然帮忙，打败了理查三世的军队，人被斩杀，王冠被砍破。在该战场上亨利都铎欸加冕为英王亨利七世。1485年10月回到英国重新进行了加冕仪式。第二年1月又迎娶了爱德华四世的大女儿伊丽莎白，实现了兰开斯特和约克家族的通婚。婚礼上又以粉红色的都铎玫瑰作为标志。 1486年伊丽莎白生下一个儿子亚瑟，这就是后来的亨利八世国王。从红玫瑰白玫瑰的战争到红玫瑰白玫瑰被都铎粉玫瑰所代替，玫瑰战争到此结束。 书中有意义的人物这本书的意义并不在于给我们讲述了玫瑰战争的历史，而是通过了对历史的描述给我们呈现了许多个性鲜明的人物。这本书中最重要的因该是这两个人物亨利六世和查理三世 人物一：亨利六世 亨利六世 9个月当国王一直到伦敦塔中被杀死。他的父亲亨利五世可以说是英国历史上最伟大的国王，战功赫赫。亨利六世出生以后，所有人对他的期望和标准都是以他父亲为标准。书上写道”一个从来没有看见过自己父亲如何统治英格兰的少年,如何承受的了”。在自己父亲的光环下，亨利六世的人生会变得艰难。一个伟大国王之后，亨利六世如何才能成为下一位伟大的国王呢？他肯定无法承受。书中也写道”亨利六世长大以后，他是一位耳根子软，毫无主见容易受影响的国王，他始终喜欢人家替他做决定，显得非常的幼稚” 有个细节很说明问题，沃里克伯爵联合玛格丽特将爱德华四世赶下台后，亨利六世复辟了。当爱德华四世又打回来，将沃里克伯爵杀死。然后回到伦敦见到了亨利六世，亨利六世就上来一个拥抱，说：”我的约克亲戚，非常欢迎你，我知道在你手里我的生命不会有危险。”但是亨利六世太天真了，爱德华四世颠沛流离回到英国后是很没有耐心的，就在一个多月后，将亨利六世杀死在伦敦塔中。 政治是非常残酷的，不是那些懦弱的人能想到的。 当然亨利六世的意义还在于他并不是一个很无用的人，他对教育事业的用心是很难得的，书里写到”在十五世纪四十年代早期，亨利六世花了大量的精力来支持创办伊顿公学，他亲自研究了伊顿公学的设计方案并亲笔修改。他还出资建造了剑桥大学的国王学院。 作者在书中写道”英国国王没有哪一位像亨利六世那样对教育事业如此热衷。但也没有哪一位国王像他那样对战争毫无兴趣”。意思是它就不是一个国王应该又的样子。伊顿公学和剑桥大学是英国最有传统的大学都和这位亨利六世有关。但他就是从来不对战争感兴趣。 这和中国的两位皇帝，其中一位宋徽宗丢掉了半壁江山，但他的才华是无可非议的，是历代皇帝中最有才华的一位皇帝，他的画他的字到现在为止都是无与伦比的。另一位南唐后主李煜他也是位无能的皇帝，但却能写出”问君能有几多愁，恰似一江春水向东流”如此有艺术水准的诗词。所以说对一个人的判断，对一个封建帝王的判断，不能仅仅用单一的标准来衡量，需要多方面来看待。 人物二：理查三世 理查三世，历史上传闻他是从心里到身体都极度畸形的残忍人物，是个驼背是个瘸子，历史对他的负面评价是很多的。但他也并不是一无是处，按书里讲他在位仅仅两年，在推动司法领域的无罪推动原则，保释制度等方面发挥了积极的作用，建立了一套完整的法律制度体系。在《空王冠》2中查理三世是由”卷福”饰演。 查理三世他很能干，因为他哥哥爱德华四世是个指挥能力和打仗能力非常好的人，打过很多战役。查理三世从政治家角度来说也是非常优秀的。在其哥哥爱德华四世的笼罩下，他从小养成了心里的阴暗，他废除了他的侄儿并在伦敦塔将其斩草除根，自己当了国王。封建时代政治就是这样，你不杀我我就要杀你，所以他必须要这样做。同时在《空王冠》第二季中还讲到查理三世还向他哥哥的女儿求婚，就是后来亨利六世娶的那位公主。所以这个人物的性格是非常鲜明的。 历史并不是只有琐碎的年代记录，而在这些记录的年代之下还有着比虚构更精彩更丰富的故事，事实就是这样。我们来看玫瑰战争的这段历史，翻过来覆过去翻过来覆过去那种精彩的程度我们想想不到，所以用历史的细节来还原历史人物，让我们从中感悟到历史对于现实的意义，并塑造出如此生动的人物，这就是作者丹.琼斯写这部著作值得称道之处。 读此书的启发读完这本书对我个人的启示有： 启示1：历史是由无数个偶然组成的，英国的历史任何一个国家的历史都是这样的。如果当时不是这样，历史会是另外一个样子，但是历史是没有如果的。过去已经发生我们永远改变不了。我们需要仔细观看历史，历史上无数个偶然当中必然存在一定的规律。 启示2：血缘于政治，封建王朝血缘就是最大的政治。书中写道”多少年来英格兰的国王从来没有和自己的臣民结婚过，他们的结婚都是有政治利益的，一般是和海外国家贵族通婚”。就如亨利五世和法王的伊丽莎白结婚，通过婚姻你就可以同时拥有英国和法国。英国和法国在地理位置上隔着一条海峡，就是通过联姻使两个国家联系在了一起。在中国的历史上比较的少，但在欧洲的历史上确比较普遍，玫瑰战争是一个典型的代表，在这段历史中谱系成为最有力的宣传手段。到后来都铎王朝从国王、贵族到平民才从血缘政治转移到宗教斗争中——天主教和新教之间的斗争。 启示3：个人和历史，古往今来的历史镌刻出无数伟人的事迹。他们在历史的转变点上起到了重要的作用。像亨利五世、亨利六世、查理三世、亨利七世。毛主席曾说过只有人民才是创造世界历史的动力。亨利五世也好，亨利七世也好如果没有当时英格兰民众的拥护恐怕也无能为力。在学习历史时要看到个人同历史之间的关系，个人在历史当中的重要作用，又不能否定民众在当中所起的作用。 启示4：轮回与转换，你方唱罢我登台，在玫瑰战争中是非常非常典型的，当时英格兰的一位外交官写过”我希望这个国家及其人民都坠入深海，因为它们完全没有稳定性可言”。英格兰这样的事情完全没有听到过两次，一会你打进来，一会他打进来，一会国王跑了，一会国王又回来了，一会国王关到伦敦塔里了，一会又被放出来了，不停的反复，在你觉得某人要赢的时候，突然间就失败了，变幻之突然让人无法想到。就如同人生的起起伏伏一样。]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
        <tag>玫瑰战争</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浮世绘简介]]></title>
    <url>%2Fposts%2F2d596d02.html</url>
    <content type="text"><![CDATA[浮世绘由来乘着周末，来到浙江赛丽美术馆参观了”浮生绘世”浮世绘原作展。 那究竟浮世绘是什么呢？ 浮世绘是日本江户时代流行的风俗画，它分为手绘和木刻两种版本，画作的题材以江户市井生活和风景为主，它的诞生、发展和代表作标志了17至19世纪整个日本的艺术史。 日语中的【浮世】一词在古代原为【忧世】的意思，因为自中世界产生的厌世的人生观是建立在对净土向往的来世期待上的，随着佛教理念的世俗化，此岸现实取代了彼岸理想，较之过去或者未来，此时此刻【现世】的享受成为人们追逐目标，【忧世】也由此被更为轻松的明快的【浮世】所取代。 日本浮世绘技术来源于中国的雕版印刷术。木板印刷术发达的宋代对当时的日本木刻版画兴起起到了推动作用，浮世绘在其绘画风格与制作品质上也力荐中国的木板画的模式，从而逐步形成了浮世绘。可以说浮世绘这个跨越3个世纪的东洋艺术明珠，在世界艺术史上还是占有它光辉的一页。 同时日本浮世绘对当时西方印象派和后印象派绘画背离西方学院派传统也起到了催化剂的作用。像绘画大师马奈、莫奈、德加、毕沙罗、惠斯勒等都热心收藏或借鉴日本版画，凡高也深受日本浮世绘的影响，曾以油画临摹过《花魁》、《雨中大桥》和《开花的梅树》等日本版画。 左为歌川广重《龟户梅屋铺》1857，右为梵高1886年临摹的《日本情趣：梅花》 左为歌川广重《大风暴雨》1857，右为梵高1887年《雨中大桥》 浮世绘的绘画题材较为广泛包括： 原作展览本次原作展展出了：喜多川歌麿、鸟文斋荣之、葛饰北斋、歌川丰国、歌川国贞、歌川广重、歌川国芳、歌川广景、菊川英山、月岗芳年共10位浮世绘师的300多幅原作。最为难得是有：歌川广重《五十三次名所图会》、《东海道五十三次》；歌川果贞《役者见立东海道五十三次》；月冈芳年《风俗三十二相》；歌川国芳《木曾街道六十九次》 五大系列原著成套展出。绘画题材涉及美人绘、舞者绘、名所绘等，通过这次展览可以说是让我系统性的了解了浮世绘的发展史，看到了浮世绘不同时期的风格样式，以及感受到了不同画师的浮世精神。 “青楼画家”-喜多川歌麿（1753年－1806年） 是于鸟居青长同时代的画师，堪称大器晚成且后来居上将美人画推向空前绝后的顶峰，是浮世绘美人画成就最高的大师。他笔下的美女，不仅是一道社会风景，他更善于将视线投向女性的心里深处，通过有意夸大美女的面部表情和动态，突出微妙的心里与感情差异作为表现主题，进一步追求人性真实和内在的心里，这些看似千人一面的美人画，实则在遵循日本传统的同时注入了爽快利落的优雅，使美人拥有不同的个性，令人感到这正是歌麿要塑造的形象结晶。 作品：《青楼十二时》 左:《卯之刻-午夜12点左右》 中:《辰之刻-深夜2点左右》 右:《已之刻-凌晨4点左右》 左:《卯之刻-清晨6点》 中:《辰之刻-早晨8左右》 右:《已之刻-上午10点左右》 左:《午之刻-正午12点左右》 中:《未之刻-中午2点左右》 右:《申之刻-下午4点左右》 左:《酉之刻-傍晚6点左右》 中:《戊之刻-晚上8点左右》 右:《亥之刻-夜晚10点左右》 “古趣盎然”-鸟文斋荣之（1756年-1829年） 是与喜多川歌麿同时代的人气画师，二人亦是竞争对手，较之喜多川歌麿极具视觉冲击力的大手绘，鸟文斋荣之则以站立的全身像取胜，以理想化的样式与喜多川歌麿抗衡，《青楼美人六花仙》系列表现出 宽政中期之后的新风格，人物动态出现了新的变化，优雅的坐姿不同于以往亭亭玉立的美人像，较之喜多川歌麿常于表现女性的肉体美与性格差异， 他笔下的人物更加趋典雅倾城更趋理想化，在日语中花仙与歌仙同音，他借此比喻吉原六位有真实姓名的花魁静谧中洋溢着温馨的书卷气息，矜持超然的动态，涵儿不露的表情，显然有别于世俗的亲魅，这也是鸟文斋荣之个人品格的写照，他将自己的精神进阶寄托于对古典趣味的营造之中。 左:《携女遷徙》 中:《福人寶合》 右:《賞花圖》 左:《五美人》 中:《美人夜讀》 右:《風》 左:《五人行》 右:《藝人獻技》 “画狂人”-葛饰北斋（1760年-1849年） 日本化政文化的代表人物，14岁开始学习雕版印刷，18岁向胜川春章学习，开始了他自己的绘画生涯。1826年北斋以不同角度的富士山为题材，创作了系列风景画《富裕三十六景》其中以《神奈川冲凉里》最为有名。葛饰北斋一生用笔墨追求完美、真理、生命的意义。他60多年的艺术创作生涯期间改号频繁多达30回，好像在强调其作品和思想风格最重要的转折点，这种做法一方面对画作的归属问题造成了不少麻烦，另一方面它又是史学者们最普遍使用的一种方法，以识别出其历史创作有别于其他艺术家。葛饰北斋的作品可谓多种更多样，水墨画、版画、染画和图书插画数不胜数，一种如饥似渴的狂热迫使他从孩提时代就不在放下画笔和色彩。 作品：《富裕三十六景》 左:《神奈川沖浪裏》 中:《凱風快晴》 右:《山下白》 左:《深川万年桥下》 中:《东都骏台》 右:《青山圆座松》 左:《武州千住》 中:《甲州犬目峠》 右:《尾州不二见原》 左:《骏州江尻》 中:《江都骏河町三井见世略图》 右:《御厩川岸见两国桥夕阳》 左:《五百罗汉寺荣螺堂》 中:《礫川雪旦》 右:《下目黑》 左:《隐田水车》 中:《相州江岛》 右:《东海道江尻田子浦略图》 左:《東海道吉田》 中:《上总海路》 右:《江戸日本橋》 左:《隅田川关屋》 中:《登戸浦》 右:《相州箱根湖水》 左:《甲州三坂水面》 中:《东海道程谷》 右:《武州玉川》 左:《東都浅草本願寺》 中:《武陽佃島》 右:《相州七里滨》 左:《相州海泽左》 中:《甲州石斑泽》 右:《甲州三島越》 左:《遠江山中》 中:《信州諏訪湖》 右:《常州牛掘》 “万众明星”-歌川丰国（1769年-1825年） 歌川丰国善于以写实手法表现演员的肖像、动作于表情，尤其是那些精彩的亮相瞬间，在他笔下显得异常生动并富有个性。逐渐形成了丰国样式，他由此赢得役者绘界的稳固地位，大手绘成为役者绘的主流 ，丰国因此成为幕末役者绘的主要画师。他陵墓的碑文上这样写道：”常年来为排忧造像妙笔生花，生气活动宛若神在，又彩笔美人之实时娇态，流行诸国， 华人翻刻亦相求，恰益阳斋之好，如日升腾，丰国之名独领风骚，画风自成一家，实乃近浮世绘师之冠，后有众弟子86人联署俨然是确立歌川王国的宣言。” 作品：《古今名婦伝》 左:《加賀の千代》 中:《中万字の玉菊》 右:《万治高尾》 左:《下女お初》 中:《常磐御前》 右:《巴御前》 左:《小野小町》 中:《掃溜お松》 右:《新町の夕霧》 左:《栢原の捨女》 中:《静御前》 右:《遊女地獄》 歌川国贞（1786年-1865年） 日本江户时期浮世绘画家，又称三代歌川丰国。出身名门，以美人画、尤以女性头部绘画著称。后继承师父名号，成为三代歌川丰国。画号“五渡亭”、“一阳斋”、“香蝶楼”。他创作期长，画作多，传世作品数量庞大，是目前浮世绘画家中传世作品最多的一位。 作品：豊国揮毫奇術競 左:《白菊虎》 左中:《的田次郎》 右中:《法华山袈裟太郎》 右:《风间八郎》 左:《虎王丸》 左中:《将军太郎良门》 右中:《鸣神上人》 右:《楠姑摩姬》 左:《龙妙瑃》 左中:《七草四郎》 右中:《大山道郎》 右:《日本肽右卫门》 左:《苦菜姬》 左中:《市原野鬼童丸》 右中:《龙夜叉姬》 右:《藤浪由绿之丞》 左:《天竺德兵卫》 左中:《晓星五郎》 右中:《岩铁法印》 右:《妖贼大蛇丸》 左:《勇妇钢手》 左中:《由利友雪》 右中:《玉藻前》 右:《贼首儿雷也》 左:《伞平内左卫门长盛》 左中:《博多小女郎》 右中:《菊池香寿丸》 右:《业云国师》 左:《潘雀太郎》 左中:《仁木弹正》 右中:《拾美丸》 右:《云龙九郎》 “乡愁广重”-歌川广重（1820年—1825年） “我将画笔留在身后，留在江户，我将开启新的旅程,去欣赏西方极乐世界的著名景色”歌川广重将其一生事业都奉献给了风景画的创作之中，发表了无数成功之作，1833-1834年间创作的锦绘《东海道53次》确立了他作为最受欢迎的浮世绘画家之一的地位，在该系列绘画中，他善用写生笔法，加入寓人手法，把各种从事活动的小人物都融入他的画中。他的绘画风格较为亲民、清丽在日本和欧洲都获得了很高的声望。在欧洲他粗犷的 创作风格唤起了先锋艺术主角们的关注和 热情， 梵高的浮世绘版画收藏品中有其众多风景画藏品。事实上歌川广重非常善于这类风景画，有别于其他浮世绘画师，他将气候特征弥漫在整幅画中，凸显出大自然四季的变换，强烈的诗意感是其整个创作中最显著的特征，在描绘某个地方的气候方面，他有与众不同的能力，能将时间定格在某个无法复制的时刻，尽显出大自然的精髓。 作品：《近江八景之内》 左:《石山秋月》 右:《势多夕照》 左:《粟津晴岚》 右:《矢桥归帆》 左:《三井晩钟》 右:《唐崎夜雨》 左:《坚田落雁》 右:《比良暮雪》 “武者国芳”-歌川国芳（1798年-1861年） 歌川国芳可谓歌川派的另类，他的制作不仅涉及浮世绘的所有题材，而且在浮世绘最主要的题材美人画和役者绘之外的武者绘领域大展身手佳作颇丰，被誉为”武者国芳”，1828年发表的锦绘系列《通俗水浒传豪杰百八人之一》是其成名作，尤其值得一提的是在 城中轶事肖像系列中的写实手法采用了明暗造型，使物像具有立体感。这是当时进入日本的西方绘画对浮世绘产生影响的直接反应。《木曾街道六十九次》绘制的是中山道的69个旅馆，起于日本桥终于京都， 每个旅馆都作为 71张绘画的其中之一而出现 ，这71个旅馆都有其名字和街道的名称，并写有谐音让人产生无限联想，画面设计了很多故事和人物， 由此我们可以说鉴赏该系列最核心的有两点：一是画面上绘制的人物以及人物在画面中所构置的故事内容，二是旅馆名称谐音所产生的无限联想。除了除了武者绘和役者绘外，歌川国芳还在另外一个领域开辟了新天地，这就是被誉为幕末第一人的讽刺画和戏画，这对于研究国芳来说是不可或缺的内容，他的作品在以轻松的形式抨击幕府专制政权的同时也充分体现了江户市民的乐天性格。 作品：《通俗水浒传豪杰百八人之一》部分 01.矮脚虎 - 王英 02.豹子头 - 林冲 03. 行者 - 武松 04.花和尚 - 鲁智深 05.九纹龙 - 史进 06.浪里白条 - 张顺 07.入云龙 - 公孙胜 08.玉麒麟 - 卢俊义 09.青面兽 - 杨志 10.神行太保 - 戴宗 11.小李广 - 花荣 12.飞天大圣 - 李衮 13.智多星 - 吴用 14.浪子 - 燕青 15.一丈青 - 扈三娘 16.赤发鬼 - 刘唐 17.混江龙 - 李俊 18.圣手书生 - 萧让 19. 拚命三郎 - 石秀 20.轰天雷 - 凌振 “美人画中兴之祖”-菊川英山（1786年-1867年） 菊川英山浮世绘画业从继承喜多川歌麿的风格开始起步的， 从人物形象到题材的选择，从背景描绘到光影描绘，都受到前辈的巨大影响。但他所追求的主要内容不在是人物的心里活动和细微的表情，也不是质感的真实性，而是努力塑造偶像般的稳健品格。人物脸部呈长额蛋形，鼻梁被相应拉长且挺拔，眉毛细长而弯曲，可见鸟文斋荣之的遗风，典雅的造型受到大众欢迎，尤其在全身人物立像中首创S型动态：既头部倾斜，腹部略微突出的娇媚姿态，这是江户末期浮世绘特有的猫背猪手造型的起点，菊川英山由此成为连接幕末浮世绘的桥梁人物，浮世绘类考中将他赞誉为浮世绘美人画中兴之祖。 左:《风流美人五节句 三月》 中:《风流东都八景 新吉原之樱》 右:《青楼六玉川之山城 井出之玉川》 左:《七轩人 玉屋》 中:《江戸町壱丁目扇屋内 花窗》 右:《风流美人七小町 かよひ小町》 左:《青楼美人揃 松叶屋内 染川》 中:《诸芸相生尽 大吉》 右:《风流青楼名花合 玉屋内 浓紫》 “血腥芳年”-月冈芳年（1839年-1892年） 月冈芳年继承了其师歌川国芳的武者绘，并根据中日两国的民间奇闻怪谈，创作了许多被称为残酷绘的表现血腥场面的作品，因此月冈芳年也被称作血型芳年，自1872年前后开始，芳年从歌川国芳风格的武者绘中超脱出来，以西方绘画的理性写实手法向更具合理主义风格的物语绘方向发展，并于1885年始发表若干美人画佳作。 芳年的美人画代表作 《风俗三十二相》系列从表面看与众多歌追随者的”大手绘”别无二致，仔细解读便会发现芳年的匠心所在。有节制的人物形态刻画上，外在的放纵与内心的温情，仿佛有一股即将爆发的温热，画中人物的性格亦传递得惟妙惟肖，娇羞的期待有绝望的爱情，还有小家碧玉般的温情，特别是整套画的最后一幅《明治妻君》把受西方文化熏陶的虚荣的时髦女郎的那种手足无措的笨拙姿态刻画的精妙绝伦，让人忍俊不禁。 作品：《风俗三十二相》 01.寛政年間処女之風俗 02.寛政年間京都芸子風俗 03.(痛苦之相)寛政年間女郎の風俗 04.寛政年间町屋后家の风俗 05.(优雅之相)享和年间官女之风俗 06.享和年间内室之风俗 07.文化年间风俗 08.文政年间内室の风俗 09.文政年间奥女中の风俗 10.天保年间倾城之风俗 11.(寒冷之相)天保年间深川仲町芸者风俗 12 .天保年间深川かるこの风ぞく 13.(好奇之相)天保年间御小性之风俗14.弘化年间廓の芸者风俗15 .(晨起之相)弘化年间むすめの风俗16 .(奇痒之相)嘉永年间かこゐものの风ぞく 17.(犹豫之相)嘉永年间おかみさんの风俗 18.嘉永年间女郎の风俗 19.嘉永年间鸢妻之风俗 20.(陶醉之相)嘉永年间师匠之风俗 21.嘉永年间おいらんのふう俗 22.安政年间町芸者俗ニ酌人之风俗 23.安政年间名古屋嬢之风俗 24.明治五六年以来芸妓の风俗 25.明治年间西京仲居之风俗 26.明治十年以来内室之风俗 27.明治年间妻君の风俗 28.明治年间当时芸妓の风俗 29.明治年间むすめの风俗 30.明治年间娼妓の风俗 31.明治稔间当今芸妓之ふうそく 32.明治年间妻君之风俗 看展心得通过一个下午的参观，使我第一次对日本浮世绘绘画艺术有了一定的了解。 同时也要感叹日本浮世绘画师对日本民间风俗的敏锐洞察及精湛的绘画技艺。]]></content>
      <categories>
        <category>艺术</category>
      </categories>
      <tags>
        <tag>日本</tag>
        <tag>浮世绘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nest添加标签云]]></title>
    <url>%2Fposts%2F449f6cd5.html</url>
    <content type="text"><![CDATA[引言Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。 这次主要介绍 NexT 7.2.0 下添加标签云hexo-tag-cloud设置。 添加标签云设置进入到站点的根目录，在 package.json 中添加依赖: &quot;hexo-tag-cloud&quot;: &quot;2.0.*&quot; 使用命令行进行安装插件 1npm install hexo-tag-cloud@^2.0.* --save 在主题文件夹找到文件 theme/next/layout/_macro/sidebar.swig, 然后添加如下代码： 123456789101112&#123;% if site.tags.length &gt; 1 %&#125;&lt;script type="text/javascript" charset="utf-8" src="/js/tagcloud.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" charset="utf-8" src="/js/tagcanvas.js"&gt;&lt;/script&gt;&lt;div class="widget-wrap"&gt; &lt;h3 class="widget-title"&gt;Tag Cloud&lt;/h3&gt; &lt;div id="myCanvasContainer" class="widget tagcloud"&gt; &lt;canvas width="250" height="250" id="resCanvas" style="width=100%"&gt; &#123;&#123; list_tags() &#125;&#125; &lt;/canvas&gt; &lt;/div&gt;&lt;/div&gt;&#123;% endif %&#125; 添加位置于： 123456789101112131415161718192021222324252627 &#123;% if theme.back2top.enable and theme.back2top.sidebar %&#125; &lt;div class="back-to-top"&gt; &lt;i class="fa fa-arrow-up"&gt;&lt;/i&gt; &#123;% if theme.back2top.scrollpercent %&#125; &lt;span id="scrollpercent"&gt;&lt;span&gt;0&lt;/span&gt;%&lt;/span&gt; &#123;% endif %&#125; &lt;/div&gt; &#123;% endif %&#125; #在该处代码下面添加 &#123;% if site.tags.length &gt; 1 %&#125; &lt;script type="text/javascript" charset="utf-8" src="/js/tagcloud.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" charset="utf-8" src="/js/tagcanvas.js"&gt;&lt;/script&gt; &lt;div class="widget-wrap"&gt; &lt;div id="myCanvasContainer" class="widget tagcloud"&gt; &lt;canvas width="200" height="250" id="resCanvas" style="width=100%"&gt; &#123;&#123; list_tags() &#125;&#125; &lt;/canvas&gt; &lt;/div&gt; &lt;/div&gt; &#123;% endif %&#125; &lt;/div&gt; #在该处代码上面添加 &lt;/aside&gt; &#123;% if theme.sidebar.dimmer %&#125; &lt;div id="sidebar-dimmer"&gt;&lt;/div&gt; &#123;% endif %&#125; &#123;% endmacro %&#125; 在本地下预览效果 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
        <tag>tagcloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[了解良渚-良渚人的字]]></title>
    <url>%2Fposts%2Faac8172d.html</url>
    <content type="text"><![CDATA[良渚”字”刻画符号发现史1936年 良渚文化被发现， 施昕更在1937年上海《时事新报》古代文化专栏发表了《远古文化遗址试掘简录》； 1974年 江苏苏州 澄湖遗址 在一口井中 发现贯耳壶（陶器） 在壶身上发现成组的”字”符号4个； 1986~1987年 浙江余杭南湖遗址 出土一件身上刻有12个”字”符号圈足罐子（陶器），现藏于良渚博物院； 1992年 浙江余杭百亩山遗址 出土一件刻符玉璧（玉器），可以说是在大陆地区首次识别出真正意义上的”字”符号； 良渚文化位于坏太湖流域，面积3.6万平方公里，其中在30多个遗址发现了刻画”字”符号，大致包括： 浙江省 杭州市余杭市南湖、美人地、卞家山、庙前、马家坟、玉家山遗址，拱墅吉如遗址。 嘉兴平湖戴墓墩、庄桥坟遗址、海盐龙潭港、仙坛庙遗址，海宁大泽庙、金石墩、东八角遗址，同向喇叭浜、新地里、小六旺、姚家山、董家桥遗址。 湖州市塔里、昆山、花城遗址。 上海市 金山区亭林、寺庙前遗址，马桥遗址、松江区广富林遗址，青浦区福泉山、西漾淀遗址 江苏省 昆山市太史淀、赵陵山、绰墩、少卿山遗址，常州市武进寺墩遗址 其中以良渚古城的卞家山遗址，平湖庄家坟遗址大规模发现刻画”字”符最多，占目前良渚文化已发现700多个符号中 大部分。 良渚文化的”字”符号的研究对良渚文化中”字”符号的研究相对较晚，如同良渚文化考古初期关于玉器类的考古发掘内容并没有被重视，直到反山、瑶山发掘之后，玉器在发掘报告之中才被重视起来。80年代前对陶器的形态比较重视，但对其的纹饰或者刻画符号也没有像现在这么重视。 到了2015年 上海人民出版社 出版《良渚文化刻画符号》,书中截至到2015年涉及器物554件，其中陶器536件，石器11件，玉器7件，符号656个，附录收集符号100余个。总计近700个，340余类。 ​ 学者李学勤 曾在1992年发表《试论余杭南湖良渚文化黑陶罐的刻画符号》；1994年《浙江学刊》发表《余杭安溪玉璧与有关符号的分析》，1996年浙江人民出版社《文明的曙光——良渚文化》 他表示采用分析商周文字的方法和知识释读良渚文化刻符，是带有试验性质的，夸大这种试验难免陷于错误。 他还认为”迄今为止，解读良渚文化刻画符号的实验，看起来是有效的”。 学者来国龙认为 曾发表《文字起源研究中的”语言学眼光”和汉字起源的考古学研究》 研究汉字的核心问题不在于对文字如何界定，而是要跳出”文字来研究汉字起源”及相关社会机制的政治问题。 良渚文化属新时代晚期，早在商代甲骨文出现之前，相隔好几百年 学者曹锦严、方向明认为 目前刻符研究上有两类路线：一是古文字研究者偏重于追索原始文字与刻画符号之间的关系，重点在文字溯源；二是考古工作者侧重于刻符所表达的义，研究重点是探索”人”的所思所想。 学者严文明认为 曾在1993年《文物天地》杂志上发表过《半坡类型陶器刻画符号的分类和解释》 如果把同一符号体系的所有资料加以排比分类，从符号本身的结构及其相互联系来加以分析，再结合当时的社会经济状况和文化特点，对其可能的含义作些逻辑性推测也不失为一种比较可行的方法。 良渚时期的刻符算”字”么仅从符号本身来看，是可以将其纳入”字”这个范畴来看的。 在分析良渚时期的文字或者符号之前，应当先了解一下良渚时期的陶器，这不仅因为最早发现的良渚时期的文字或符号，就是出现在良渚时期的陶器上。 良渚博物院刻符黑陶罐上的文字，是学者们讨论和研究最多的文字。华东先生的《良渚文化研究》一书中曾对该陶罐刻符号有描述。 学者李学勤先生曾将第二排刻符解读为：“封石虎网”的意思。意思不知可否，但可以肯定的是这些类文字的符号，应该是良渚时期的原始文字，其理由是它已经在出土的不同器物上出现，它的反复出现说明当时它已经被良渚先民们反复使用。 这件良渚时期的陶器上有形似太阳的刻符，考古学者认为可以明确表现当时良渚时期人类的宗教信仰和对类似太阳神的崇拜。 文字应该是从图案纹饰进化而来，这恐怕是石器时代文字出现的实际情况。上图是良渚陶器上有一个神人图案，它和良渚玉器上的类似图案基本一致。玉器上的刻符号相比陶器上的更有意义。 良渚兽面纹玉镯。玉镯似红色，器身呈环带状，内外壁均平直。外壁弧状转角处分布四组扁方形凸台面分别阴刻兽面纹图案，重圈为眼，椭圆形眼脸由桥形鼻梁相连，下有凸起的台面表示嘴，上面阴刻卷云纹和短直线纹，兽面纹背景台面上密布阴刻的卷云纹和短直线纹。台面间凹槽阴刻7字，分1-2-2-2排列，共7字 从这些图形上可以看出，这完全应该是成熟的文字，而非刻符了。 这样的字出来在良渚出土的玉器上，有的玉器上仅仅一或二个字，有的玉器上字数不少，有的一件玉器上有多达30个以上的字，这真的可以理解为我国最早的”字”。可惜的是，这些文字基本上还不能真正读出，临摹的刻符还有很多部分如下： 文字是文明起源的标志，甲骨文是十分成熟的文字，它的发现对于商代文明的研究有着十分重要的作用，打破了一些西方学者只承商以后的中国历。良渚出土的大量陶器，玉器上的刻符画、刻符”字”，真正证明了良渚文明有他一套成熟的文字体系。]]></content>
      <categories>
        <category>良渚</category>
      </categories>
      <tags>
        <tag>良渚</tag>
        <tag>考古</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[qBittorrent添加Tracker提速]]></title>
    <url>%2Fposts%2Fc69d7f4a.html</url>
    <content type="text"><![CDATA[前言种子和磁力链接是现在使用最为广泛的资源下载形式了，但是资源找到了，如何顺畅地下载下来也是个问题。qBittorrent 是一款开源免费的种子和磁力链接下载工具，支持 Windows、Mac 和 Linux，且功能非常强大。由于国内大部分用户并没有公网 IP，直接使用可能会有个很现实的问题——下载没速度！本文介绍如何提高qBittorrent 下载速度。 添加Tracker以提速qBittorrent -&gt; 工具 -&gt; 选项 -&gt; BitTorrent, 拉到最下面-&gt;勾选 “自动添加以下 trackers 到新的 torrents:” 并添加Tracker。 Tracker1. Tracer2. Tracker3. 安装插件 点击检查更新，自动安装完成插件。]]></content>
      <categories>
        <category>qBittorrent</category>
      </categories>
      <tags>
        <tag>qBittorrent</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[了解良渚-良渚琮王]]></title>
    <url>%2Fposts%2F6e7c74c2.html</url>
    <content type="text"><![CDATA[2019年7月6日联合国教科文组织宣布良渚古城遗址为世界文化遗产，让国人欢欣鼓舞。在申遗期间，良渚古城遗址在提交的申遗报告中提出的两点是符合联合国教科文组织要求的。 第一点是见证：表明良渚古城遗址见证了中华文明五千年；第二点是典型：土筑文明，水利文明（三倍的西湖大小），代表当时东亚最高峰的湿地稻作农业文明，独一无二的玉文明。 良渚玉文明独一无二的玉文明其内涵就更加复杂，玉文明的本质到底是什么呢？玉是当时不可多得的资源，做玉需要消耗大量的生产劳动力。玉在良渚文明时期包含两个含义，第一个含义是反应拥有者的身份、等级和地位，第二个含义是体现当时原始宗教观念意识形态。当中以良渚古城为中心的用玉文明是最具代表性的，特别是在1986年发掘古城遗址西北角的反山王陵是用玉代表的典型。 当时良渚的王和权贵用玉是非常讲究的。不但有等级上的区分，还有性别上的差异。反山王陵总共清理了11座墓葬，其中有九座是同一时期的，它们随藏品的组合是不一样的，为什么会不一样？等级决定了它，性别决定了它。这其中12号墓葬是反山王陵的核心墓葬，光玉琮就出土了六件，其中有一件特别的大的琮，被称为琮王。 它体量大，重量13斤(6.5千克），玉料非常好，雕工最精美，所有反山墓葬中唯一雕刻了8个神像的大琮。他的出土位置也比较独特，出土在墓主的脑侧边上，推测当时很有可能是作为墓主的玉枕头的。 今天我们就来了解下琮到底是社么？琮又是干嘛用的？琮到底有什么样的含义？他又是如何做出来的? 琮到底是什么北宋的太平御览中有6条对琮的记载，从说文解字到吕氏春秋。北宋晚期到南宋早期出现了和琮相关大家比较熟悉的”琮饰品”，宋代人如何称呼它现在也不得而知。到了晚清时期，有一位著名金石学家吴大澂在前人的基础上把有上千年历史的琮给鉴别了出来，我们现在所认为的琮就是当时太平御览中所记载的琮，具有开拓性意义。但是只到1973年前考古学者们还认为琮是西周甚至汉代时期的东西。1973年，江苏考古学家在现在的苏州草鞋山遗址的发掘中首次从地层上证明了琮、璧、 串饰等玉制品是良渚文化的遗物。 良渚时期出土的高级琮中（尺寸接近10公分）琮王下面有个兽面，在其它高级琮当中兽面几乎就没有了。只剩下刻有小眼睛的神人，但雕工粗糙，眼角被省略，鼻子也未作细致的刻画，主要原因是良渚晚期玉料发生了很大的变化，好的玉料变得很少了。琮王表面为何能雕刻得这么精细，参观良渚博物院反山王陵遗址中得玉器时我们发现展出得玉器雕刻得都非常精细，原因就是玉石的料好，所谓料好就是玉得致密度非常高，雕刻得时候不会崩表面就能进行细致的刻画。 那谁是最早的琮呢？最早的琮考古学家确定是1987年瑶山墓地出土的琮，主要依据墓葬内的陶器进行判断(泥质陶豆)，处于良渚文化的早中期。 琮是干嘛用的考古学者们通过当时现场发掘时琮的摆放位置推断出测琮的用途，大致有：戴手上，戴头上，搁置豪华权杖，捧在手上作为器座，当玉枕头(琮王)。 —琮到底有什么样的含义？** 从琮的形状结构来看，它是柱状体，上大下小，中间有孔，非方正体，带有四个角，有和四个角相关的直槽，可多角度观看。以琮王为代表的良渚的琮其上下层次，中空圆柱，四角四槽的设计理念和萨满司的世界观非常的契合，萨满司属于泛神论，其世界观不仅流行于中美洲，还包括非洲的一些部落当中。以中美洲玛雅文明来举例，玛雅文明的世界观将宇宙分为上界、中界和下界三部分，上界称为天，下界称为地，中间有柱子，可用木睡树来替代，精灵都在上下界之间的飞动，而下界以下称为冥界。有东南西北四个方向，分别用不同的颜色表示，代表着不同的含义，上界的顶端有一只大鸟神。萨满司的世界观同琮的设计理念如此的契合。考古学者认为琮在良渚文明初建被创造出来时就代表了良渚文明的世界观和宇宙观。 琮的核心是什么？就是神像，神像又是则么回事呢？神像也是被创造出来的，就如同代表封建皇权象征的龙被创造出来一样，神像由神人和神兽两部分组成。神兽部分有龙和猪的元素和影子，兽面形似被摊平的龙首，爪子形似前蹲的猪蹄。眼睛呈圆型边上刻有斜三角，这样的图案经考古学者研究是被刻意做出来的，圆形的眼睛就是为了突出琮圈圆，如果把它理解成太阳也是顺理成章的事情。神人部分以帽子作为突破口，帽子的顶端有朝上的尖头，这样子的符号在很多少数名族中象征着天，考古学者认为神人就代表着上帝代表着天，是良渚时期人所崇拜的偶像，本质可能是太阳神。琮王上除了神像之外还刻有鸟，鸟最大的特点是鸟的身体和神兽的眼睛是一摸一样的，这说明两者之间是共通的，存在着密切的关系。如果说将神像理解为太阳神的话，那鸟可以直接理解成太阳鸟，表现作为神的辅佐，表现天空的环境，表现精灵或者生命的迹象。 琮是如何做出来曾经地矿学家做过测试，琮王的玉料为透山石软玉(莫氏硬度5.5-6)，是良渚时期品质最好的玉，其它玉料还有蛇纹石、荧石等。随着身份和等级的提高不同玉料的等级会发生变化，等级越高使用透闪石软玉的比列越高。料取来之后首先加工成柱状初坯，上下用圆规画圆用工具刻成浮边，中间攥孔，孔洞再打磨圆润。刻玉的工具就是遗址中大量出土的燧石(莫氏硬度7-8)，他山之石可以攻玉。 琮是不是一个人做出来的呢？从琮的八幅神像图来看，八幅神像中有两幅神像有6个手指头，其它六幅是5个手指头，有些琮上的神像兽面部位刻得也不标准，部分有凌乱和模糊的迹象，以此有学者推测琮不是一个人刻的。这个问题比较重要，之前有研究者认为反山12号大王的墓葬主人即是大王又是刻玉的人，但这件琮都不是他一个人刻的，何况其它的呢?同一个12号墓里面出土的琮的风格不一样，我们说刻的内容可以不一样，但是刻的风格不一样那就说明不是同一个人刻的，所以王死了以后墓葬里面埋的随葬品有刻纹的往往是有很多工匠来雕刻的。这一发现背后说明王不是工匠（他可以是设计师）,他身边有很多的高级工匠在帮他刻。20号墓和12号墓出土的琮雕刻风格又不一样，说明每个墓主人的身后都有一批工匠在为其雕刻玉器，这对良渚社会阶级的复杂化证据增添了非常重要的材料。 对琮玉的理解良渚的玉文明反应了当时萨满司的一个世界观，琮和神像是密不可分的。 良渚琮的复杂制作工艺基本上可以代表新石器时代晚期集大成的代表。良渚以琮玉为代表的玉礼器开启了古代中国 藏礼于器的最早传统， 直接连接了后续的青铜文明。这种通过一件器物来体现身份、等级和地位的传统其实在现代社会也时不时的有所表露。]]></content>
      <categories>
        <category>良渚</category>
      </categories>
      <tags>
        <tag>良渚</tag>
        <tag>考古</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[群发工资条-Word邮件合并功能]]></title>
    <url>%2Fposts%2Fe98d8324.html</url>
    <content type="text"><![CDATA[邮件合并Word中文字内容（为邮件发送内容） 群发工资条-Word邮件合并功能 Excel中的数据，实际数据中邮箱各不相同。 鼠标放置在尊敬的后面，点击开始邮件合并——邮件合并分布向导 选择电子邮件——下一步 开始文档 选择使用当前文档——下一步：选择收件人 选择预览找到Excel数据表格 确定使用表格——下一步：攥写电子邮件 选择其它项目，在Word文档对应位置插入 表格对应表头 选择下一步：预览电子邮件 未有问题选择发送邮件，（打开Outlook后）。 邮件发送成功]]></content>
      <categories>
        <category>Word</category>
      </categories>
      <tags>
        <tag>Word</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nest添加视频]]></title>
    <url>%2Fposts%2F16f30d64.html</url>
    <content type="text"><![CDATA[引言Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。 为了增加博客站点的趣味性，这次主要介绍 NexT 7.2.0 中添加视频。 添加B站视频视频页面点击分享—复制嵌入式代码，复制到文章页面内, 再在&lt;iframe&gt;``&lt;/iframe&gt;头部添加width``height视频尺寸参数代码设置即可。 1&lt;iframe width="100%" height="500" src="//player.bilibili.com/player.html?aid=63296007&amp;cid=109923855&amp;page=1" scrolling="no" border="0"frameborder="no" framespacing="0" allowfullscreen="true"&gt; &lt;/iframe&gt; 视频效果如下： #]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win10系统优化1:手动优化篇]]></title>
    <url>%2Fposts%2F50153a61.html</url>
    <content type="text"><![CDATA[引言最近对自己的本基本电脑重新安装了WIN10系统后，在操作系统上选择了参加Windows预览体验计划，直接跳到下一版本并安装了最新的更新。虽然系统已更新到最新，但还是需要对其进行一些必要的优化，才能使自己使用起来更加流畅。 本次介绍系统优化第一步手动优化。 手动优化—设置优化点击桌面左下角Win图标，点击设置按钮进入设置主界面。 系统设置 点击系统—点击通知和操作—关闭通知 设备设置 点击设备—自动播放—关闭自动播放 点击设备—USB—关闭USB设备提示通知，避免USB电涌问题 网络和Internet设置 点击网络和internet—状态—网络和共享中心—更改高级共享设置——启用共享文件夹/启用无密码共享 点击网络和internet—代理—关闭代理 个性化设置 点击个性化—点击主题—点击右侧桌面图标—勾选图标 点击个性化—点击开始—关闭偶尔在“开始”菜单中显示建议 点击个性化—点击开始—点击选择哪些文件显示在“开始”菜单栏上—除设置全部关闭 点击个性化—点击任务栏—选择设置任务栏已满时合并 点击个性化—点击任务栏—点击打开或关闭系统图标 应用设置 点击应用—点击离线地图—关闭地图更新 点击应用—点击可使用网站打开应用—关闭关联应用 游戏设置 点击游戏—点击游戏栏—关闭游戏视频录制功能 隐私设置 点击隐私—点击常规—关闭常规里的所有内容 点击隐私—诊断和反馈—关闭诊断数据 点击隐私—诊断和反馈—点击活动历史记录 更新和安全设置 点击更新和安全—点击传递优化—关闭传递优化 手动优化—控制面板优化点击控制面版—切换成大图标方便查看 Internet选项设置 点击Internet选项—点击常规—标签页—进行如下设置 点击Internet选项—点击常规—浏览历史记录设置—进行如下设置 点击Internet选项—点击隐私—关闭弹窗阻止程序 点击Internet选项—点击高级—勾选允许运行或按照软件，即使签名无效，避免安装插件时弹出提示框 点击Internet选项—点击高级—取消勾选默认IE浏览器检测 自带防火墙设置 点击Windows Defender防火墙—点击左侧启用或关闭Windows Defender防火墙—关闭防火墙 安全维护设置 点击安全和维护—点击左侧更改用户账户控制设置—关闭用户控制提示 程序和功能设置 点击程序和功能—点击左侧启用或关闭Windows功能—开启SMB1.0服务 电源选项设置 点击电源选项—点击左侧选择电源按钮的功能—点击当前不可用设置—勾选休眠 文件夹选项设置 点击文件夹资源管理器选项—点击查看—勾选以下内容 系统高级设置 点击系统—高级系统设置—高级—性能设置—视觉效果—按个人设置自定义设置 点击系统—高级系统设置—高级—性能设置—高级—虚拟内存设置如下 疑难解答设置 点击疑难解答—点击左侧更改设置—关闭计算机维护，疑难解答，故障排除 手动优化—服务项优化右键桌面我的电脑—点击管理—点击服务和应用程序—点击服务 禁用程序兼容性助手找到Program Compatibility Assistant Service 并禁用，避免弹出程序是否正确安装的提示窗口 禁用超级预读找到SysMain 并禁用，避免弹出程序是否正确安装的提示窗口 手动优化—策略组优化WIN+R 打开运行对话框，输入gpedit.msc，直接运行组策略 启用“关闭加载性能通知”，防止打开IE浏览器状态栏提示关闭加载项来提高浏览器运行速度的提示。启用“自动激活新安装的加载项”，比如迅雷下载加载项等等可自动激活。禁用“打开建议网站”，无用的收藏夹网址建议禁止。 （计算机配置里的设置同用户配置里的设置一样，此处省略） 启用“阻止IE首次运行向导设置” （计算机配置里的设置同用户配置里的设置一样，此处省略） 启用“阻止订阅网页源和网页快讯” （计算机配置里的设置同用户配置里的设置一样，此处省略） 禁用“快速关机优化” 启用“允许管理员忽略设备安装限制策略” 启用“设备驱动程序的代码签名” 手动优化—其它设置设置快速访问栏 关闭磁盘索引设置右键点击C盘—选择属性—常规—设置如下 隐藏小娜，任务视图，人脉回到桌面，取消前面对应的勾选即可。 整理磁贴调整一下开始屏幕，删除自己认为无用的箭头磁贴，按照自己的喜好增加删除调整磁贴既可。]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>系统</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win10系统优化2:软件辅助篇]]></title>
    <url>%2Fposts%2Fe177ee84.html</url>
    <content type="text"><![CDATA[引言最近对自己的本基本电脑重新安装了WIN10系统后，在操作系统上选择了参加Windows预览体验计划，直接跳到下一版本并安装了最新的更新。虽然系统已更新到最新，但还是需要对其进行一些必要的优化，才能使自己使用起来更加流畅。 本次介绍系统优化第二步软件辅助优化。 软媒美化大师优化下载软媒美化大师单文件版3.7.0.0 系统外观—桌面设置 软媒设置大师优化下载软媒设置大师单文件版3.7.2.0 系统设置—资源管理器 系统设置—多媒体优化设置 系统设置—错误报告 系统设置—开关机设置 右键菜单—新建菜单 删除无用右键菜单 右键菜单—发送到菜单 删除无用右键菜单 右键菜单—添加右键菜单项目 添加上获得管理员所有权这个功能 DISM++优化下载 DISM++ 启动项管理—关闭开机磁盘检测。关闭开机启动OneDrive 系统优化设置如下 DISM++清理 软媒清理大师清理下载软媒清理大师 一键清理 深度清理 系统瘦身 添加摄像头补丁下载摄像头补丁]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>系统</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Typora Markdown语法详解]]></title>
    <url>%2Fposts%2F5ff886d0.html</url>
    <content type="text"><![CDATA[[TOC] 行内代码12`这是行内代码``this is inline code` 这是行内代码 this is inline code 新建标题12345# 一级标题 #快捷按键 Ctrl+1## 二级标题 #快捷按键 Ctrl+2### 三级标题 #快捷按键 Ctrl+3#### 四级标题 #快捷按键 Ctrl+4##### 五级标题 #快捷按键 Ctrl+5 一级标题二级标题三级标题四级标题五级标题 改变字体12345*字体倾斜* #快捷按键 Ctrl+I**字体加粗** #快捷按键 Ctrl+B***字体加粗*** #快捷按键 Ctrl+B + Ctrl+I&lt;u&gt;字体加下划线&lt;/u&gt; #快捷按键 Ctrl+U~~删除字体~~ #快捷按键 Alt+Shift+5 字体倾斜 字体加粗 字体倾斜加粗 字体加下划线 删除字体 插入图片123# 图片链接![图片描述](图片路径 "title")![图片描述](图片路径) 插入链接12345678910# 自动链接&lt;https://www.mallai.top&gt;# 参考式链接[标记]:链接地址 "标题"# 只显示文本的超链接[文本](链接地址)# 链接访问: command + 单击 https://http://zhanmuji.lofter.com/ lofter 插入分割綫12***--- 插入代码块1`文本` # 单行 文本 插入引用123456789101112131415161718#连续引用&gt;引用文本1&gt;引用文本2&gt;引用文本3#带空格引用&gt;引用文本1&gt;&gt;引用文本3#嵌套引用*&gt;&gt;&gt;引用文本1&gt;&gt;引用文本2&gt;引用文本3#引用其他元素*&gt;#####引用五级标题&gt;```python```引用代码块 引用文本1 引用文本2 引用文本3 引用文本1 引用文本3 插入有序列表1使用数字和一个英文句点表示有序列表。 注意：英文句点后面一定要有一个空格，起到缩进的作用。 有序列表 有序列表 插入无序列表1使用 *，+，- 表示无序列表。 注意：符号后面一定要有一个空格，起到缩进的作用。 *号生列表 +号產生列表 -号產生列表 插入表格12345678910# 基本格式, -|-|-|默认居左对齐 #快捷方式 Ctrl+T学号|姓名|分数-|-|-| 小明|男|75小红|女|79# 指定表格单元格对齐方式冒号在左边表示左对齐，右边表示有对齐，两边都有表示居中。:-|:-:|-: 学号 姓名 分数 小明 男 75 小红 女 79 插入表情1:表情英文 #例如 :smile 插入注脚1[^注脚名字]:注脚文本 创建Latex数学公式1行间公式: $$公式$$ #快捷方式 Crtl+T 数学符号 1234小写希腊字母: \alpha \theta \pi \beta \phi \lambda \omega \xi \eta \epsilon \delta空格和换行:\quad \\ 12关系运算符:\times = \neq \ne \leq \le \geq \ge &gt; \sim \simeq \subset \subseteq \in \notin \propto 12其他符号:... \dots; ... \cdots \vdots \ddots \forall \exists 指数和下标 12指数: a^&#123;指数项&#125;下标: a_&#123;下标项&#125; 平方根运算 12平方根: \sqrt&#123;开根号项&#125;n次方根: \sqrt[n]&#123;开根号项&#125; 分数运算符 12\frac&#123;分子&#125;&#123;分母&#125;\frac&#123;1&#125;&#123;x&#125; 向量运算 123单个向量: \vec a从A到B向量: \overrightarrow&#123;AB&#125;反向从A到B: \overleftarrow&#123;AB&#125; 水平大括号 1\underbrace&#123;表达式&#125;_&#123;底部数据&#125; --&gt; \underbrace&#123;a + b + \cdots + z&#125;_&#123;26&#125; 水平线 12上水平线: \overline&#123;m+n&#125;下水平线: \underline&#123;m+n&#125; 创建Flow流程图1234创建Flow流程图 ```flow + 回车语法：流程图语法分为两个部分: 前面部分用来定义流程图元素，后面部分用来连接流程图元素，指定流程图的执行走向tag=&gt;type: content:&gt;url 连接元素 连接流程图直接用-&gt;来连接两个元素，几点说明如下： 使用 -&gt; 来连接两个元素 对于condition类型，有yes和no两个分支，如示例中的cond(yes)和cond(no) 每个元素可以制定分支走向，默认向下，也可以用right指向右边，如示例中sub1(right) 1234567891011121314151617st=&gt;start: 开始e=&gt;end: 结束c1=&gt;condition: 条件A? #操作、执行说明c2=&gt;condition: 条件B?c3=&gt;condition: 条件C?io=&gt;inputoutput: 输入输出De1=&gt;operation: mallAI:&gt;https://www.mallai.tope2=&gt;subroutine: 子文件st-&gt;c1(no)-&gt;ec1(yes,right)-&gt;c2c2(no)-&gt;ec2(yes,right)-&gt;c3c3(no)-&gt;ec3(yes,right)-&gt;ioio-&gt;e1e1-&gt;e2e2(left)-&gt;e tag 流程图元素, 在第二段连接元素时会用到。名称可以任意,一般为流程的英文缩写和数字的组合。 type 确定标签类型, =&gt;后面表示类型。由于标签的名称可以任意指定，所以要依赖type来确定标签的类型, 标签的类型有6种: start end operation subroutine condition inputoutput content 流程图文本框中描述内容, :后面表示内容, 中英文均可。特别注意，冒号与文本之间一定要有个空格 标签 描述 url 一个连接，与框框中的文本相绑定，:&gt;后面就是对应的 url 链接，点击文本时可以通过链接跳转到 url 指定页面 创建mermaid流程图1创建: ```mermaid + 回车 声明流程图，可以声明上下结构, 下上结构，左右结构，右左结构 TB - top bottom BT - bottom top RL - right left LR - left right TD - same as TB 1234567891011121314#连接形式A --&gt; B # 箭头A --- B # 无箭头实线A -- text -- B # AB连线中添加注释A --&gt; |text|B # AB连线中添加注释A-.-&gt;B # 虚线箭头A -. text .- B # 添加注释的虚线箭头A ==&gt; B # 加粗箭头A == text ==&gt; B # 加注释加粗的箭头#节点形式graph LR id # 默认为正方形，id为元素内文本 id[text] # id表示流程图元素唯一标识用于连接，text为元素内文本 节点和形状 描述 id 默认为正方形，id为元素内文本 id[text] 正方形 id(text) 圆角正方形 id((text)) 圆形 id&gt;text] 半方框 id{text} 条件判断框 12345678910111213graph LR A[A] --&gt; B(Bib) B --&gt; E&#123;E&#125; E -- hello ---F&#123;F&#125; F --&gt;|yes|M F --&gt;|no|N A --&gt; C((circle)) C --&gt; D&gt;D] D --&gt; |NICE|H(H) H ==&gt; I d --&gt; I f --&gt; d D --&gt; f 创建mermaid时序图1创建: ```mermaid +回车 消息链接样式 1[Actor][Arrow][Actor]:Message text 类型 描述 -&gt; 无箭头实线: Solid line without arrow –&gt; 无箭头虚线: Dotted line without arrow -&gt;&gt; 有箭头实线: Solid line with arrowhead –&gt;&gt; 有箭头虚线: Dotted line with arrowhead -x 实线末端带x: Solid line with a cross at the end (async) –x 虚线末端带x: Dotted line with a cross at the end (async) 123456789sequenceDiagram participant John participant Alice John -&gt;&gt; Alice: hello Alice Alice -&gt;&gt; John: hello John Note right of John: Right Text of John Note left of Alice: Left Text of Alice Note over Alice: Over Text of Alice Note over John: Over Text of John 创建mermaid甘特图1创建: ```mermaid +回车 声明甘特图 12345678910111213gantt # 标题 title 标题 # 时间格式 dateFormat YYYY-MM-DD # 任务模块 section 任务标题1 # 具体任务和时间 task1 :a1, 2014-01-01, 30d task2 :after a1 , 20d section 任务标题2 task1 :2014-01-12 , 12d task2 : 24d 123456789101112131415161718192021222324252627gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown字体颜色编辑]]></title>
    <url>%2Fposts%2Faff15728.html</url>
    <content type="text"><![CDATA[Markdown字体颜色编辑 设置字体 1&lt;font color=red size=6 face=“黑体”&gt;字体颜色&lt;/font&gt; 设置背景颜色 123&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#7FFFD4&gt; 背景颜色 &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 固定图片显示大小 123&lt;img src="https://img-blog.csdn.net/20151129213701642" width=256 height=256 /&gt;&lt;img src="https://img-blog.csdn.net/20151129213701642" width="50%" height="50%" /&gt; 为字体添加颜色 我是黑体字 1&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt; 我是微软雅黑 1&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt; 我是华文彩云 1&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt; color=#0099ff size=72 face=”黑体” 1&lt;font color=#0099ff size=72 face="黑体"&gt;color=#0099ff size=72 face="黑体"&lt;/font&gt; color=#00ffff 1&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt; color=gray 1&lt;font color=gray size=72&gt;color=gray&lt;/font&gt; 跨行表格、表格背景色 我占了三行 方法说明颜色名称颜色 此处实现方法利用 CSDN-markdown 内嵌 html 语言的优势 Hotpink rgb(240, 248, 255) 借助 table, tr, td 等表格标签的 bgcolor 属性实现背景色 AntiqueWhite rgb(255, 192, 203) 颜色列表参考 颜色名十六进制颜色值颜色AliceBlue#F0F8FFrgb(240, 248, 255)AntiqueWhite#FAEBD7rgb(250, 235, 215)Aqua#00FFFFrgb(0, 255, 255)Aquamarine#7FFFD4rgb(127, 255, 212)Azure#F0FFFFrgb(240, 255, 255)Beige#F5F5DCrgb(245, 245, 220)Bisque#FFE4C4rgb(255, 228, 196)Black#000000rgb(0, 0, 0)BlanchedAlmond#FFEBCDrgb(255, 235, 205)Blue#0000FFrgb(0, 0, 255)BlueViolet#8A2BE2rgb(138, 43, 226)Brown#A52A2Argb(165, 42, 42)BurlyWood#DEB887rgb(222, 184, 135)CadetBlue#5F9EA0rgb(95, 158, 160)Chartreuse#7FFF00rgb(127, 255, 0)Chocolate#D2691Ergb(210, 105, 30)Coral#FF7F50rgb(255, 127, 80)CornflowerBlue#6495EDrgb(100, 149, 237)Cornsilk#FFF8DCrgb(255, 248, 220)Crimson#DC143Crgb(220, 20, 60)Cyan#00FFFFrgb(0, 255, 255)DarkBlue#00008Brgb(0, 0, 139)DarkCyan#008B8Brgb(0, 139, 139)DarkGoldenRod#B8860Brgb(184, 134, 11)DarkGray#A9A9A9rgb(169, 169, 169)DarkGreen#006400rgb(0, 100, 0)DarkKhaki#BDB76Brgb(189, 183, 107)DarkMagenta#8B008Brgb(139, 0, 139)DarkOliveGreen#556B2Frgb(85, 107, 47)Darkorange#FF8C00rgb(255, 140, 0)DarkOrchid#9932CCrgb(153, 50, 204)DarkRed#8B0000rgb(139, 0, 0)DarkSalmon#E9967Argb(233, 150, 122)DarkSeaGreen#8FBC8Frgb(143, 188, 143)DarkSlateBlue#483D8Brgb(72, 61, 139)DarkSlateGray#2F4F4Frgb(47, 79, 79)DarkTurquoise#00CED1rgb(0, 206, 209)DarkViolet#9400D3rgb(148, 0, 211)DeepPink#FF1493rgb(255, 20, 147)DeepSkyBlue#00BFFFrgb(0, 191, 255)DimGray#696969rgb(105, 105, 105)DodgerBlue#1E90FFrgb(30, 144, 255)Feldspar#D19275rgb(209, 146, 117)FireBrick#B22222rgb(178, 34, 34)FloralWhite#FFFAF0rgb(255, 250, 240)ForestGreen#228B22rgb(34, 139, 34)Fuchsia#FF00FFrgb(255, 0, 255)Gainsboro#DCDCDCrgb(220, 220, 220)GhostWhite#F8F8FFrgb(248, 248, 255)Gold#FFD700rgb(255, 215, 0)GoldenRod#DAA520rgb(218, 165, 32)Gray#808080rgb(128, 128, 128)Green#008000rgb(0, 128, 0)GreenYellow#ADFF2Frgb(173, 255, 47)HoneyDew#F0FFF0rgb(240, 255, 240)HotPink#FF69B4rgb(255, 105, 180)IndianRed#CD5C5Crgb(205, 92, 92)Indigo#4B0082rgb(75, 0, 130)Ivory#FFFFF0rgb(255, 255, 240)Khaki#F0E68Crgb(240, 230, 140)Lavender#E6E6FArgb(230, 230, 250)LavenderBlush#FFF0F5rgb(255, 240, 245)LawnGreen#7CFC00rgb(124, 252, 0)LemonChiffon#FFFACDrgb(255, 250, 205)LightBlue#ADD8E6rgb(173, 216, 230)LightCoral#F08080rgb(240, 128, 128)LightCyan#E0FFFFrgb(224, 255, 255)LightGoldenRodYellow#FAFAD2rgb(250, 250, 210)LightGrey#D3D3D3rgb(211, 211, 211)LightGreen#90EE90rgb(144, 238, 144)LightPink#FFB6C1rgb(255, 182, 193)LightSalmon#FFA07Argb(255, 160, 122)LightSeaGreen#20B2AArgb(32, 178, 170)LightSkyBlue#87CEFArgb(135, 206, 250)LightSlateBlue#8470FFrgb(132, 112, 255)LightSlateGray#778899rgb(119, 136, 153)LightSteelBlue#B0C4DErgb(176, 196, 222)LightYellow#FFFFE0rgb(255, 255, 224)Lime#00FF00rgb(0, 255, 0)LimeGreen#32CD32rgb(50, 205, 50)Linen#FAF0E6rgb(250, 240, 230)Magenta#FF00FFrgb(255, 0, 255)Maroon#800000rgb(128, 0, 0)MediumAquaMarine#66CDAArgb(102, 205, 170)MediumBlue#0000CDrgb(0, 0, 205)MediumOrchid#BA55D3rgb(186, 85, 211)MediumPurple#9370D8rgb(147, 112, 216)MediumSeaGreen#3CB371rgb(60, 179, 113)MediumSlateBlue#7B68EErgb(123, 104, 238)MediumSpringGreen#00FA9Argb(0, 250, 154)MediumTurquoise#48D1CCrgb(72, 209, 204)MediumVioletRed#C71585rgb(199, 21, 133)MidnightBlue#191970rgb(25, 25, 112)MintCream#F5FFFArgb(245, 255, 250)MistyRose#FFE4E1rgb(255, 228, 225)Moccasin#FFE4B5rgb(255, 228, 181)NavajoWhite#FFDEADrgb(255, 222, 173)Navy#000080rgb(0, 0, 128)OldLace#FDF5E6rgb(253, 245, 230)Olive#808000rgb(128, 128, 0)OliveDrab#6B8E23rgb(107, 142, 35)Orange#FFA500rgb(255, 165, 0)OrangeRed#FF4500rgb(255, 69, 0)Orchid#DA70D6rgb(218, 112, 214)PaleGoldenRod#EEE8AArgb(238, 232, 170)PaleGreen#98FB98rgb(152, 251, 152)PaleTurquoise#AFEEEErgb(175, 238, 238)PaleVioletRed#D87093rgb(216, 112, 147)PapayaWhip#FFEFD5rgb(255, 239, 213)PeachPuff#FFDAB9rgb(255, 218, 185)Peru#CD853Frgb(205, 133, 63)Pink#FFC0CBrgb(255, 192, 203)Plum#DDA0DDrgb(221, 160, 221)PowderBlue#B0E0E6rgb(176, 224, 230)Purple#800080rgb(128, 0, 128)Red#FF0000rgb(255, 0, 0)RosyBrown#BC8F8Frgb(188, 143, 143)RoyalBlue#4169E1rgb(65, 105, 225)SaddleBrown#8B4513rgb(139, 69, 19)Salmon#FA8072rgb(250, 128, 114)SandyBrown#F4A460rgb(244, 164, 96)SeaGreen#2E8B57rgb(46, 139, 87)SeaShell#FFF5EErgb(255, 245, 238)Sienna#A0522Drgb(160, 82, 45)Silver#C0C0C0rgb(192, 192, 192)SkyBlue#87CEEBrgb(135, 206, 235)SlateBlue#6A5ACDrgb(106, 90, 205)SlateGray#708090rgb(112, 128, 144)Snow#FFFAFArgb(255, 250, 250)SpringGreen#00FF7Frgb(0, 255, 127)SteelBlue#4682B4rgb(70, 130, 180)Tan#D2B48Crgb(210, 180, 140)Teal#008080rgb(0, 128, 128)Thistle#D8BFD8rgb(216, 191, 216)Tomato#FF6347rgb(255, 99, 71)Turquoise#40E0D0rgb(64, 224, 208)Violet#EE82EErgb(238, 130, 238)VioletRed#D02090rgb(208, 32, 144)Wheat#F5DEB3rgb(245, 222, 179)White#FFFFFFrgb(255, 255, 255)WhiteSmoke#F5F5F5rgb(245, 245, 245)Yellow#FFFF00rgb(255, 255, 0)YellowGreen#9ACD32rgb(154, 205, 50)]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>颜色</tag>
        <tag>Markdown</tag>
        <tag>修改</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nest点击头像回到首页设置]]></title>
    <url>%2Fposts%2Fa12a1a77.html</url>
    <content type="text"><![CDATA[引言Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。 这次主要介绍 NexT 7.2.0 点击头像回到首页的设置。 点击头像回到首页修改/themes/next/layout/_macro/sidebar.swig，找到如下代码： 123&lt;img class="site-author-image" itemprop="image" src="&#123;&#123; url_for( theme.avatar | default(theme.images + '/avatar.gif') ) &#125;&#125;" alt="&#123;&#123; theme.author &#125;&#125;" /&gt; 在其前后加上&lt;a href=&quot;/&quot;&gt;&lt;/a&gt;即可，如下： 12345&lt;a href="/"&gt; &lt;img class="site-author-image" itemprop="image" src="&#123;&#123; url_for( theme.avatar | default(theme.images + '/avatar.gif') ) &#125;&#125;" alt="&#123;&#123; theme.author &#125;&#125;" /&gt;&lt;/a&gt; hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 即可本地预览效果。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nest文章置顶设置]]></title>
    <url>%2Fposts%2Fa12a1a77.html</url>
    <content type="text"><![CDATA[引言Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。 这次主要介绍 NexT 7.2.0 文章置顶的设置。 文章置顶关于主题文章置顶的功能，目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。 12$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的 Front-matter 中加上 top: true 即可。比如下面这篇文章： 123456---title: hexo+GitHub博客搭建实战date: 2017-09-08 12:00:25categories: 博客搭建系列top: true--- 置顶功能已经可以实现，还需添加置顶标志 打开：/blog/themes/next/layout/_macro 目录下的 post.swig 文件，定位到 &lt;div class=&quot;post-meta&quot;&gt; 标签下,插入如下代码： 12345&#123;% if post.top %&#125; &lt;i class="fa fa-thumb-tack"&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125; hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 即可本地预览效果。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Picgo GitHub自建图床]]></title>
    <url>%2Fposts%2F77f24ba4.html</url>
    <content type="text"><![CDATA[自建原因对于写博客的人来说，图裂是很让人然烦恼的一件事情。后来想到了自建图床，将所有图片上传云，并通过外联https连接用于博客或Markdownd的编写。正好自己用Hexo+Github搭建了博客，就想着用Github来做图片的云存储空间，电脑端使用Picgo传图软件。既使用Picgo+Github的方式自建图床。 GIthub仓库创建及获取token1.注册Github,新建仓库(此处略)。 2.新建仓库后，点击sitting—Developer settings—Personal access tokens—Generate new token—选择相关设置—按Generate token提交生成token码。 Picgo下载安装及设置1.开打Picgo项目站点，下拉页面选择自己对应系统的软件版本。我这边选择下载Windows版本。 2.打开Picgo，选择Github图床进行如下设置： 设置完成后，就可开始图片上传，动图gif（需要先下载到本地在上传）同时粘贴板也会自动粘贴上。 上传成功后，软件既根据选择的外联格式生成对应连接,直接黏贴到想要的地方。我这边选择了Markdown外联格式。]]></content>
      <categories>
        <category>图床</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Picgo</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Typora中文字体美化]]></title>
    <url>%2Fposts%2Fbb6a1532.html</url>
    <content type="text"><![CDATA[好字体带来好心情 “Typora”这款Markdown编译器，是自己目前使用率最高的在线编译软件，其所见即所得、离线编辑让我觉得十分得心应手。但软件默认所带的中文字体显示为“宋体”，对于有一定审美度的用户来说可能不太美观，考虑到长期使用的缘故，漂亮字体能带给编译者带来好的心情，一个好的编译开始。 那如何更换字体呢？思路如下： 下载使用一款主题在官网选择一款Typora主题，例如主题Catfish,进入主题介绍查看对应主题字体说明，并下载主题。 下载完成主题压缩包后将压缩包里边的几个文件解压到Typora的自定义主题目录，文件包括： catfish.css catfish.styl catfish（文件夹） 重启Typora，在主题选项里将原主题切换为catfish。 下载思源黑体、思源宋体好在官方主题catfish说明中刚好给了两个链接： source-han-sans（思源黑体） source-han-serif（思源宋体） 点击链接进入Github网站，将文件列表上方，将Branch选项由’master’切换为’release’， 对于source-han-sans项目，点击进入OTF文件夹，然后点击进入SourceHanSansSC.zip，再点击download下载这个压缩包，解压后在SourceHanSansSC文件夹下，得到7种不同粗细思源黑体的*.otf格式的字体文件： 对于source-han-serif项目，操作方法类似，进入OTF文件夹后，分别下载SourceHanSerifSC_SB-H.zip与SourceHanSerifSC_EL-M.zip两个压缩包，解压得到7种不同粗细的思源宋体的*.otf格式文件。 对于每个*.otf文件，右键-&gt;安装，或者双击文件打开后，亦有安装按钮。 至此，安装了思源字体，重启Typora，但如此设置在catfish主题下字体是不会呈现出来的。 修改catfish.css字体装好了，catfish主题也是从官网上下载的，打开catfish.css文件，其body部分显示如下： 12345body &#123; background: #fff; font-family: Source Han Sans SC, sans-serif; color: #555;&#125; “font-family”第一默认的字体是”Source Han Sans”，这个肯定是和思源黑体有关的，但貌似不是Windows字体文件夹Font下面的字体名称。 在css文件中搜索下”Source Han Sans”，文档显示如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344@font-face &#123; font-family: Source Han Sans SC; font-weight: normal; src: local('Source Han Sans SC Regular'), url("catfish/SourceHanSansSC-Regular.otf");&#125;@font-face &#123; font-family: Source Han Sans; font-weight: bold; src: local('Source Han Sans SC Bold'), url("catfish/SourceHanSansSC-Bold.otf");&#125;@font-face &#123; font-family: Source Han Serif; font-weight: normal; src: local('Source Han Serif SC Regular'), url("catfish/SourceHanSerifSC-Regular.otf");&#125;@font-face &#123; font-family: Source Han Serif; font-weight: bold; src: local('Source Han Serif SC Bold'), url("catfish/SourceHanSerifSC-Bold.otf");&#125;@font-face &#123; font-family: mononoki; font-style: normal; font-weight: normal; src: local('mononoki Regular'), url("catfish/mononoki-Regular.woff");&#125;@font-face &#123; font-family: mononoki; font-style: italic; font-weight: normal; src: local('mononoki Italic'), url("catfish/mononoki-Italic.woff");&#125;@font-face &#123; font-family: mononoki; font-style: normal; font-weight: bold; src: local('mononoki Bold'), url("catfish/mononoki-Bold.woff");&#125;@font-face &#123; font-family: mononoki; font-style: italic; font-weight: bold; src: local('mononoki Bold Italic'), url("catfish/mononoki-BoldItalic.woff");&#125; 对于第一段设置大胆猜测一下，”font-family: Source Han Sans”以及”font-weight: normal”的字体所在的位置url为”catfish/SourceHanSans-Regular.ttc”。刚好，在自定义主题路径themes中的catfish，找到了”SourceHanSans-Regular.ttc”与”SourceHanSans-Bold.ttc”，但是Windows貌似不识别这种格式。 于是，我把上面下载的思源字体copy到themes/catfish的文件夹下面，然后修改catfish.css文档，修改了’Source Han Sans’与’Source Han Serif’指向的四处url（以下url中是博主字体的安装的路径）： 1234567891011121314151617181920212223242526272829303132333435363738394041424344@font-face &#123; font-family: Source Han Sans SC; font-weight: normal; src: local('Source Han Sans SC Regular'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/SourceHanSansSC-Regular.otf");&#125;@font-face &#123; font-family: Source Han Sans; font-weight: bold; src: local('Source Han Sans SC Bold'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/SourceHanSansSC-Bold.otf");&#125;@font-face &#123; font-family: Source Han Serif; font-weight: normal; src: local('Source Han Serif SC Regular'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/SourceHanSerifSC-Regular.otf");&#125;@font-face &#123; font-family: Source Han Serif; font-weight: bold; src: local('Source Han Serif SC Bold'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/SourceHanSerifSC-Bold.otf");&#125;@font-face &#123; font-family: mononoki; font-style: normal; font-weight: normal; src: local('mononoki Regular'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/mononoki-Regular.woff");&#125;@font-face &#123; font-family: mononoki; font-style: italic; font-weight: normal; src: local('mononoki Italic'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/mononoki-Italic.woff");&#125;@font-face &#123; font-family: mononoki; font-style: normal; font-weight: bold; src: local('mononoki Bold'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/mononoki-Bold.woff");&#125;@font-face &#123; font-family: mononoki; font-style: italic; font-weight: bold; src: local('mononoki Bold Italic'), url("Users\Mayjor_Zmj\AppData\Roaming\Typora\themes\catfish/mononoki-BoldItalic.woff");&#125; 保存并重启Typora，主题选择catfish，字体修改成功。]]></content>
      <categories>
        <category>Typora</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>Markdown</tag>
        <tag>修改</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo aplayer播放器的使用]]></title>
    <url>%2Fposts%2Fc7c556d8.html</url>
    <content type="text"><![CDATA[APlayer HTML5 音乐播放器Hexo中安装hexo-tag-aplayer 是APlayer播放器在Hexo 标签插件（现已支持 MetingJS）在站点根目录下安装 1npm install --save hexo-tag-aplayer Aplayer使用方式简单介绍12-- 简单格式 --&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125; 标签参数 title : 曲目标题 author: 曲目作者 url: 音乐文件 URL 地址 picture_url: (可选) 音乐对应的图片地址 narrow: （可选）播放器袖珍风格 autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能 width:xxx: (可选) 播放器宽度 (默认: 100%) lrc:xxx: （可选）歌词文件 URL 地址 当开启 Hexo 的 文章资源文件夹 功能时，可以将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用： 1&#123;% aplayer "Caffeine" "Jeff Williams" "caffeine.mp3" "picture.jpg" "lrc:caffeine.txt" %&#125; 歌词标签除了使用标签 lrc 选项来设定歌词，你也可以直接使用 aplayerlrc 标签来直接插入歌词文本在博客中： 123&#123;% aplayerlrc "title" "author" "url" "autoplay" %&#125;[00:00.00]lrc here&#123;% endaplayerlrc %&#125; 播放列表123456789101112131415161718192021222324252627&#123;% aplayerlist %&#125;&#123; "narrow": false, // （可选）播放器袖珍风格 "autoplay": true, // （可选) 自动播放，移动端浏览器暂时不支持此功能 "mode": "random", // （可选）曲目循环类型，有 'random'（随机播放）, 'single' (单曲播放), 'circulation' (循环播放), 'order' (列表播放)， 默认：'circulation' "showlrc": 3, // （可选）歌词显示配置项，可选项有：1,2,3 "mutex": true, // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停 "theme": "#e6d0b2", // （可选）播放器风格色彩设置，默认：#b7daff "preload": "metadata", // （可选）音乐文件预载入模式，可选项： 'none' 'metadata' 'auto', 默认: 'auto' "listmaxheight": "513px", // (可选) 该播放列表的最大长度 "music": [ &#123; "title": "CoCo", "author": "Jeff Williams", "url": "caffeine.mp3", "pic": "caffeine.jpeg", "lrc": "caffeine.txt" &#125;, &#123; "title": "アイロニ", "author": "鹿乃", "url": "irony.mp3", "pic": "irony.jpg" &#125; ]&#125;&#123;% endaplayerlist %&#125; MetingJShi使用方式简单介绍MetingJS 是基于Meting API 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。 如果想在本插件中使用 MetingJS，请在 Hexo 站点配置文件 _config.yml 中设置： 12aplayer: meting: true 接着就可以在文章中使用 MetingJS 播放器了： 12345-- 简单示例 (id, server, type) --&#123;% meting "60198" "netease" "playlist" %&#125;&lt;!-- 进阶示例 --&gt;&#123;% meting "60198" "netease" "playlist" "autoplay" "mutex:false" "listmaxheight:340px" "preload:none" "theme:#ad7a86"%&#125; 有关参数选项注释列表如下: 选项 默认值 描述 id 必须值 歌曲 id / 播放列表 id / 相册 id / 搜索关键字 server 必须值 音乐平台: netease, tencent, kugou, xiami, baidu type 必须值 song, playlist, album, search, artist fixed false 开启固定模式 mini false 开启迷你模式 loop all 列表循环模式：all, one,none order list 列表播放模式： list, random volume 0.7 播放器音量 lrctype 0 歌词格式类型 listfolded false 指定音乐播放列表是否折叠 storagename metingjs LocalStorage 中存储播放器设定的键名 autoplay true 自动播放，移动端浏览器暂时不支持此功能 mutex true 该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停 listmaxheight 340px 播放列表的最大长度 preload auto 音乐文件预载入模式，可选项： none, metadata, auto theme #ad7a86 播放器风格色彩设置]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>nest</tag>
        <tag>aplayer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo GitHub搭建博客]]></title>
    <url>%2Fposts%2Fccbc0313.html</url>
    <content type="text"><![CDATA[Hexo GitHub搭建博客的好处全是静态文件，访问速度快； 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台； 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于GitHub的； 数据绝对安全，基于GitHub的版本管理，想恢复到哪个历史版本都行； 博客内容可以轻松打包、转移、发布到其它平台； 准备工作有一个GitHub账号，没有的话去注册一个； 安装 node.js环境 安装 git环境 本次安装使用操作系统为：windows 10 搭建Hexo博客创建GitHub仓库注册的邮箱一定要验证，否则不会成功； 仓库名字必须是：username.github.io，其中username是你的用户名； 绑定域名我申请的是 iamzmj.top 域名，pin 域名地址 得到 ip 地址为 ：185.199.108.153 123C:\Users\x0468&gt;ping zmj2020.github.io正在 Ping zmj2020.github.io [185.199.108.153] 具有 32 字节的数据:来自 185.199.108.153 的回复: 字节=32 时间=143ms TTL=49 绑定域名分2种情况：带www和不带www的。 域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下你的用户名.github.io的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向你的用户名.github.io，这样可以保证无论是否添加www都可以访问。最后在对应仓库内新建一个文档CNAME（无后缀），添加个人域名 保存即可。 本地部署Hexo在电脑的某个地方新建一个名为xxxxx的文件夹（名字可以随便取）,在该文件夹下打开Git Brush开始安装： 123456npm install -g hexo-cli #安装hexo的基础框架hexo init #初始化hexo框架 这个可能会比较慢npm install #安装所需要的组件hexo g #编译生成静态页面hexo s #启动本地服务浏览器上输入 http://localhost:4000/ #查看生成静态页面 本地部署完成 Hexo部署到Github主机中选择 Git Bash打开,输入 12345git config --global user.name "yourname" #注册用户名git config --global user.email "youremail" #注册邮箱可使用下面代码检查输入是否正确git config user.namegit config user.email 123创建SSHssh-keygen -t rsa -C "youremail@qq.com"一路回车，中会让你输入密码啥的，不需要管，一路回车即可，会生成你的ssh key。（如果重新生成的话会覆盖之前的ssh key。） 再ternimal下执行命令： 1234ssh -v git@github.com 最后两句会出现No more authentication methods to try. Permission denied (publickey). 再在ternimal下输入： 12345ssh-agent -s 然后会提示类似的信息：SSH_AUTH_SOCK=/tmp/ssh-GTpABX1a05qH/agent.404; export SSH_AUTH_SOCK; SSH_AGENT_PID=13144; export SSH_AGENT_PID; echo Agent pid 13144; 接着再输入： 1ssh-add ~/.ssh/id_rsa 这时候应该会提示：Identity added: …（这里是一些ssh key文件路径的信息）。如果出现错误提示：Could not open a connection to your authentication agent.。请执行命令： eval ssh-agent -s后继续执行命令ssh-add ~/.ssh/id_rsa ，这时候一般没问题。 再进入你的github账号，将刚刚生成的id_rsa.pub内容复制，在settings下，SSH and GPG keys下绑定。title随便取一个名字，然后将id_rsa.pub里的内容复制到Key中，完成后Add SSH Key。 最后一步，验证Key 12345在ternimal下输入命令：ssh -T git@github.com当出现Hi zmj2020! You've successfully authenticated, but GitHub does not provide shell access.表示验证成功 站点发布上传ssh key肯定要配置好 配置_config.yml中有关deploy的部分 最后站点根目录下安装deployer插件 1234npm install hexo-deployer-git --savehexo clean hexo g #生成hexo d #上传 至此Hexo+Github 个人博客搭建完成]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
</search>
