<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>西山夜雨</title>
  
  <subtitle>生活工作笔记本✌</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.iamzmj.top/"/>
  <updated>2019-12-19T04:44:54.115Z</updated>
  <id>https://www.iamzmj.top/</id>
  
  <author>
    <name>Martin Zhan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>腾讯云宝塔面板部署Nextcloud</title>
    <link href="https://www.iamzmj.top/posts/f7aa0f14.html"/>
    <id>https://www.iamzmj.top/posts/f7aa0f14.html</id>
    <published>2019-12-16T02:50:05.000Z</published>
    <updated>2019-12-19T04:44:54.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>nextcloud  是基于云技术的工程教育平台，利用云技术，提高工程教育过程中教学、实验与创新的效率与效果。每一位nextcloud的使用者都可以以教师或学生身份登录， 从而使得每个人都可以传授知识也可以学习知识，真正做到any time， any where的工程教育全新愿景。</p><img src="http://111.229.17.211:3389/imgs/2019/12/d30c4ee6621bcc31.jpg"><h1 id="宝塔面板安装"><a href="#宝塔面板安装" class="headerlink" title="宝塔面板安装"></a>宝塔面板安装</h1><p>远程登陆腾讯云服务器，Centos系统安装命令 ：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -<span class="keyword">y</span> wget &amp;&amp; wget -O install.<span class="keyword">sh</span> http://download.bt.<span class="keyword">cn</span>/install/install_6.<span class="number">0</span>.<span class="keyword">sh</span> &amp;&amp; <span class="keyword">sh</span> install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>安装完成后根据界面提示链接和账号密码登陆宝塔面板。</p><p>安装必要的部署环境LNMP: Nginx/MySQL5.5+/PHP 7.0+</p><img src="https://i.loli.net/2019/12/17/rJZnf3p1TbDIliE.jpg" width="400"><h1 id="部署Nextcloud"><a href="#部署Nextcloud" class="headerlink" title="部署Nextcloud"></a>部署Nextcloud</h1><p>1.新建站点</p><img src="https://i.loli.net/2019/12/17/6noWLEbMS9VZhru.jpg"><p>2.点选文件，进入站点目录，然后点击远程下载</p><p>nextcloud的安装包下载地址</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>download.nextcloud.com<span class="regexp">/server/</span>releases<span class="regexp">/nextcloud-14.0.4.zip</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/17/VSL2gATOEMjDtWU.jpg"><p>下载完成后，点击右侧的“解压”，解压到nextcloud根目录。完成后可以看到有个nextcloud的文件夹，我们进入后将里面的文件复制到根目录。</p><img src="http://111.229.17.211:3389/imgs/2019/12/1eab10a2e1f119a5.jpg"><p>以上几步完成后，就可以打开创建站点时的域名，创建管理员账号界面，输入管理员账号密码，数据库名和密码，数据库用户名。点击“安装完成”。（数据库账号和数据库密码同创建网站时所创建的数据库账号，密码）</p><img src="http://111.229.17.211:3389/imgs/2019/12/870a80aec4315f7e.jpg"><p>点击安装完成，完成后会自动登录。</p><img src="http://111.229.17.211:3389/imgs/2019/12/f5b7f35eda1d8e17.jpg"><img src="http://111.229.17.211:3389/imgs/2019/12/d43c4a0354c05c09.jpg"><h1 id="安全及设置告警解决"><a href="#安全及设置告警解决" class="headerlink" title="安全及设置告警解决"></a>安全及设置告警解决</h1><p>点选设置—概览，系统检查跳出<font color="red">安全及设置警告</font>如下：</p><img src="http://111.229.17.211:3389/imgs/2019/12/2e71839b282515d4.jpg"><p><strong>错误1：一些问题没有通过完整性检查</strong></p><p>点击无效文件列表，根据提示删除根目录下的无效文件，即可。</p><p><strong>错误2：PHP 内存限制低于建议值 512MB</strong></p><img src="http://111.229.17.211:3389/imgs/2019/12/3519e5b1c0fcbfb5.jpg"><p>保存并重启PHP即可解决该问题。</p><p><strong>错误3：PHP 的安装似乎不正确，无法访问系统环境变量。getenv(“PATH”) 函数测试返回了一个空值。</strong></p><p>从宝塔文件管理，打开/www/server/php/73/etc/php-fpm.conf，在其尾部添加一行</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env[PATH] = <span class="regexp">/usr/local</span><span class="regexp">/bin:/usr</span><span class="regexp">/bin:/bin</span><span class="symbol">:/usr/local/php/bin</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/c9abbd2d373d6a8b.jpg"><p>保存并重启PHP即可解决该问题。</p><p><strong>错误4：PHP 的组件 OPcache 没有正确配置</strong></p><p>在PHP7.3配置文件中替换如下几条语句</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">opcache.enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.enable_cli</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.interned_strings_buffer</span>=<span class="number">8</span></span><br><span class="line"><span class="attr">opcache.max_accelerated_files</span>=<span class="number">10000</span></span><br><span class="line"><span class="attr">opcache.memory_consumption</span>=<span class="number">128</span></span><br><span class="line"><span class="attr">opcache.save_comments</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.revalidate_freq</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/55c06279e80a1286.jpg"><p><strong>错误5：</strong></p><ul><li>1.您的网页服务器未正确设置以解析“/.well-known/caldav”。</li><li>2.您的网页服务器未正确设置以解析“/.well-known/carddav”。</li><li>3.内存缓存未配置，为了提升使用体验，请尽量配置内存缓存。</li></ul><p>(1和2)网站配置文件  location 部分添加如下两条语句保存即可。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rewrite <span class="regexp">/.well-known/</span>carddav <span class="regexp">/remote.php/</span>dav permanent;</span><br><span class="line">rewrite <span class="regexp">/.well-known/</span>caldav <span class="regexp">/remote.php/</span>dav permanent;</span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/064c3f8fd38787af.jpg"><p>(3)再在Mysql配置文件中添加两条语句</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">innodb_buffer_pool_size</span>=<span class="number">1</span>G</span><br><span class="line"><span class="attr">innodb_io_capacity</span>=<span class="number">4000</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/139ee5ff6c737cd2.jpg"><p>将php的扩展开启Apcu和memcached，然后在Nextcloud的config.php文件添加：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">'memcache.local' =&gt; '\OC\Memcache\APCu',</span><br><span class="line">  'memcache.distributed' =&gt; '\OC\Memcache\Memcached',</span><br><span class="line">  'memcached_servers' =&gt; </span><br><span class="line"> <span class="built_in"> array </span>(</span><br><span class="line">    0 =&gt; </span><br><span class="line">   <span class="built_in"> array </span>(</span><br><span class="line">      0 =&gt; 'localhost',</span><br><span class="line">      1 =&gt; 11211,</span><br><span class="line">    ),</span><br><span class="line"> ),</span><br></pre></td></tr></table></figure><p>问题解决。</p><p><strong>错误6：通过 HTTP 访问网站不安全。强烈建议您将服务器设置成要求使用HTTPS 协议</strong></p><p>添加域名解析，绑定SSL证书。</p><p><strong>问题7：所使用的数据库为MySQL但没有对4字节字符的支持。为正确处理文件名或评论中使用的4字节字符（比如emoji表情），建议开启MySQL的4字节字符支持</strong>。</p><p>1.修改Mysql 配置文件[mysqld],添加语句</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#低于Mysql8.0版本，</span></span><br><span class="line"><span class="attr">innodb_large_prefix</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">innodb_file_format</span>=barracuda</span><br><span class="line"><span class="attr">innodb_file_per_table</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#高于Mysql8.0版本，</span></span><br><span class="line"><span class="attr">innodb_file_per_table</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/7f96b656589c0df6.jpg"><p>2.开启Mysql 4字节支持</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span>  nextcloud所在的数据库名称  <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/17/ydTwb5QmDaFtHMl.jpg"><p>重启mysql.</p><p>3.修改nextcloud配置文件config.php，将 utf8mb4值改为 true官方给出的方法是使用occ命令，当然也可以直接修改config.php，occ命令：需要在nextcloud的安装根目录下执行：</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u www php occ config:<span class="built_in">system</span>:<span class="built_in">set</span> mysql.utf8mb4 --<span class="built_in">type</span> boolean --<span class="built_in">value</span>=<span class="string">"true"</span></span><br></pre></td></tr></table></figure><p>4.修复数据库，同样是occ命令，需要在nextcloud的安装根目录下执行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">-u</span> <span class="selector-tag">www</span> <span class="selector-tag">php</span> <span class="selector-tag">occ</span> <span class="selector-tag">maintenance</span><span class="selector-pseudo">:repair</span></span><br></pre></td></tr></table></figure><p>完成上述操作后，即可修复该告警。如出现登陆界面出现平台进入维护状态，只要修改config/config.php，将</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line"> 改成</span><br><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">false</span>,</span><br></pre></td></tr></table></figure><p><strong>问题8：HTTP的请求头 “Strict-Transport-Security” 未设置为至少 “15552000” 秒。</strong></p><p>解决方法还是修改nextcloud绑定的网站配置文件，添加一行header信息</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_header </span><span class="keyword">Strict-Transport-Security </span><span class="string">"max-age=63072000;"</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/7ac153d170a4607b.jpg"><p>最后附上完善的伪静态文件：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nextcloud一些关键目录的权限设置</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ ^/(data|config|\.ht|db_structure\.xml|README)</span> &#123;</span><br><span class="line">        <span class="attribute">deny</span> all;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#静态资源重定向1</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~* \/core\/(?:js\/oc\.js|preview\.png).*$</span> &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^</span> /index.php <span class="literal">last</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#webdav重定向</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/caldav(.*)$</span> /remote.php/caldav<span class="variable">$1</span> <span class="literal">redirect</span>;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/carddav(.*)$</span> /remote.php/carddav<span class="variable">$1</span> <span class="literal">redirect</span>;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/webdav(.*)$</span> /remote.php/webdav<span class="variable">$1</span> <span class="literal">redirect</span>;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^(/core/doc/[^\/]+/)$</span> <span class="variable">$1</span>/index.html;</span><br><span class="line"><span class="comment">#静态资源重定向2,支持使用acme脚本在申请证书时对域名的验证</span></span><br><span class="line">     <span class="attribute">if</span> (<span class="variable">$uri</span> !<span class="regexp">~* (?:\.(?:css|js|svg|gif|png|html|ttf|woff)$|^\/(?:remote|public|cron|status|ocs\/v1|ocs\/v2)\.php|^\/\.well-known\/acme-challenge\/.*$))</span>&#123;</span><br><span class="line">         <span class="attribute">rewrite</span><span class="regexp"> ^</span> /index.php <span class="literal">last</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#静态资源重定向3</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~* \.(?:png|html|ttf|ico|jpg|jpeg)$</span> &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> /index.php<span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ ^/(?:updater)(?:$|/)</span> &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">        <span class="attribute">index</span> index.php;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#caldav和#carddav</span></span><br><span class="line">    <span class="attribute">rewrite</span> /.well-known/carddav /remote.php/dav <span class="literal">permanent</span>;</span><br><span class="line">    <span class="attribute">rewrite</span> /.well-known/caldav /remote.php/dav <span class="literal">permanent</span>;</span><br></pre></td></tr></table></figure><h1 id="文件夹文件无法删除解决方法"><a href="#文件夹文件无法删除解决方法" class="headerlink" title="文件夹文件无法删除解决方法"></a>文件夹文件无法删除解决方法</h1><p>现象</p><p>删除目录或文件时提示：无法删除文件<strong>*或者”Error deleting file *</strong></p><p>解决方法</p><p>查看数据目录下nextcloud.log,可能有三种情况：</p><p><strong>情况A</strong>   </p><p>文件或目录被锁     关键词日志中检索  <font color="red">is locked</font></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;"reqId":"0DijSqEkfOg2iyh9VD8J","remoteAddr":"xx.xx.xx.xx","app":"webdav","message":"Exception: &#123;<span class="symbol">\"</span>Message<span class="symbol">\"</span>:<span class="symbol">\"</span>HTTP<span class="symbol">\\</span><span class="symbol">\/</span>1.1 423 <span class="symbol">\\</span><span class="symbol">\"</span>path<span class="symbol">\\</span><span class="symbol">\/</span>file.extension<span class="symbol">\\</span><span class="symbol">\"</span> is locked<span class="symbol">\"</span>,<span class="symbol">\"</span>Exception<span class="symbol">\"</span>:<span class="symbol">\"</span>OCA<span class="symbol">\\</span><span class="symbol">\\</span>DAV<span class="symbol">\\</span><span class="symbol">\\</span>Connector<span class="symbol">\\</span><span class="symbol">\\</span>Sabre<span class="symbol">\\</span><span class="symbol">\\</span>Exception<span class="symbol">\\</span><span class="symbol">\\</span>FileLocked<span class="symbol">\"</span>,<span class="symbol">\"</span>Code<span class="symbol">\"</span>:0,<span class="symbol">\"</span>Trace<span class="symbol">\"</span>:<span class="symbol">\"</span>#0</span><br></pre></td></tr></table></figure><p>此时是因为文件或目录被锁，可按以下操作暂时解决问题：</p><p>1)宝塔面板nextcloud根目录下修改config文件夹内的config.php文件</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">false</span>,        #<span class="string">'maintenance'</span> 赋值 <span class="keyword">true</span>    进入维护模式</span><br></pre></td></tr></table></figure><p>2)宝塔面板登陆nextcloud数据库，使用mysql命令行工具，执行语句</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> oc_file_locks <span class="keyword">WHERE</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>3)退出维护模式</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">true</span>,        #<span class="string">'maintenance'</span> 赋值 <span class="keyword">false</span>     退出维护模式</span><br></pre></td></tr></table></figure><p>4)确保cron正常运行。</p><p><strong>情况B</strong>  <font color="red">Permission denied</font></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"reqId"</span>:<span class="string">"***"</span>,<span class="string">"level"</span>:<span class="number">3</span>,<span class="string">"time"</span>:<span class="string">"2018-04-28T16:19:53+00:00"</span>,<span class="string">"remoteAddr"</span>:<span class="string">"127.0.0.1"</span>,<span class="string">"user"</span>:<span class="string">"***"</span>,<span class="string">"app"</span>:<span class="string">"PHP"</span>,<span class="string">"method"</span>:<span class="string">"<span class="keyword">DELETE</span>"</span>,<span class="string">"url"</span>:<span class="string">"\/remote.php\/webdav\***"</span>,<span class="string">"message"</span>:<span class="string">"unlink(\/mnt\/***): Permission denied at ***/lib\/private\/Files\/Storage\/Local.php#112"</span>,<span class="string">"userAgent"</span>:<span class="string">"Mozilla\/5.0 ,"</span>manuscript from cmdgy.com, version<span class="string">":"</span><span class="number">13.0.1.1</span><span class="string">"&#125;</span></span><br></pre></td></tr></table></figure><p>此时待删除的①文件、②目录、③目录中有文件 对于php进程无写入权限。</p><p>使用chown -R修复数据目录的权限解决。</p><p><strong>情况C</strong>  <font color="red">The first argument to copy() function cannot be a directory at，rename(<strong><em>files_trashbin/files/</em></strong>): Invalid cross-device link at / </font></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"reqId"</span>:<span class="string">"***"</span>,<span class="attr">"level"</span>:<span class="number">3</span>,<span class="attr">"time"</span>:<span class="string">"2018-04-28T16:26:32+00:00"</span>,<span class="attr">"remoteAddr"</span>:<span class="string">"127.0.0.1"</span>,<span class="attr">"user"</span>:<span class="string">"***"</span>,<span class="attr">"app"</span>:<span class="string">"PHP"</span>,<span class="attr">"method"</span>:<span class="string">"DELETE"</span>,<span class="attr">"url"</span>:<span class="string">"\/remote.php\/webdav\***"</span>,<span class="attr">"message"</span>:<span class="string">"rename(): The first argument to copy() function cannot be a directory at ***/lib\/private\/Files\/Storage\/Local.php#270"</span>,<span class="attr">"userAgent"</span>:<span class="string">"Mozilla\/5.0 manuscript from cmdgy.com "</span>,<span class="attr">"version"</span>:<span class="string">"13.0.1.1"</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">"reqId"</span>:<span class="string">"***"</span>,<span class="attr">"level"</span>:<span class="number">3</span>,<span class="attr">"time"</span>:<span class="string">"2018-04-28T16:26:32+00:00"</span>,<span class="attr">"remoteAddr"</span>:<span class="string">"127.0.0.1"</span>,<span class="attr">"user"</span>:<span class="string">"***"</span>,<span class="attr">"app"</span>:<span class="string">"PHP"</span>,<span class="attr">"method"</span>:<span class="string">"DELETE"</span>,<span class="attr">"url"</span>:<span class="string">"\/remote.php\/webdav\***"</span>,<span class="attr">"message"</span>:<span class="string">"rename(***files_trashbin\/files\/***): Invalid cross-device link at \/***\/lib\/private\/Files\/Storage\/Local.php#270"</span>,<span class="attr">"userAgent"</span>:<span class="string">"Mozilla\/5.0 manuscript from cmdgy.com"</span>,<span class="attr">"version"</span>:<span class="string">"13.0.1.1"</span>&#125;</span><br></pre></td></tr></table></figure><p>此时需检查文件目录是否通过mount -bind方式挂载。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="宝塔面板" scheme="https://www.iamzmj.top/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="Nextcloud" scheme="https://www.iamzmj.top/tags/Nextcloud/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云弹性网卡实现多外网IP</title>
    <link href="https://www.iamzmj.top/posts/bacec032.html"/>
    <id>https://www.iamzmj.top/posts/bacec032.html</id>
    <published>2019-12-15T02:04:20.000Z</published>
    <updated>2019-12-17T23:16:17.384Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="多IP服务器选择"><a href="#多IP服务器选择" class="headerlink" title="多IP服务器选择"></a>多IP服务器选择</h1><img src="http://111.229.17.211:3389/imgs/2019/12/91c394660ca0ab76.jpg"><p>如图上图所示， 性价比推荐以下两个配置<br> CPU：1核 内存：2GB  可以申请弹性公网IP数量为 弹性网卡数量网卡绑定IP数：2X6=12个IP<br> CPU：2核 内存：2GB  可以申请弹性公网IP数量为 弹性网卡数量网卡绑定IP数：2X10=20个IP<br> 以此类推</p><h1 id="购买腾讯云服务器"><a href="#购买腾讯云服务器" class="headerlink" title="购买腾讯云服务器"></a>购买腾讯云服务器</h1><p>已购买 CPU：1核 内存：2GB的服务器，并创建了实例。</p><img src="http://111.229.17.211:3389/imgs/2019/12/43b355f5d579080a.jpg"><h1 id="创建弹性网卡"><a href="#创建弹性网卡" class="headerlink" title="创建弹性网卡"></a>创建弹性网卡</h1><p>选择云产品—私有网络—IP与网卡—弹性网卡—点击默认网卡名字</p><p>先配置第一张主网卡</p><img src="http://111.229.17.211:3389/imgs/2019/12/d1176b1dc78b29ea.jpg"><img src="http://111.229.17.211:3389/imgs/2019/12/a3039a613deffd8e.jpg"><p>选择 IPV4管理- 先把普通公网IP转换成弹性公网IP，然后点击 修改主IP</p><img src="http://111.229.17.211:3389/imgs/2019/12/33352ab52dac3d9d.jpg"><p>将内网当前IP D段修改为2，以方便后续记忆。</p><img src="http://111.229.17.211:3389/imgs/2019/12/306f359aa3e531e3.jpg"><p>点击 分配内网IP ，手动添加5个（只能添加5个）辅助内网IP</p><p><img src="http://111.229.17.211:3389/imgs/2019/12/63bca68ef1add94a.jpg">再配置第二张辅助网卡 </p><p>主IP可以自动分配也可以手动添加，但一定要和主网卡内网IP再同一个网段内。</p><img src="http://111.229.17.211:3389/imgs/2019/12/a93a12200c32baa0.jpg"><p>选择内网主IP：172.17.15.2 点击绑定给辅助IP绑定弹性公网IP地址，选择新建EIP绑定，会自动申请弹性公网IP并绑定。弹性公网IP申请后立即绑定，<font color="red">弹性公网IP不闲置不收费</font>。(也可以选择使用现有EIP绑定，前提是你之前已经在弹性公网IP申请了空闲的IP地址)</p><img src="http://111.229.17.211:3389/imgs/2019/12/43bb93fdb2f9cac2.jpg"><img src="http://111.229.17.211:3389/imgs/2019/12/efa533412295954a.jpg"><p>返回弹性网卡，可以看到辅助网卡已新建。</p><img src="http://111.229.17.211:3389/imgs/2019/12/eacd16421d2c41e8.jpg"><p>左后绑定云服务器。 </p><img src="http://111.229.17.211:3389/imgs/2019/12/6fb6c04ce5eb446c.jpg"><p>辅助网卡绑定服务器成功。</p><h1 id="服务器绑定弹性公网IP-实现多IP"><a href="#服务器绑定弹性公网IP-实现多IP" class="headerlink" title="服务器绑定弹性公网IP 实现多IP"></a>服务器绑定弹性公网IP 实现多IP</h1><h2 id="创建辅助网卡的配置文件"><a href="#创建辅助网卡的配置文件" class="headerlink" title="创建辅助网卡的配置文件"></a>创建辅助网卡的配置文件</h2><p><strong>远程登陆云服务器</strong></p><p>执行以下命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/</span></span><br></pre></td></tr></table></figure><p><strong>创建新网卡的配置文件 ifcfg-eth1 ：</strong></p><p> 1.输入命令：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> ifcfg-eth0 ifcfg-eth1</span><br></pre></td></tr></table></figure><p>2.输入命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vim</span> ifcfg-eth1</span><br></pre></td></tr></table></figure><p>3.按 “i” 切换至编辑模式，把配置文件内容修改为：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">DEVICE</span>=<span class="string">'eth1'</span></span><br><span class="line"><span class="attribute">NM_CONTROLLED</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">IPADDR</span>=<span class="string">'192.168.1.62'</span>  # 根据实际填写，此处写弹性网卡上的<span class="built_in"> IP </span>地址</span><br><span class="line"><span class="attribute">NETMASK</span>=<span class="string">'255.255.255.192'</span>  #根据实际填写，此处写子网掩码</span><br><span class="line"><span class="comment">#GATEWAY='192.168.1.1'  #根据实际需要填写。因为eth0文件定义了网关，这里不再写网关，避免网关冲突</span></span><br></pre></td></tr></table></figure><p>我这边使用宝塔面环境进行配置</p><ul><li>打开宝塔文件根目录/etc/sysconfig/network-scripts  </li><li>创建一个ifcfg-eth1的网卡配置文件（不要直接在ifcfg-eth0里边修改）</li></ul><p>配置文件中放入如下代码:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">DEVICE</span>=<span class="string">'eth1'</span></span><br><span class="line"><span class="attribute">NM_CONTROLLED</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">IPADDR</span>=<span class="string">'192.168.1.62'</span>  # 根据实际填写，此处写弹性网卡上的<span class="built_in"> IP </span>地址</span><br><span class="line"><span class="attribute">NETMASK</span>=<span class="string">'255.255.255.192'</span>  #根据实际填写，此处写子网掩码</span><br><span class="line"><span class="comment">#GATEWAY='192.168.1.1'  #根据实际需要填写。因为eth0文件定义了网关，这里不再写网关，避免网关冲突</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/69569b8dac413faf.jpg" width="600"><p>保存并推出。</p><h2 id="关闭-rp-filter-校验"><a href="#关闭-rp-filter-校验" class="headerlink" title="关闭 rp_filter 校验"></a>关闭 rp_filter 校验</h2><p>rp_filter参数用于控制系统是否开启对数据包源地址的校验,配置完成后需要需要关闭反向过滤，如果不关闭，在本机ping弹性公网IP会不成功</p><p>注意：反向过滤指系统在接收到一个 IP 包后检查该 IP 是否符合要求，不合要求则被丢弃。<br> 例如，用户在 A 网卡上收到一个 IP 包，发送 IP 为 B。而给 B 的 IP 发送时应该用的网卡不是 A，则会丢弃。由于默认路由走的是主网卡，所以开启反向过滤后，辅助网卡上的 IP 会 ping 不通。</p><p>在   /etc/sysctl.conf 里，打开找到</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.default</span><span class="selector-class">.rp_filter</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>删掉并替换成</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.default</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.all</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.eth0</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.eth1</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="SSH命令重启网卡"><a href="#SSH命令重启网卡" class="headerlink" title="SSH命令重启网卡"></a>SSH命令重启网卡</h2><p>生效命令:<code># sysctl -p</code></p><img src="http://111.229.17.211:3389/imgs/2019/12/eb88d7ab739a8da8.jpg"><p>重启网卡:<code># systemctl restart network.service</code>并查看路由</p><img src="http://111.229.17.211:3389/imgs/2019/12/728103b2c986f87a.jpg"><p>查看配置后的效果:<code># ip a</code></p><img src="http://111.229.17.211:3389/imgs/2019/12/307f7ef56a99c3eb.jpg"><p>查看弹性公网已经可以ping通。</p><img src="http://111.229.17.211:3389/imgs/2019/12/9d368151a70cb6b1.jpg"><p>参考博客：</p><p>腾讯官方文档 <a href="https://cloud.tencent.com/document/product/576/18535" rel="external nofollow noopener noreferrer" target="_blank">https://cloud.tencent.com/document/product/576/18535</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="弹性网卡" scheme="https://www.iamzmj.top/tags/%E5%BC%B9%E6%80%A7%E7%BD%91%E5%8D%A1/"/>
    
      <category term="多公网IP" scheme="https://www.iamzmj.top/tags/%E5%A4%9A%E5%85%AC%E7%BD%91IP/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板安装ImgURL个人图床</title>
    <link href="https://www.iamzmj.top/posts/a9a46c5c.html"/>
    <id>https://www.iamzmj.top/posts/a9a46c5c.html</id>
    <published>2019-12-13T09:26:05.000Z</published>
    <updated>2019-12-17T22:29:13.032Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>利用腾讯云的官方<a href="https://cloud.tencent.com/document/product/436/6883" rel="external nofollow noopener noreferrer" target="_blank">COSFS工具</a>，把新建的COS存储桶挂载到腾讯云服务器上（操作系统为Centos7）。</p><p>再安装ImgURL搭建个人图床。</p><p>搭建环境：Centos7 系统，宝塔面板已安装。</p><h1 id="建立存储"><a href="#建立存储" class="headerlink" title="建立存储"></a>建立存储</h1><p>登陆腾讯云控制台—选择对象存储—新建存储桶（我这边已创建完成）</p><img src="https://i.loli.net/2019/12/13/8aQSV9K7rU4LguN.jpg"><p>创建完成后整理如下信息：</p><p>存储桶名称（bucket_name）：x04680126 替换成你自己的</p><p>存储桶APPID（bucket_appid）：1300755540 替换成你自己的</p><p>存储桶访问域名（bucket_region）：<a href="https://x04680126-1300755540.cos.ap-shanghai.myqcloud.com" rel="external nofollow noopener noreferrer" target="_blank">https://x04680126-1300755540.cos.ap-shanghai.myqcloud.com</a></p><h1 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h1><p>接下来在<a href="https://console.cloud.tencent.com/cos5/key" rel="external nofollow noopener noreferrer" target="_blank">密钥管理</a>中切换到API密钥管理，生成密钥。如果是生产环境，建议使用子账户使用密钥。密钥分为SecretId和SecretKey。其中SecretKey需要验证手机号才能显示。</p><p>API秘钥id（SecretId）：AKIDXXXXXXXXXXXXXXXXXXXXXXBM951 替换成你自己的</p><p>API秘钥key（SecretKey）：jBMXXXXXXXXXXXXXXXXXXXXXXweB 替换成你自己的</p><h1 id="服务器上配置"><a href="#服务器上配置" class="headerlink" title="服务器上配置"></a>服务器上配置</h1><p><strong>Xshell6 远程登陆腾讯云服务器</strong></p><h2 id="1-安装环境依赖包"><a href="#1-安装环境依赖包" class="headerlink" title="1.安装环境依赖包"></a><strong>1.安装环境依赖包</strong></h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">sudo</span> <span class="comment">yum</span> <span class="comment">install</span> <span class="comment">automake</span> <span class="comment">gcc</span><span class="literal">-</span><span class="comment">c</span><span class="literal">+</span><span class="literal">+</span> <span class="comment">git</span> <span class="comment">libcurl</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">libxml2</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">fuse</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">make</span> <span class="comment">openssl</span><span class="literal">-</span><span class="comment">devel</span></span><br></pre></td></tr></table></figure><h2 id="2-安装工具"><a href="#2-安装工具" class="headerlink" title="2.安装工具"></a><strong>2.安装工具</strong></h2><p>使用 GitHub 将源码下载到 /usr/cosfs 为例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/tencentyun/</span>cosfs-v4.<span class="number">2.1</span> <span class="regexp">/usr/</span>cosfs</span><br></pre></td></tr></table></figure><h2 id="3-进入到该目录，编译安装"><a href="#3-进入到该目录，编译安装" class="headerlink" title="3.进入到该目录，编译安装"></a><strong>3.进入到该目录，编译安装</strong></h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/usr/cosfs</span></span><br><span class="line"><span class="string">./autogen.sh</span></span><br><span class="line"><span class="string">./configure</span></span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>注：在这里有一个大坑，使用腾讯云VPS编译安装的时候会报错，但安装完成之后可以正常使用！！！！！！！</p><h2 id="4-配置文件"><a href="#4-配置文件" class="headerlink" title="4.配置文件"></a><strong>4.配置文件</strong></h2><p>替换自己的真实bucket_appid，secretId和secredKey</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo kenny-hexo-<span class="number">1256238228</span><span class="symbol">:AKIDXXXXXXXXXXXXXXXXXXXXXXBM951</span><span class="symbol">:jBMXXXXXXXXXXXXXXXXXXXXXXweB</span> &gt; <span class="regexp">/etc/passwd</span>-cosfs</span><br><span class="line">chmod <span class="number">640</span> /etc/passwd-cosfs</span><br></pre></td></tr></table></figure><h2 id="5-云服务器挂载存储桶"><a href="#5-云服务器挂载存储桶" class="headerlink" title="5.云服务器挂载存储桶"></a><strong>5.云服务器挂载存储桶</strong></h2><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cosfs <span class="number">1300755540</span>:x<span class="number">04680126</span> /usr/x<span class="number">04680126</span>-<span class="number">1300755540</span> -ourl=https://cos.ap-shanghai.myqcloud.com -odbglevel=info</span><br></pre></td></tr></table></figure><p>1300755540:x04680126 是自己的 bucket_appid 和 bucket_name， 需要替换为用户自己的；</p><p>/usr/x04680126-1300755540  是要挂载到服务器上（本地）的目录，需要使用宝塔提前创建；</p><p><a href="https://cos.ap-shanghai.myqcloud.com" rel="external nofollow noopener noreferrer" target="_blank">https://cos.ap-shanghai.myqcloud.com</a> 是你的 bucket_region部分</p><p>-odbglevel 参数表示信息级别，照写即可。</p><p><strong>云服务器卸载存储桶</strong></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fusermount -u /usr/x<span class="number">04680126</span>-<span class="number">1300755540</span></span><br><span class="line">或者</span><br><span class="line">umount -l /usr/x<span class="number">04680126</span>-<span class="number">1300755540</span></span><br></pre></td></tr></table></figure><p>查看是否挂载成功</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">df -h</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/13/we4smb3XBHKrVaI.jpg"><p>出现红框里内容表示挂载成功。</p><h1 id="设置图片在线浏览"><a href="#设置图片在线浏览" class="headerlink" title="设置图片在线浏览"></a>设置图片在线浏览</h1><p>点击创建的存储桶—基础配置—拉到最下—开启静态网站和强制HTTPS</p><img src="https://i.loli.net/2019/12/13/BHR5MosPil9kpre.jpg"><h1 id="安装ImgURL"><a href="#安装ImgURL" class="headerlink" title="安装ImgURL"></a>安装ImgURL</h1><p>宝塔面板<strong>新建站点</strong>—<strong>新建站点根目录</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">新建站点：<span class="string">http:</span><span class="comment">//111.229.17.211:3389/</span></span><br><span class="line"></span><br><span class="line">新建站点根目录：<span class="regexp">/usr/</span>ImgURL-test              自己设定</span><br></pre></td></tr></table></figure><p>软件商店 php安装 <code>fileinfo</code>和<code>imagemagick</code>扩展</p><img src="https://i.loli.net/2019/12/17/ftG2ALsdEUDuN8V.jpg" style="zoom:200%;"><p>Nginx设置伪静态</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* \.(db3|json)$</span> &#123;</span><br><span class="line">  <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^/(temp|upload|imgs|data|application|static|system)/.*.(php|php5)$</span> &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下载地址:<a href="https://github.com/helloxz/imgurl" rel="external nofollow noopener noreferrer" target="_blank">ImgURL</a>，并解压。</p><p>宝塔面板进入站点根目录/usr/ImgURL-test，全选解压后的子文件并上传。</p><img src="https://i.loli.net/2019/12/17/Bok5fWud7NcXpUJ.jpg"><p>浏览器输入 站点域名 <a href="http://111.229.17.211:3389/" rel="external nofollow noopener noreferrer" target="_blank">http://111.229.17.211:3389/</a>  并确保检测结果通过—按下一步安装完成。</p><img src="https://i.loli.net/2019/12/17/hF3t1VGmwUTJERY.jpg"><h1 id="取消广告"><a href="#取消广告" class="headerlink" title="取消广告"></a>取消广告</h1><p>新版本安装完成后默认会添加俩个条广告，取消掉都非常简单只需编辑网站根目录下的 footer.php 文件，文件路径 \ application \ views \ user \ footer.php </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">'https://libs.xiaoz.top/assets/imgurl.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">如果只是想删除广告，那就删掉以上代码就OK了</span><br><span class="line"></span><br><span class="line">如果要改为自己的广告就替换为本地调用：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">'/static/imgurl.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">然后再修改js为自己的广告</span><br><span class="line">/static/imgurl.js</span><br></pre></td></tr></table></figure><p>使用协议广告路径</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#使用协议打赏二维码路径</span></span><br><span class="line"><span class="meta-keyword">/data/</span>pages/use.md</span><br><span class="line"><span class="meta">#使用协议广告图片路径</span></span><br><span class="line"><span class="meta-keyword">/application/</span>views<span class="meta-keyword">/user/</span>page.php</span><br></pre></td></tr></table></figure><p>由于本次安装为社区版本，无法绑定腾讯COS等外部存储。</p><img src="https://i.loli.net/2019/12/17/XM3dVFaIqnH2J4P.jpg"><p>参考博客：</p><p><a href="https://www.234du.com/1167.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.234du.com/1167.html</a></p><p><a href="https://blog.nicky1605.com/linux-mount-cos.html" rel="external nofollow noopener noreferrer" target="_blank">https://blog.nicky1605.com/linux-mount-cos.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="图床" scheme="https://www.iamzmj.top/categories/%E5%9B%BE%E5%BA%8A/"/>
    
    
      <category term="图床" scheme="https://www.iamzmj.top/tags/figurebed/"/>
    
      <category term="宝塔面板" scheme="https://www.iamzmj.top/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="ImgURL" scheme="https://www.iamzmj.top/tags/ImgURL/"/>
    
  </entry>
  
  <entry>
    <title>读书计划2020</title>
    <link href="https://www.iamzmj.top/posts/42058630.html"/>
    <id>https://www.iamzmj.top/posts/42058630.html</id>
    <published>2019-12-04T09:47:00.000Z</published>
    <updated>2019-12-23T14:12:29.948Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>建立终生信仰的三观（价值观、人生观、世界观）。 </p><p>构建完整稳定的知识体系，达到对人生世事基本无惑的智慧。 </p><p>完成身体、心灵、与社会三者之间健康、和谐的平衡发展。 </p><p>形成一套完整有效的思考、推演、决策、行动的解决问题模型。 </p><p>基本跟上前沿信息与知识点，不被时代淘汰。</p><h2 id="技能类"><a href="#技能类" class="headerlink" title="技能类"></a>技能类</h2><p><a href="https://pan.baidu.com/s/12kVGtn64LkxxUrP6ZtCLJQ" rel="external nofollow noopener noreferrer" target="_blank">利用Python进行数据分析(第二版)</a></p><h2 id="思维类"><a href="#思维类" class="headerlink" title="思维类"></a>思维类</h2><p>高效能人士的七个习惯</p><p>博弈论 </p><p>批判性思维</p><p>拆掉思维的墙</p><p><a href="https://www.lanzous.com/i59rhib" rel="external nofollow noopener noreferrer" target="_blank">学会提问 - (美)尼尔.布朗</a></p><p>逻辑学导论</p><p>放弃的艺术</p><p>别做正常的傻瓜</p><p>卓有成效的管理者</p><p>第五项修炼</p><p>六顶思考帽</p><p>墨菲定律</p><h2 id="自我完善"><a href="#自我完善" class="headerlink" title="自我完善"></a>自我完善</h2><p>焦虑症的心理研究与矫治</p><p>走出抑郁</p><p>自卑与超越</p><p>心理咨询师笔记</p><p>爱的艺术</p><p>被讨厌的勇气</p><p>异类的天赋</p><h2 id="信息前沿"><a href="#信息前沿" class="headerlink" title="信息前沿"></a>信息前沿</h2><p>图说区块链</p><p>区块链革命</p><p>区块链社会</p><h2 id="心理学"><a href="#心理学" class="headerlink" title="心理学"></a>心理学</h2><p>瞬间读懂身体语言</p><p>变态心理学</p><p>认知心理学</p><p>发展心理学</p><p>人格心理学</p><h2 id="经济哲学"><a href="#经济哲学" class="headerlink" title="经济哲学"></a>经济哲学</h2><p>读懂中国制造2025</p><h2 id="其它类"><a href="#其它类" class="headerlink" title="其它类"></a>其它类</h2><p><a href="https://www.lanzous.com/i59rheh" rel="external nofollow noopener noreferrer" target="_blank">巨婴国 - 武志红</a></p><p>万万没想到 - 万维钢</p><p><a href="https://www.lanzous.com/i59rhfi" rel="external nofollow noopener noreferrer" target="_blank">洗澡 - 杨绛</a></p><p><a href="https://www.lanzous.com/i59rhha" rel="external nofollow noopener noreferrer" target="_blank">显微镜下的大明 - 马伯庸</a></p><p>逆向盈利</p><img src="https://i.loli.net/2019/12/13/e2H3IVTu1wXv9bc.jpg" width="700">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="书单" scheme="https://www.iamzmj.top/categories/booklist/"/>
    
    
      <category term="书单" scheme="https://www.iamzmj.top/tags/booklist/"/>
    
      <category term="计划" scheme="https://www.iamzmj.top/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署到腾讯云服务器</title>
    <link href="https://www.iamzmj.top/posts/e1764d0e.html"/>
    <id>https://www.iamzmj.top/posts/e1764d0e.html</id>
    <published>2019-12-03T02:31:30.000Z</published>
    <updated>2019-12-17T14:19:18.260Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>原先将Hexo部署到 <code>github</code> 和 <code>coding</code> 上的，访问速度较慢，于是购买了低配腾讯云服务器对原先博客进行重新部署。只要通过三步即可成功部署：</p><p>1.云服务器端 git 的配置<br>2.配置Nginx<br>3.本地端 hexo 的设置更改</p><h1 id="云服务器重装系统并远程登陆"><a href="#云服务器重装系统并远程登陆" class="headerlink" title="云服务器重装系统并远程登陆"></a>云服务器重装系统并远程登陆</h1><img src="https://i.loli.net/2019/12/03/jGMQNRkDl28gTsS.jpg" width="800"><p>确保是干净的操作系统，没有安装过其它环境带的Apache/Nginx/php/MySQL（已有环境不可安装）。</p><h1 id="安装宝塔Linux面板"><a href="#安装宝塔Linux面板" class="headerlink" title="安装宝塔Linux面板"></a><strong>安装宝塔Linux面板</strong></h1><p>7.0.2安装命令如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -<span class="keyword">y</span> wget &amp;&amp; wget -O install.<span class="keyword">sh</span> http://download.bt.<span class="keyword">cn</span>/install/install_6.<span class="number">0</span>.<span class="keyword">sh</span> &amp;&amp; <span class="keyword">sh</span> install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p><strong>宝塔面板登陆：</strong></p><p>根据安装完成的提示（登陆地址，账号，密码），登陆宝塔管理面板我的如下：</p><p>Bt-Panel: <a href="http://111.229.17.211:8888/0e1fb823。" rel="external nofollow noopener noreferrer" target="_blank">http://111.229.17.211:8888/0e1fb823。</a></p><h1 id="安装配置建站环境"><a href="#安装配置建站环境" class="headerlink" title="安装配置建站环境"></a><strong>安装配置建站环境</strong></h1><h2 id="宝塔面板安装Nginx"><a href="#宝塔面板安装Nginx" class="headerlink" title="宝塔面板安装Nginx"></a>宝塔面板安装Nginx</h2><p>软件商店选择建站安装环境，本次选择推荐选项安装</p><ul><li>Nginx (主要用到这个)</li><li>Mysql</li><li>php</li><li>Pure-Ftpd </li><li>phpMyAdmin </li></ul><h2 id="云服务器端配置git"><a href="#云服务器端配置git" class="headerlink" title="云服务器端配置git"></a>云服务器端配置git</h2><p>下载 git （下载到 /usr/local/src 目录下）</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local/src </span><br><span class="line">wget <span class="string">http:</span><span class="comment">//ftp.ntu.edu.tw/software/scm/git/git-2.9.5.tar.gz</span></span><br></pre></td></tr></table></figure><p>解压到当前目录</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zvxf</span> <span class="selector-tag">git-2</span><span class="selector-class">.9</span><span class="selector-class">.5</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p>编译</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> git-<span class="number">2.9</span>.<span class="number">5</span></span><br><span class="line"><span class="keyword">make</span> <span class="keyword">all</span> prefix=/usr/local/git</span><br></pre></td></tr></table></figure><p>安装 git 到 /usr/local/git 目录下</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> install prefix=/usr/<span class="keyword">local</span>/git</span><br></pre></td></tr></table></figure><p>配置 git 环境变量</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 'export <span class="built_in">PATH</span>=$<span class="built_in">PATH</span>:/usr/local/git/bin' &gt;&gt; /etc/bashrc</span><br></pre></td></tr></table></figure><p>使 git 环境变量生效</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/etc/</span>bashrc</span><br></pre></td></tr></table></figure><p>验证安装完成</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="comment">--version</span></span><br></pre></td></tr></table></figure><p>宝塔面板文件管理查看git已安装</p><img src="https://i.loli.net/2019/12/03/S35nJO98vygsjYQ.jpg"><h2 id="云服务器创建git-仓库"><a href="#云服务器创建git-仓库" class="headerlink" title="云服务器创建git 仓库"></a>云服务器创建git 仓库</h2><p><strong>1.创建hexo的仓库</strong></p><p>git仓库用于存放博客网站资源。在 home/git的目录下，创建一个名为hexo的仓库。<br>如果没有 home/git目录，需要先创建，然后修改目录的所有权和用户权限。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="string">/home/git/</span></span><br><span class="line">chown -R $USER:$USER <span class="string">/home/git/</span></span><br><span class="line">chmod -R 755 <span class="string">/home/git/</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/home/git/</span></span><br><span class="line">git init <span class="params">--bare</span> hexo.git</span><br></pre></td></tr></table></figure><p><strong>2.创建git hooks</strong></p><p>在 /home/git/hexo.git下，有一个自动生成的 hooks文件夹，我们创建一个新的 git钩子 post-receive，用于自动部署。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/home/gi</span>t<span class="regexp">/hexo.git/</span>hooks<span class="regexp">/post-receive</span></span><br></pre></td></tr></table></figure><p>将以下代码写到post-receive</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash </span></span><br><span class="line">git --work-tree=/home/hexo --git-dir=/home/git/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>宝塔面板文件夹系统内查看如下：</p><img src="https://i.loli.net/2019/12/03/3oDKVlpOJvQ7mxX.jpg"><img src="https://i.loli.net/2019/12/03/v7CcxBmTyhQRObY.jpg"><p>修改文件权限，使得其可执行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="regexp">/home/gi</span>t<span class="regexp">/hexo.git/</span>hooks<span class="regexp">/post-receive</span></span><br></pre></td></tr></table></figure><p><strong>3.创建博客保存目录hexo</strong></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> /home/hexo/ </span><br><span class="line"><span class="keyword">chown</span> -R $USER:$USER /home/hexo/</span><br><span class="line"><span class="keyword">chmod</span> -R <span class="number">755</span> /home/hexo/</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/03/qIfYruAERMw4zLj.jpg"><h2 id="宝塔面板配置-Nginx"><a href="#宝塔面板配置-Nginx" class="headerlink" title="宝塔面板配置 Nginx"></a>宝塔面板配置 Nginx</h2><p>添加网络，选择之前服务器上创建的根目录</p><img src="https://i.loli.net/2019/12/13/6ynSjxNTq5dbB7r.jpg" width="800"><p>填写1年期免费SSL 证书,可以在<a href="https://buy.cloud.tencent.com/ssl?fromSource=ssl" rel="external nofollow noopener noreferrer" target="_blank">腾讯SSL 证书-域名型免费版</a>申请并下载（Nginx的，因为我安装的是这个服务）</p><img src="https://i.loli.net/2019/12/13/Gs5A1FM2wbB7CSi.jpg"><h2 id="hexo站点配置文件修改"><a href="#hexo站点配置文件修改" class="headerlink" title="hexo站点配置文件修改"></a>hexo站点配置文件修改</h2><p>1.打开hexo站点配置文件_config.yml，修改如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line">  - type: git</span><br><span class="line"><span class="symbol">    repo:</span> </span><br><span class="line"><span class="symbol">        tencent:</span> root@<span class="number">111.229</span><span class="number">.17</span><span class="number">.211</span>:<span class="meta-keyword">/home/</span>git/hexo   </span><br><span class="line"><span class="symbol">    branch:</span> master</span><br><span class="line"><span class="symbol">    message:</span> blog update</span><br><span class="line">  - type: baidu_url_submitter</span><br></pre></td></tr></table></figure><h1 id="服务器上部署"><a href="#服务器上部署" class="headerlink" title="服务器上部署"></a>服务器上部署</h1><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>hexo deploy     期间需要输入云服务器登陆密码。静态文件已部署到服务器中。</p><img src="https://i.loli.net/2019/12/13/Du98SX7TBIxCmYE.jpg"><p>若 hexo deploy  出现以下内容：</p><img src="https://i.loli.net/2019/12/17/nNJbSIGVlFCuH3g.jpg"><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~<span class="regexp">/.ssh/</span>known_hosts</span><br></pre></td></tr></table></figure><p>重新ssh连接就可以了！</p><p>参考博客：<a href="https://blog.csdn.net/jiejiemcu/article/details/102081674" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/jiejiemcu/article/details/102081674</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="Hexo部署" scheme="https://www.iamzmj.top/tags/Hexo%E9%83%A8%E7%BD%B2/"/>
    
      <category term="云服务器" scheme="https://www.iamzmj.top/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Win10下IE浏览器图标无法删除的解决办法</title>
    <link href="https://www.iamzmj.top/posts/ed3f23a1.html"/>
    <id>https://www.iamzmj.top/posts/ed3f23a1.html</id>
    <published>2019-11-08T15:00:58.000Z</published>
    <updated>2019-11-18T03:35:50.649Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>为自学MySQL,在Win10电脑上安装SQLyog软件，安装完毕时突然发现电脑桌面自动添加了IE浏览器的图标，而且该图标无法直接右键删除。 我去【控制面板】-【程序卸载】里面也没有找到安装IE浏览器（之前一直没有遇到过这种情况） ，那该如何是好呢？通过百度后，我将相关的解决办法记录与此，以便日后出现同类问题可以及时的解决。 </p><img src="https://i.loli.net/2019/11/08/hHfRi4lUWrJc7Lx.jpg" width="400"><p>Win+R,输入“regedit”,进入注册表编辑器,</p><p>进入如下目录</p><p>计算\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Desktop\NameSpace</p><p>找到{00010203-0001-0305-102938475600}字典目录  </p><p>删除{00010203-0001-0305-102938475600}字典目录  </p><p> 这时再返回电脑桌面，发现原先的IE图标已经被删除，问题成功解决！ </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Windows" scheme="https://www.iamzmj.top/categories/Windows/"/>
    
    
      <category term="IE浏览器" scheme="https://www.iamzmj.top/tags/IE%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="系统优化" scheme="https://www.iamzmj.top/tags/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记二：DQL查询语言</title>
    <link href="https://www.iamzmj.top/posts/2a4d6fbc.html"/>
    <id>https://www.iamzmj.top/posts/2a4d6fbc.html</id>
    <published>2019-11-08T06:40:21.000Z</published>
    <updated>2019-12-03T00:23:40.563Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://i.loli.net/2019/11/17/P23yRM6DmGA54tT.png" width="800"><img src="https://i.loli.net/2019/11/17/8NbygLtE35pADJU.png" width="800"><img src="https://i.loli.net/2019/12/03/5fPzqSBduaAFNbM.png" width="800"><img src="https://i.loli.net/2019/12/03/mPaepydEOiSs7WI.png" width="800"><img src="https://i.loli.net/2019/12/03/blKQZI8kfjSROLy.png" width="800"><img src="https://i.loli.net/2019/12/03/gZrRLMEThfyYClq.png" width="800"><img src="https://i.loli.net/2019/12/03/6qVkX8UQDdFZrAw.png" width="800"><h1 id="MySQL-DQL查询语言"><a href="#MySQL-DQL查询语言" class="headerlink" title="MySQL-DQL查询语言"></a>MySQL-DQL查询语言</h1><script type="text/javascript" src="/js/src/bai.js"></script><p>将参考用数据库 <a href="https://www.lanzous.com/i78v5yf" rel="external nofollow noopener noreferrer" target="_blank">myemployees.sql</a>添加至图形化用户界面客户端</p><h2 id="MySQL常见命令"><a href="#MySQL常见命令" class="headerlink" title="MySQL常见命令"></a>MySQL常见命令</h2><p>1、查看当前所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><p>2、打开指定数据库</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> 库名</span><br></pre></td></tr></table></figure><p>3、查看当前库的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p>4、查看其它库的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span> <span class="keyword">from</span> 库名;`</span><br></pre></td></tr></table></figure><p>5、创建一个表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line"></span><br><span class="line">   列名     列类型,</span><br><span class="line">   列名     列类型,</span><br><span class="line">    <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>.</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>6、查看表结构</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> 表名</span><br></pre></td></tr></table></figure><p>5、查看服务器的版本</p><p>方式一：登录到mysqI服务端，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();</span><br></pre></td></tr></table></figure><p>方式二：未连接到mysql服务端</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">mysql</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">version</span> <span class="comment">或</span>  <span class="comment">mysql</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">V</span></span><br></pre></td></tr></table></figure><h2 id="MySQL语句规范"><a href="#MySQL语句规范" class="headerlink" title="MySQL语句规范"></a>MySQL语句规范</h2><ul><li>不区分大小写，但建议关键字大写，表名、列名小写</li><li>每条命令最好用分号结尾</li><li>每条命令根据需要，可以进行缩进或者换行</li><li>注释  <ul><li>单行注释：#注释文字</li><li>单行注释：–[空格]注释文字</li><li>多行注释</li></ul></li></ul><h3 id="基础查询语句（进阶一）"><a href="#基础查询语句（进阶一）" class="headerlink" title="基础查询语句（进阶一）"></a>基础查询语句（进阶一）</h3><p>语法：select 查询的列表 from 表名</p><ul><li><p>查询列表可以是：表中的字段、常量值、表达式、函数</p></li><li><p>查询的结果是一个虚拟的表格</p></li></ul><blockquote><p><strong>1、查询字段</strong></p></blockquote><p>查询表中的单个字段</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> last_name <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><p>查询表中多个字段</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> last_name, salary, email <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><p>查询表中所有字段</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><blockquote><p><strong>2、查询常量值</strong></p></blockquote><p>注意:字符型和日期型的常量值必须用单引号引起来，数值型不需要</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">100</span></span><br><span class="line"><span class="keyword">select</span> <span class="symbol">'john</span>'</span><br></pre></td></tr></table></figure><blockquote><p><strong>3、查询表达式</strong></p></blockquote><p>注意：不支持++、–等运算方式</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="number">100</span>*<span class="number">98</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>4、查询函数</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();</span><br></pre></td></tr></table></figure><blockquote><p><strong>5、为字段起别名</strong></p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">100</span>*<span class="number">98</span> <span class="keyword">as</span> 结果</span><br><span class="line"><span class="keyword">select</span> last_name <span class="keyword">as</span> 姓,first_name <span class="keyword">as</span> 名 <span class="keyword">from</span> employees</span><br><span class="line"><span class="number">2</span>、空格</span><br><span class="line"><span class="keyword">select</span> last_name 姓,first_name 名 <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><ul><li>便于理解</li><li>如果要查询字段有重名，使用别名可以区分开来</li><li>如果别名中有特殊符号，建议别名上加双引号。</li></ul><blockquote><p><strong>6、为字段去重</strong></p></blockquote><p>select distinct 字段名 from 表名；</p><p>案列：查询员工表中涉及到的所有部门编号</p><p>语句中需添加 <code>DISTINCT</code></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">DISTINCT</span> department_id <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><blockquote><p><strong>7、+号的作用</strong></p></blockquote><p>+仅仅只有加法运算功能</p><ul><li>select 90+199；两个操作数均为数值型，则做加法运算</li><li>如果有其中一方为字符型，，试图将字符型数值转换成数值型<ul><li>select ‘123’+100; 如果转换成功，则继续做加法运算</li><li>select ‘john’+90 ; 如果转换失败，则将字符型数值转换成0</li><li>select ‘null’+100; 只要其中一方为null，则结果肯定是null</li><li></li></ul></li></ul><blockquote><p><strong>8、contact 函数</strong></p></blockquote><p>起到拼接字符的功能</p><p>案列：查询员工名和姓连接成一个字段，并显示为 姓名</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(last_name,first_name) <span class="keyword">as</span> 姓名 <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><blockquote><p>9、【补充】ifunll函数</p></blockquote><p>判断某字段或表达式是否为unll,如果是返回指定值，否则返回原本值。</p><blockquote><p>10、【补充】isunll函数</p></blockquote><p>判断某字段或表达式是否为unll,如果是返回1，否则返回0。</p><h3 id="条件查询语句（进阶二）"><a href="#条件查询语句（进阶二）" class="headerlink" title="条件查询语句（进阶二）"></a>条件查询语句（进阶二）</h3><p>语法：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">          查询列表</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">          表名</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">          删选条件</span><br></pre></td></tr></table></figure><p>分类：</p><ul><li><p>按条件表达式删选：&gt;  &lt;  !=  &lt;&gt;  &gt;=  &lt;=</p></li><li><p>按逻辑表达式删选：and or not</p><ul><li>&amp;&amp; 和 and  两个条件都为true，结果为true，反之为flase</li><li>|| 和 or      两个条件有一个为true，结果为true，反之为flase</li><li>! 和not        如果链接的条件本身为flase，结果为true，反之为flase</li></ul></li><li><p>模糊查询：like、between、 in、 is null</p></li></ul><blockquote><p><strong>按条件表达式删选</strong></p></blockquote><p>案例1：查询工资&gt;12000的员工的信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> salary &gt;<span class="number">12000</span></span><br></pre></td></tr></table></figure><p>案例2：查询部门编号不等于90号的员工名和部门编号</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">       last_name,</span><br><span class="line">       department_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">       employees</span><br><span class="line">       </span><br><span class="line"><span class="keyword">WHERE</span>  </span><br><span class="line">       department_id&lt;&gt;<span class="number">90</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>按逻辑表达式删选</strong></p></blockquote><p>案例1：工资在1万到2万之间的员工名、工资、奖金信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">salary&gt;=<span class="number">10000</span> <span class="keyword">AND</span> salary&lt;=<span class="number">20000</span></span><br></pre></td></tr></table></figure><p>案例2：查询部门编号不在90到110之间，或者薪水高于15000的员工信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">NOT</span>(department_id&gt;=<span class="number">90</span> <span class="keyword">AND</span> department_id&lt;=<span class="number">110</span>) <span class="keyword">OR</span> salary&gt;<span class="number">15000</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>模糊查询删选</strong></p></blockquote><p>1</p><p>2</p><p>3</p><p>4</p><p><strong>is null</strong>  </p><ul><li>=或者,&gt;不能用于判断null值</li><li>is null或is not null可以</li></ul><p>案例1：查询没有奖金的员工名和奖金率</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure><p>案例2：查询工资为12000的员工信息    使用 <code>&lt;=&gt;</code>  安全等于</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">salary &lt;=&gt; <span class="number">12000</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>is null 仅仅可以判断 null值，可读性较高，建议使用。</p></li><li><p>&lt;=&gt;      既可以判断null值，又可以判断普通数量，可读性较低。</p></li></ul><p>综合案列1:查询没有奖金，且工资小于18000的salary/last_name</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">AND</span> salary &lt; <span class="number">18000</span>;</span><br></pre></td></tr></table></figure><p>综合案例2：查询employees表中，job_id不为 ‘IT’ 或者 工资为12000的员工信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">job_id &lt;&gt; <span class="string">'IT'</span></span><br><span class="line"><span class="keyword">OR</span> salary = <span class="number">12000</span>;</span><br></pre></td></tr></table></figure><p>综合案例3：查看departments表的结构</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">DESC departments</span></span><br></pre></td></tr></table></figure><p>综合案例4： 查看部门中涉及到那些位置编号   （关键是去重）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> location_id <span class="keyword">FROM</span> departments;</span><br></pre></td></tr></table></figure><h3 id="排序查询语句（进阶三）"><a href="#排序查询语句（进阶三）" class="headerlink" title="排序查询语句（进阶三）"></a>排序查询语句（进阶三）</h3><p>语法：select 查询列表 </p><p>​           from 表名 </p><p>​           where 【筛选条件】</p><p>​           oder by 排序列表【asc | desc】</p><p>  特点：</p><ul><li><p>desc 降序，asc升序   不写的话默认升序</p></li><li><p>order by 子句可以支持单个字段，多个字段、表达式、函数、别名</p></li><li><p>order by 子句一般放在查询语句的最后面，limit子句除外。</p></li></ul><p>案例1：查询员工工资，从高到底排序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询部门编号大于等于90的员工信息。按入职时间先后进行排序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">department_id&gt;=<span class="number">90</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> hiredate <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><p>案例3：【按表达式排序】按年薪的高低显示员工的信息和年薪</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*,</span><br><span class="line">salary*<span class="number">12</span>*(<span class="number">1</span>+<span class="built_in">IFNULL</span>(commission_pct,<span class="number">0</span>)) <span class="keyword">AS</span> 年薪</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 年薪 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例4：按姓名的长度显示员工的姓名和工资【按函数排序】</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">LENGTH</span>(last_name) 字节长度,</span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 字节长度 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例5：查询员工信息，先按工资排序升序，再按员工编号排序降序【按多个字段排序】</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">ASC</span>,department_id <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="常见函数学习（进阶四）"><a href="#常见函数学习（进阶四）" class="headerlink" title="常见函数学习（进阶四）"></a>常见函数学习（进阶四）</h3><p>将一组逻辑语句封装在方法体中，对外暴露方法名</p><p>好处1：隐藏实现细节 2、提高代码重用性</p><p>调用：select 函数名(实参列表) 【from 表】</p><p>特点：</p><ul><li>叫什么（函数名）</li><li>干什么的（函数功能）</li></ul><p>分类</p><ul><li>单行函数<ul><li>字符函数、数学函数、日期函数、其他函数、流程控制函数，</li></ul></li><li>分组函数<ul><li>统计函数、聚合函数等</li></ul></li></ul><p>单行函数</p><blockquote><h5 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a><strong>字符函数</strong></h5></blockquote><p>1、length</p><p>获取参数值的字节数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="string">'jhon'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="string">'张三丰hahaha'</span>);</span><br></pre></td></tr></table></figure><p>2、concat 拼接/连接 字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(last_name,<span class="string">'_'</span>,first_name) 姓名 <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>3、upper、lower    大写/小写</p><p>案例：将姓变大写，名变小写,然后拼接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="keyword">UPPER</span>(last_name),<span class="keyword">LOWER</span>(first_name)) 姓名 <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>4、substr/substring 截取字符长度</p><p>注意：截取从1开始</p><ul><li>截取从指定索引处后面的所有字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'占敏捷爱上谢菲'</span>,<span class="number">6</span>) 输出结果;</span><br></pre></td></tr></table></figure><ul><li>截取从指定索引处指定字符长度的字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'占敏捷爱上谢菲hahhahah'</span>,<span class="number">4</span>,<span class="number">2</span>) 输出结果;</span><br></pre></td></tr></table></figure><p>案例1：姓名中首字母大写，其它字母小写，然后用_拼接</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT CONCAT(<span class="name">UPPER</span>(<span class="name">SUBSTR</span>(<span class="name">last_name</span>,<span class="number">1</span>,<span class="number">1</span>)),'_',LOWER(<span class="name">SUBSTR</span>(<span class="name">last_name</span>,<span class="number">2</span>)))FROM employees<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>5、instr</p><p>返回子串第<font color="red">一次</font>出现的索引,如果找不到返回0。</p><p>6、trim</p><p>去前后空格</p><p>7、lpad  左填充</p><p>用指定的字符实现左填充指定长度</p><p>8、rpad 右填充</p><p>用指定的字符实现右填充指定长度</p><p>9、replace 全部替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(<span class="string">'张无忌爱上了周芷若'</span>,<span class="string">'周芷若'</span>,<span class="string">'赵敏'</span>) 输出;</span><br></pre></td></tr></table></figure><blockquote><h5 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a><strong>数学函数</strong></h5></blockquote><p>1、ronud    四舍五入</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ROUND</span>(<span class="number">-1.55</span>);          -2</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ROUND</span>(<span class="number">-1.45</span>);          -1</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ROUND</span>(<span class="number">-1.45678</span>,<span class="number">2</span>);     -1.46    四舍五入，并保留小数点后2位</span><br></pre></td></tr></table></figure><p>2.ceil  向上取整</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEIL</span>(<span class="number">1.02</span>);             2       返回》=该参数的最小整数</span><br></pre></td></tr></table></figure><p>3.floor 向下取整</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">9.99</span>);            9</span><br></pre></td></tr></table></figure><p>4、truncate   截断</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT TRUNCATE(<span class="number">1.2345678</span>,<span class="number">2</span>);  <span class="number">1.23</span></span><br></pre></td></tr></table></figure><p>5、mod 取余</p><p>mod(a,b)：a-a/b*b</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT MOD(<span class="number">10</span>,<span class="number">3</span>);               <span class="number">1</span></span><br><span class="line">SELECT <span class="number">10</span>%<span class="number">3</span>                     <span class="number">1</span></span><br></pre></td></tr></table></figure><p>6、rand 获取随机数，返回0-1之间的小数</p><blockquote><h5 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a><strong>日期函数</strong></h5></blockquote><p>1、now/year/date/month/hour</p><p>返回当前系统日期+时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>();</span><br></pre></td></tr></table></figure><p>2、curdate</p><p>返回当前系统日期，不返回时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURDATE</span>();</span><br></pre></td></tr></table></figure><p>3、curtime</p><p>返回当前系统时间，不返回日期</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURTIME</span>();</span><br></pre></td></tr></table></figure><p>可以获取指定部分。年、月、日、小时、分钟、秒</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="keyword">NOW</span>()) 年;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(<span class="keyword">NOW</span>()) 月;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> MONTHNAME(<span class="keyword">NOW</span>()) 月;           November</span><br></pre></td></tr></table></figure><p>4、str_to_data** 将字符通过指定的格式转换成日期</p><p>案例：</p><p>5、date_format 将日期转换成字符</p><p>案例：查询有奖金的员工名和入职日期（格式：xx年/xx月 xx年）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line"><span class="keyword">DATE_FORMAT</span>(hiredate,<span class="string">'%m月/%d日 %y年'</span>) 入职日期</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> NUL</span><br></pre></td></tr></table></figure><ul><li>相关格式符：</li></ul><img src="https://i.loli.net/2019/11/10/cIP3kDleQzswfan.jpg" width="500"><p>6、datediff、返回两个日期间的天数</p><p>7、monthname、以英文形式返回</p><blockquote><h5 id="其它函数"><a href="#其它函数" class="headerlink" title="其它函数"></a><strong>其它函数</strong></h5></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASES</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">PASSWORD</span>();</span><br></pre></td></tr></table></figure><blockquote><h5 id="流程控制函数"><a href="#流程控制函数" class="headerlink" title="流程控制函数"></a>流程控制函数</h5></blockquote><p>用于实现一些流程控制的</p><p>1、if函数 ：if else 的效果</p><p>if（条件表达式，表达式1，表达式2）:如果条件表达式成立，返回表达式1，否则返回表达式2；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">last_name,</span><br><span class="line">commission_pct,<span class="keyword">IF</span>(commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span>,<span class="string">'没奖金，呵呵'</span>,<span class="string">'有奖金，嘻嘻'</span>) 备注；</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br></pre></td></tr></table></figure><p>2、case函数</p><p><strong>case 使用语法一：</strong></p><p>语法如下：</p><p>case 变量或表达式或字段</p><p>when 常量1 then 值1</p><p>when 常量2 then 值2</p><p>……</p><p>else  值n</p><p>end</p><p>案例1：  查询员工工资，部门号=30.显示工资为1.1倍；部门号为40，显示工资为1.2倍；部门号=50，显示工资为1.3倍；其它的部门显示的工资为原来工资。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">salary 原始工资,</span><br><span class="line">department_id,</span><br><span class="line"><span class="keyword">CASE</span> department_id</span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">30</span> <span class="keyword">THEN</span> salary*<span class="number">1.1</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">40</span> <span class="keyword">THEN</span> salary*<span class="number">1.2</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">50</span> <span class="keyword">THEN</span> salary*<span class="number">1.3</span></span><br><span class="line"><span class="keyword">ELSE</span> salary</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 新工资</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p><strong>case 使用方法二：</strong></p><p>语法如下：</p><p>case</p><p>when 条件1 then 值1</p><p>when 条件2 then 值2</p><p>……</p><p>else 值n</p><p>end</p><p>案例：查询员工的工资情况，如果大于20000，显示A级别；如果工资大于15000，显示A级别，如果工资大于10000，显示C级别，否则显示D级别</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">20000</span> <span class="keyword">THEN</span> <span class="string">'A'</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">15000</span> <span class="keyword">THEN</span> <span class="string">'B'</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">10000</span> <span class="keyword">THEN</span> <span class="string">'c'</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'D'</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 工资级别</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例 1：显示系统时间（注意：日期+时间）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>();</span><br></pre></td></tr></table></figure><p>综合案例 2：查询员工号，姓名，工资，以及工资提高20%后的结果（new salary）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">employee_id,last_name,salary,salary*<span class="number">1.2</span> <span class="keyword">AS</span> <span class="string">'new aslary'</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例 3：将员工的姓名按首字母排序，并写出姓名长度</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name 姓名,<span class="built_in">LENGTH</span>(last_name) 姓名长度,<span class="built_in">SUBSTR</span>(last_name,<span class="number">1</span>,<span class="number">1</span>) 首字母</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 首字母;</span><br></pre></td></tr></table></figure><p>综合案例 4：做一个查询，产生下面的结果</p><p><salary_name> earns <salary> monthly but wants &lt;salary*3&gt;</salary></salary_name></p><p>Dream salary </p><p>King earns 24000 monthly but wants 72000</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(last_name,<span class="string">'earns'</span>,salary,<span class="string">'monthly but wants'</span>,salary*<span class="number">3</span>) <span class="keyword">AS</span> <span class="string">"Dream alary"</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">salary=<span class="number">24000</span>;</span><br></pre></td></tr></table></figure><p>综合案例 5：使用case-when  按照下面的条件：</p><p>job                        qrade</p><p>AD_PRES                 A</p><p>ST_MAN                  B</p><p>IT_PROG                  C</p><p>SA_PRE                    D</p><p>IT_CLEAR                 E</p><p>产生下面的结果</p><p>last_name     job_id    Grade    </p><p>King    AD_PRES   A</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id <span class="keyword">AS</span> job,</span><br><span class="line"><span class="keyword">CASE</span> job_id</span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'AD_PRES'</span> <span class="keyword">THEN</span> <span class="string">'A'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'ST_MAN'</span> <span class="keyword">THEN</span><span class="string">'B'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'IT_PROG'</span> <span class="keyword">THEN</span> <span class="string">'C'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'SA_PRE'</span> <span class="keyword">THEN</span> <span class="string">'D'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'IT_CLEAR'</span> <span class="keyword">THEN</span> <span class="string">'E'</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> Grade</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = <span class="string">'AD_PRES'</span></span><br></pre></td></tr></table></figure><p>分组函数</p><p>分组函数其功能：用作统计使用，又称为聚合函数或统计函数或组函数</p><p>分类包括：sum求和、avg平均值、max最大值、min最小值、count计算个数</p><p>语法：select max（字段）from 表名；</p><ul><li>简单使用方法：</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="built_in">SUM</span>(salary) 求和,</span><br><span class="line"><span class="built_in">AVG</span>(salary) 平均值,</span><br><span class="line"><span class="built_in">MIN</span>(salary) 最小值,</span><br><span class="line"><span class="built_in">MAX</span>(salary) 最大值,</span><br><span class="line"><span class="built_in">COUNT</span>(salary) 计数值 </span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><ul><li><p>参数支持哪些类型</p><p>sum、avg 一般处理数值型</p></li></ul><p>​       max、min、count  可以处理任何类型</p><ul><li><p>是否忽略null</p><p>sum、avg、max、min、count 都忽略null值。</p></li><li><p>可以和distinct搭配</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="keyword">DISTINCT</span> salary),<span class="built_in">SUM</span>(salary) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure></li><li><p>count 函数详细介绍</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(字段) <span class="keyword">FROM</span> employees;   统计该字段非空值的个数</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(*) <span class="keyword">FROM</span> employees;     统计结果集的行数</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>一般推荐<code>COUNT(*)</code> 来进行统计使</p></li></ul><ul><li>和分组函数一同查询的字段有限制，要求是group by 后的字段</li></ul><p>综合案例1：查询公司员工工资的最大值，最小值，平均值及总和</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="built_in">MAX</span>(salary) 工资最大值,</span><br><span class="line"><span class="built_in">MIN</span>(salary) 工资最小值,</span><br><span class="line"><span class="built_in">AVG</span>(salary) 工资平均值,</span><br><span class="line"><span class="built_in">SUM</span>(salary) 工资总和 </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例2：查询员工中的最大入职时间和最小入职时间的相差天数（DIFFRENCR）</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT DATEDIFF(<span class="name">MAX</span>(<span class="name">hiredate</span>),MIN(<span class="name">hiredate</span>)) DIFFRENCE </span><br><span class="line">FROM employees<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>综合案例3：查询部门编号为90的员工个数</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">department_id=<span class="number">90</span>;</span><br></pre></td></tr></table></figure><h3 id="分组查询语句（进阶五）"><a href="#分组查询语句（进阶五）" class="headerlink" title="分组查询语句（进阶五）"></a>分组查询语句（进阶五）</h3><p>语法：</p><p>select 分组函数，列名（要求出现在group by 的后面）</p><p>from 表名</p><p>【where 筛选条件】</p><p>group by 分组的列名</p><p>【order by子句】</p><p>注意：</p><ul><li><p>查询列表必须特殊，要求是分组函数和group by后出现的字段</p></li><li><p>group by 支持单个字段查询，也支持多个字段查询（多字段之间用用逗号隔开，没有先后顺序之分）</p></li><li><p>也可插入排序语句，放在整个分组查询语句的最后</p></li></ul><p>分组分类</p><p>1.分组前查询          原始表                               group by 之前</p><p>2.分组后查询          分组后的结果集                group by 之后</p><p>能用分组前删选的，尽量用分组前查询。</p><blockquote><p> 简单分组查询</p></blockquote><p>案例1：查询每个工种的最高工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MAX(salary),job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">GROUP BY job_id;</span><br></pre></td></tr></table></figure><p>案例2：查询每个位置上的部门个数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">COUNT(*),location_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line">GROUP BY location_id;</span><br></pre></td></tr></table></figure><blockquote><p>添加删选条件的分组查询</p></blockquote><p>1、添加分组前删选</p><p>案例1：查询邮箱中包含a字符的，每个部门的平均工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">email <span class="keyword">LIKE</span> <span class="string">'%a%'</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br></pre></td></tr></table></figure><p>案例2：查询有奖金的  每个领导手下员工的最高工工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MAX(salary),manager_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">WHERE</span><br><span class="line">commission_pct IS <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">GROUP BY manager_id;</span><br></pre></td></tr></table></figure><p>2、添加分组后删选</p><p>案例1：查询哪个部门的员工个数大于2</p><p>思路：先查询每个部门的员工个数—再查询大于2个员工的部门</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">COUNT<span class="comment">(*),department_id</span></span><br><span class="line"><span class="comment">FROM</span></span><br><span class="line"><span class="comment">employees</span></span><br><span class="line"><span class="comment">GROUP BY department_id</span></span><br><span class="line"><span class="comment">HAVING COUNT(*)</span>&gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询每个工种有奖金的员工的最高工资大于12000的工种编号和最高工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MAX(salary),job_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">commission_pct IS <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">GROUP BY job_id</span><br><span class="line">HAVING MAX(salary)&gt;12000;</span><br></pre></td></tr></table></figure><p>案例3：查询领导编号大于102的每个领导手下最低工资大于5000的领导编号</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MIN(salary),manager_id  </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">manager_id&gt;102</span><br><span class="line">GROUP BY manager_id</span><br><span class="line">HAVING MIN(salary)&gt;5000;</span><br></pre></td></tr></table></figure><p>2.1、按表达式或函数分组</p><p>案例4：按员工姓名长度分组，查询每一组员工的个数，删选员工个数大于5的有哪些</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">COUNT<span class="comment">(*),LENGTH(last_name) 姓名长度</span></span><br><span class="line"><span class="comment">FROM</span></span><br><span class="line"><span class="comment">employees</span></span><br><span class="line"><span class="comment">GROUP BY LENGTH(last_name)</span></span><br><span class="line"><span class="comment">HAVING COUNT(*)</span>&gt;<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>2.2、按多个字段分组</p><p>查询每个部门每个工种的员工的平均工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">AVG(salary),department_id,job_id</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line">GROUP BY department_id,job_id;</span><br></pre></td></tr></table></figure><p>2.3、添加排序</p><p>查询每个部门每个工种的员工的平均工资，并按照工资从高到底排序</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">AVG(salary),department_id,job_id</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line">GROUP BY department_id,job_id</span><br><span class="line">ORDER BY AVG(salary) DESC;</span><br></pre></td></tr></table></figure><p>综合案例1：查询员工最高工资和最低工资的差距（DIFFERENCE）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">MAX</span>(salary)-<span class="built_in">MIN</span>(salary) DIFFRENCE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例2：查询各个管理者手下员工的最低工资，其中最低工资不能低于6000，没有管理者的员工不计算在内</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MIN(salary),manager_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">WHERE manager_id IS <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">GROUP BY manager_id</span><br><span class="line">HAVING MIN(salary)&gt;=6000;</span><br></pre></td></tr></table></figure><p>案例3：查询所有部门的编号，员工数量和工资平均值，并按平均工资降序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">department_id 部门编号,<span class="built_in">COUNT</span>(*) 员工数量,<span class="built_in">ROUND</span>(<span class="built_in">AVG</span>(salary),<span class="number">2</span> )平均工资</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 平均工资 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例4：选择具有各个job_id的员工人数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">COUNT(*),job_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">GROUP BY job_id</span><br></pre></td></tr></table></figure><h3 id="连接查询语句（进阶六）"><a href="#连接查询语句（进阶六）" class="headerlink" title="连接查询语句（进阶六）"></a>连接查询语句（进阶六）</h3><p>当查询中涉及到多个表的字段，需要使用多表连接</p><p>select 字段1，字段2</p><p>from 表1，表2，……..</p><p><font color="red">笛卡尔乘积现象</font>：表1 有m行，表2有n行，结果=m*n行,发生这个原因是由于没有有效的链接条件，要想避免该现象，只要添加有效的链接条件即可。</p><p>连接查询分类：</p><ul><li><p>按年代分类：</p><p>sql92 连接查询   </p><ul><li>等值</li><li>非等值</li><li>自连接</li></ul><p>sql99 连接查询   （<font color="red">推荐使用</font>）</p><ul><li><p>内连接</p><ul><li>等值</li><li>非等值</li><li>自连接</li></ul></li><li><p>外连接</p><ul><li>左外</li><li>右外</li><li>全外（MySQL不支持）</li></ul></li><li><p>交叉连接</p></li></ul></li></ul><h4 id="SQL92语法"><a href="#SQL92语法" class="headerlink" title="SQL92语法"></a>SQL92语法</h4><p>1、等值连接</p><p>语法：</p><p>select 查询列表</p><p>from 表1 别名，表2 别名</p><p>where  表1.key=表2.key   （等值连接条件）</p><p>【AND 删选条件】</p><p>【groub by 分组字段】</p><p>【having 分组后的删选】</p><p>【order by 排序】</p><p>注意事项：</p><ul><li><p>多表的顺序没有要求</p></li><li><p>一般需要为表起别名</p></li><li><p>可以搭配前面介绍的所有查询语句</p></li><li><p>n表连接，至少需要n-1个连接条件</p></li><li><p>多表等值连接的结果为多表的交集部分</p></li></ul><p>案例1：查询女神名对应的男神名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span>,boyname <span class="keyword">FROM</span> boys,beauty</span><br><span class="line"><span class="keyword">WHERE</span> beauty.boyfriend_id=boys.id ;</span><br></pre></td></tr></table></figure><p>案例2：查询员工名和对应的部门名</p><p>1.2、为表起别名，提高语句简洁度/区分多个重名的字段。</p><ul><li>如果为表起别名，则查询的字段就不能使用原来的表名</li></ul><p>案例1：查询员工名，工种号、工种名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.last_name,d.job_id,s.job_title</span><br><span class="line"><span class="keyword">FROM</span> employees d,jobs s</span><br><span class="line"><span class="keyword">WHERE</span> d.job_id=s.job_id;</span><br></pre></td></tr></table></figure><p>1.3、可以加删选</p><p>案例1：查询有奖金的员工名、部门名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">e</span>.last_name,d.department_name,commission_pct</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.department_id=d.department_id</span><br><span class="line"><span class="keyword">AND</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询城市名中第二个字符为O的对应的部门名和城市名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,city</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations f</span><br><span class="line"><span class="keyword">WHERE</span> d.location_id=f.location_id</span><br><span class="line"><span class="keyword">AND</span> city <span class="keyword">LIKE</span> <span class="string">'_o%'</span>;</span><br></pre></td></tr></table></figure><p>1.4、加分组</p><p>案例1：查询每个城市的部门个数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*),city</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations l</span><br><span class="line">WHERE d.<span class="attribute">location_id</span>=l.`location_id`</span><br><span class="line">GROUP BY city;</span><br></pre></td></tr></table></figure><p>案例2：查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary),f.manager_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees d,departments f</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="symbol">`department_id`</span>=f.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name,f.manager_id;</span><br></pre></td></tr></table></figure><p>1.5、加排序</p><p>案例1：查询每个工种的工种名和员工个数，并且按员工个数降序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> job_title,<span class="built_in">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> employees d,jobs f</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="symbol">`job_id`</span>=f.<span class="symbol">`job_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_title</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(*) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>1.6 实现三表连接</p><p>案例1：查询员工名 部门名 所在城市</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,city</span><br><span class="line"><span class="keyword">FROM</span> employees d,departments m,locations s</span><br><span class="line"><span class="keyword">WHERE</span> d.department_id=m.department_id</span><br><span class="line"><span class="keyword">AND</span> m.<span class="symbol">`location_id`</span>=s.<span class="symbol">`location_id`</span></span><br></pre></td></tr></table></figure><p>2、非等值连接</p><p>语法：</p><p>select 查询列表</p><p>from 表1 别名，表2 别名</p><p>where  非等值的连接条件</p><p>【AND 删选条件】</p><p>【groub by 分组字段】</p><p>【having 分组后的删选】</p><p>【order by 排序】</p><p>案例1：查询出员工 的工资和工资级别</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,job_grades f</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="keyword">BETWEEN</span> f.lowest_sal <span class="keyword">AND</span> f.highest_sal;</span><br></pre></td></tr></table></figure><p>3.自连接</p><p>语法：</p><p>select 查询列表</p><p>from 表 别名1，表 别名2</p><p>where  非等值的连接条件</p><p>【AND 删选条件】</p><p>【groub by 分组字段】</p><p>【having 分组后的删选】</p><p>【order by 排序】</p><p>综合案例1：显示员工表的最大工资，工资平均值</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary),<span class="built_in">AVG</span>(salary) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>综合案例2：查询员工表的employee_id,job_id,last_name,按department_id降序，salary升序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,job_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_id <span class="keyword">DESC</span>,salary <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><p>综合案例3：查询员工表的job_id中包含a和e 的，并且a 在 e前面</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id </span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="keyword">LIKE</span> <span class="string">'%a%e%'</span>;</span><br></pre></td></tr></table></figure><p>综合案例4：</p><p>已知表student,里面有id（学号），name ， gradeID（年级编号）</p><p>已知表grade，里面有id（年级编号） ,name（年级名）</p><p>已知表result，里面有id ，score，studentNo（学号）</p><p>要求查询姓名、年级名、成绩</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT <span class="selector-tag">a</span><span class="selector-class">.name</span> <span class="selector-tag">b</span><span class="selector-class">.name</span> score</span><br><span class="line">FROM student <span class="selector-tag">a</span>,grade <span class="selector-tag">b</span>,result c</span><br><span class="line">WHERE <span class="selector-tag">a</span>.id=c.studentNo</span><br><span class="line">AND <span class="selector-tag">a</span>.gradeID=<span class="selector-tag">b</span>.id</span><br></pre></td></tr></table></figure><p>综合案例5：显示所有员工的姓名，部门号和部门名称</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">USE myemployees;</span><br><span class="line"><span class="keyword">SELECT</span> last_name,d.department_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span>;</span><br></pre></td></tr></table></figure><p>综合案例6：查询90号部门员工的job_id和90号部门的location_id；</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> job_id,location_id</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> <span class="built_in">e</span>.department_id=<span class="number">90</span>;</span><br></pre></td></tr></table></figure><p>综合案例7：选择所有奖金员工的last_name，department_name,location_id,city</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,s.location_id,city</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d,locations s</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> d.<span class="symbol">`location_id`</span>=s.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">AND</span> <span class="built_in">e</span>.commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p>综合案例8：选择city在Toroto工作的员工的last_name,department_id,department_name</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,<span class="built_in">e</span>.department_id,department_name,f.city</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d,locations f</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> d.<span class="symbol">`location_id`</span>=f.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">AND</span> f.<span class="symbol">`city`</span>=<span class="string">'Toronto'</span></span><br></pre></td></tr></table></figure><p>综合案例9：查询每个工种、每个部门的部门名、工种名和最低工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,job_title,<span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> departments d,jobs j,employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="symbol">`department_id`</span>=<span class="built_in">e</span>.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> j.job_id<span class="symbol">`=e.`</span>job_id<span class="symbol">`</span></span><br><span class="line"><span class="symbol">group by department_name,job_title</span></span><br></pre></td></tr></table></figure><p>综合案例10：查询每个国家下的部门个数大于2的国家编号 第77课时</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT country_id,COUNT(*)</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations s</span><br><span class="line">WHERE d.<span class="attribute">location_id</span>=s.location_id</span><br><span class="line">GROUP BY country_id</span><br><span class="line">HAVING COUNT(*)&gt;2</span><br></pre></td></tr></table></figure><h4 id="SQL99语法"><a href="#SQL99语法" class="headerlink" title="SQL99语法"></a>SQL99语法</h4><p>语法：</p><p>select 查询列表</p><p>from 表1 别名 </p><p>【连接类型】jion   表2 别名 </p><p>on 连接条件</p><p>【where 筛选条件】</p><p>【group by 分组】</p><p>【having 筛选条件】</p><p>【order by 排序条件】</p><p>分类</p><p>内连接：inner</p><p>外连接</p><ul><li>左外：left  【outer】</li><li>右外:   right  【outer】</li><li>全外： full  【outer】</li></ul><p>交叉连接</p><p>1.内连接</p><p>语法：</p><p>select 查询列表</p><p>from 表1 别名 </p><p>inner join   表2 别名 </p><p>on 连接条件；</p><p>分类：</p><ul><li>等值</li><li>非等值</li><li>自连接</li></ul><p>特点：</p><ul><li>可添加排序、分组、筛选</li><li>筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读</li><li>inner 可以省略</li><li>inner join连接和sql92语法中的等值连接效果是一样的，查询表的交集部分</li></ul><p>1.1、等值连接</p><p>案例1：查询员工名，部门名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments b</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=b.<span class="symbol">`department_id`</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询名字中包含e的员工名和工种名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs b</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`job_id`</span>=b.<span class="symbol">`job_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%e%'</span>;</span><br></pre></td></tr></table></figure><p>案例3：查询部门个数&gt;3的城市名和部门个数</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> city,<span class="built_in">COUNT</span>(*) 部门个数</span><br><span class="line"><span class="keyword">FROM</span> locations l</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> l.<span class="symbol">`location_id`</span>=d.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(*)&gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>案例4：查询哪个部门的部门员工数》3的部门名和员工个数，并按个数降序排列。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,<span class="built_in">COUNT</span>(*) 员工数</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">ON</span> d.<span class="symbol">`department_id`</span>=<span class="built_in">e</span>.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name</span><br><span class="line"><span class="keyword">HAVING</span> 员工数 &gt;=<span class="number">3</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 员工数 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案列5：查询员工名、部门名、工种名，并按部门名降序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j <span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`job_id`</span>=j.<span class="symbol">`job_id`</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_name <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><p>1.2、非等值连接</p><p>案例1：查询员工的工资级别</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">JOIN</span> job_grades j</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.salary <span class="keyword">BETWEEN</span> j.lowest_sal <span class="keyword">AND</span> j.highest_sal;</span><br></pre></td></tr></table></figure><p>案例2：查询工资级别的个数&gt;20的个数，并且按工资级别降序排序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(*) 工资级别个数,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">JOIN</span> job_grades j</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.salary <span class="keyword">BETWEEN</span> j.lowest_sal <span class="keyword">AND</span> j.highest_sal</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> grade_level</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(*)&gt;<span class="number">20</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(*) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>1.3、自连接</p><p>案例1：查询姓名中包含K的员工的名字、上级名字</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">e</span>.last_name 员工名,d.last_name 上级名</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees d</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.manager_id=d.employee_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.last_name <span class="keyword">LIKE</span> <span class="string">'%k%'</span>;</span><br></pre></td></tr></table></figure><p>1.4、左（右）外连接</p><p>应用场景：用于查询一个表中有，另一个表中没有的记录</p><p>特点：</p><p>1、外连接的查询结果为主表中的所有记录</p><ul><li>如果从表中有和它匹配的，则显示匹配的值</li><li>如果从表中没有和他匹配的，则显示null</li><li>外连接查询结果=内连接结果+主表中有而从表中没有的记录</li></ul><p>2、左外连接 left join 左边的是主表/右外连接 right join 右边是主表</p><p>3、左外和右外如果交换两表的顺序，可以实现同样的效果</p><p>案例1：查询没有男朋友的女神名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.name,d.*</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> boys d</span><br><span class="line"><span class="keyword">ON</span> b.<span class="symbol">`boyfriend_id`</span>=d.<span class="symbol">`id`</span></span><br></pre></td></tr></table></figure><p>案例2：查询哪个部门没有员工</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.*,<span class="built_in">e</span>.employee_id</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">ON</span> d.department_id = <span class="built_in">e</span>.department_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.employee_id <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure><p>1.5 全外连接</p><p>全外连接=内连接的结果+表1有表2没有的+表2有表1没有的</p><p>不支持</p><p>1.6、交叉连接</p><p>SQL99 语句图形示意：</p><img src="https://i.loli.net/2019/11/13/A3UkPWzL9adbMyE.jpg" width="600"><img src="https://i.loli.net/2019/11/13/dFU9eMA6VEIJRKQ.jpg" width="600"><p>综合案例1：查询编号&gt;3的女神的男朋友信息，如果有则列出详细，如果没有就用null填充</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.id,b.name,bo.*</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> boys bo</span><br><span class="line"><span class="keyword">ON</span> b.<span class="symbol">`boyfriend_id`</span>=bo.<span class="symbol">`id`</span></span><br><span class="line"><span class="keyword">WHERE</span> b.id &gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>综合案例2：查询哪个城市没有部门？</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">左外连接</span><br><span class="line"><span class="keyword">SELECT</span> city,s.*</span><br><span class="line"><span class="keyword">FROM</span> departments s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> locations l</span><br><span class="line"><span class="keyword">ON</span> s.<span class="symbol">`location_id`</span>=l.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> s.department_id <span class="keyword">IS</span> <span class="literal">NULL</span>；</span><br><span class="line"></span><br><span class="line">右外连接</span><br><span class="line"><span class="keyword">SELECT</span> city,s.*</span><br><span class="line"><span class="keyword">FROM</span> locations l</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> departments s</span><br><span class="line"><span class="keyword">ON</span> s.<span class="symbol">`location_id`</span>=l.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> s.department_id <span class="keyword">IS</span> <span class="literal">NULL</span>；</span><br></pre></td></tr></table></figure><p>综合案例3：</p><p>查询部门名为SAL或IT的员工信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.department_name,<span class="built_in">e</span>.*</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">ON</span> d.<span class="symbol">`department_id`</span>=<span class="built_in">e</span>.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> d.department_name <span class="keyword">IN</span>(<span class="string">'SAL'</span>,<span class="string">'IT'</span>)</span><br></pre></td></tr></table></figure><h3 id="子查询语句（进阶七）"><a href="#子查询语句（进阶七）" class="headerlink" title="子查询语句（进阶七）"></a>子查询语句（进阶七）</h3><p>出现在其它语句中的select语句，称为子查询或内查询</p><p>外部的查询语句，称为主查询或外查询</p><p>分类：</p><p>按出现的位置分类：</p><ul><li>select后面   仅仅支持标量子查询</li><li>from后面   支持表子查询</li><li><font color="red">where或having</font>后面   <font color="red">标量子查询、列子查询</font>&gt;、行子查询</li><li>exists后面  表查询</li></ul><p>按结果集的行列数不同：</p><ul><li>标量子查询（结果集只有一行一列）</li><li>列子查询（结果集只有一列多行）</li><li>行子查询（结果集只有一行多列）</li><li>表子查询（结果集一般为多行多列）</li></ul><p>1、where和having后面</p><ul><li>标量子查询（单行子查询）<ul><li>一般搭配单行操作符使用 </li></ul></li><li>列子查询（多行子查询）<ul><li>一般搭配多单行操作符使用  in、any/some、all</li></ul></li><li>行子查询（多列多行）</li></ul><p>特点：</p><ul><li>子查询放在小括号内</li><li>子查询一般放在条件的右侧</li><li>标量子查询，一般搭配单行操作符使用</li><li>子查询的执行优先与主查询执行</li></ul><p><strong>1.1where后面的标量子查询</strong></p><p>案例1查询谁的工资比Albel的工资高</p><p>思路：1.查询Albel的工资——2.查询员工的信息，满足salary&gt;1的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary&gt;(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name = <span class="string">"Abel"</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例2：返回job_id与141号员工相同，salary比143号员工多的员工姓名，job_id 和工资</p><p>思路：1.查询 与141号员工相同的job_id——2.查询143号员工的工资——3查询员工姓名，job_id 和工资，满足1结果且工资大于2结果</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id=<span class="number">141</span></span><br><span class="line"></span><br><span class="line">)<span class="keyword">AND</span> salary&gt;(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id=<span class="number">143</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例三：返回公司工资最少的员工的last_name,job_id和salary<br>$$</p><p>$$</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例4：查询最低工资大于50号部门最低工资的部门id和其最低工资</p><p>思路 :1、查询50号部门的最低工资——2、查询所有部门的最低工资——3、在2结果的基础上筛选 满足最低工资大于1结果</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT MIN(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line">GROUP BY department_id</span><br><span class="line">HAVING MIN(salary)&gt;(</span><br><span class="line"></span><br><span class="line">SELECT MIN(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line">WHERE <span class="attribute">department_id</span>=50</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>1.2where后面的列子查询（多行子查询）</strong></p><p>in/not in    (等于列表中的任意一个值)</p><p><del>any|some   （和子查询返回的某一个值比较）</del>   推荐用 <font color="red">a&gt;min()</font>代替a&gt;any() </p><p><del>all  （和子查询返回的所有值比较）</del>  推荐用 <font color="red">a&gt;max()</font>代替a&gt;any() </p><p>案例1：返回location_id 是1400或者1700的部门中所有员工的姓名</p><p>思路：1：查询location_id是1400或1700的部门编号—2：查询满足1结果的员工姓名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IN</span>(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="keyword">IN</span>(<span class="number">1400</span>,<span class="number">1700</span>)</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例2：返回其他部门中比job_id为’IT_PROG’部门任一工资低的员工的：工号、姓名、job_id,以及salary.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary &lt;<span class="keyword">ANY</span>(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id=<span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">)<span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span></span><br></pre></td></tr></table></figure><p>案例3：返回其他部门中比job_id为’IT_PROG’部门所有工资低的员工的：工号、姓名、job_id,以及salary.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary &lt;(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">min</span>(msalary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id=<span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">)<span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span></span><br></pre></td></tr></table></figure><p><strong>1.3where后面的行子查询</strong>（结果集一行多列或多行多列）</p><p>案例：查询员工编号最小且工资最高的员工信息</p><p>方法1：之前的语法</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(employee_id)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">)</span><br><span class="line"><span class="keyword">AND</span> salary=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>1.4 select后面</strong></p><p>案例1：查询每个部门的员工个数</p><p><font color="red">90~95级  重学</font>&gt;</p><p><strong>综合案列讲解：</strong></p><p>1.查询工资最低的员工信息：last_name  salary</p><p>思路1：查询最低工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(salary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure><p>思路2：查询满足1的 last_name salary</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> last_name,salary</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> salary=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(salary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>2.查询平均工资最低的部门信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> department_id=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>3.查询平均工工资最低的部门信息和该部门的平均工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.*,ag</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span>(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ag</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">)ag_dep</span><br><span class="line"><span class="keyword">ON</span> d.<span class="symbol">`department_id`</span>=ag_dep.department_id</span><br></pre></td></tr></table></figure><p>4.查询平均工资最高的job信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> jobs</span><br><span class="line"><span class="keyword">WHERE</span> job_id=(</span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>5.查询平均工资高于公司平均工资的部门有哪些？</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.department_name </span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> (</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) dvg,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">AVG</span>(salary)&gt;(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) <span class="keyword">FROM</span> employees)</span><br><span class="line"></span><br><span class="line">) dvg_dep</span><br><span class="line"><span class="keyword">ON</span> d.department_id=dvg_dep.department_id</span><br></pre></td></tr></table></figure><p>6.各个部门中最高工资中最低的那个部门的最低工资是多少</p><p>7.查询平均工资最高的部门的manager的详细信息：last_name,depatment_id,email,salary</p><p>6.查询出公司中所以有manager的详细信息</p><p>所有manager的员工编号</p><h3 id="分页查询语句（进阶八）"><a href="#分页查询语句（进阶八）" class="headerlink" title="分页查询语句（进阶八）"></a>分页查询语句（进阶八）</h3><p>应用场景：当我们要显示的数据一页显示不全，我们就要分页提交sql请求。</p><p>语法：</p><p>select 查询列表</p><p>from 表</p><p>【join type】join 表2</p><p>on 连接条件</p><p>where 删选条件</p><p>group by 分组字段</p><p>having 分组后的删选</p><p>order by 排序的字段</p><p>limit offset, size;</p><p>其中：</p><ul><li>offset：要显示条目的起始索引，从0开始,。从0开始offset可省略 </li><li>size：要显示的条目个数;</li></ul><p>特点：</p><ul><li><p>limit语句在查询语句的最后，在执行顺序中也是最后一步。</p></li><li><p>公式</p><p>要显示的页数 page, 每页的条目数size</p><p>select 查询列表</p><p>from 表</p><p>limit （page-1）*size，size</p></li><li><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">size</span>=10</span><br><span class="line"></span><br><span class="line">page</span><br><span class="line">1        0</span><br><span class="line">2       10</span><br><span class="line">3       20</span><br></pre></td></tr></table></figure></li></ul><p>案例1：查询前五条员工信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询第1条—第25条</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">10</span>,<span class="number">15</span>;</span><br></pre></td></tr></table></figure><p>案例3：有奖金的员工信息，并且工资较高的前10名显示出来</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> <span class="keyword">LIMIT</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p><strong>综合案例讲解：</strong></p><p>已知表 stuinfo</p><p>id 学号</p><p>name 姓名</p><p>email 邮箱</p><p>grade id 年级编号</p><p>sex 性别  男  女</p><p>age 年龄</p><p>已知表 grade </p><p>id 年级编号</p><p>gradeName 年级名称</p><p>答题1：查询所有学员的邮箱用户名（注：邮箱中@前面的字符）</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select  substr(<span class="section">email</span>,<span class="number">1</span>,instr(<span class="section">email</span>,‘@‘)<span class="number">-1</span>)  用户名</span><br><span class="line"></span><br><span class="line">from stuinfo</span><br></pre></td></tr></table></figure><p>注：</p><p> instr(field, str) 函数，第一个参数 field 是字段，第二个参数 str 是要查询的串，返回串 str 的位置，没找到就是0 </p><p>答题2：查询男生和女生的个数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select count（*）个数，sex</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> stuinfo </span><br><span class="line"></span><br><span class="line">group by  sex;</span><br></pre></td></tr></table></figure><p>答题3：查询年龄大于18岁的所有学生的姓名和年级名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.name,g.gradeName</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> stuinfo s</span><br><span class="line"></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> grade g <span class="keyword">on</span> s.grade <span class="keyword">id</span>=g.id</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> age&gt;<span class="number">18</span>;</span><br></pre></td></tr></table></figure><p>答题4：查询哪个年级的学生最小年龄&gt;20岁</p><p>思路1：查询每个年级学生的最小年龄数  2:在一的基础上删选</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select min(age),grade id</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> stuinfo</span><br><span class="line"></span><br><span class="line">group by grade id</span><br><span class="line"></span><br><span class="line">having min(age)&gt;20;</span><br></pre></td></tr></table></figure><p>答题5：试说出查询语句中涉及到的所有关键字，及执行先后顺序</p><p>select  查询的列表                        7</p><p>from 表 1                                       1</p><p>链接类型 join 表2                          2</p><p>on 连接条件                                   3</p><p>where 删选条件                            4</p><p>group by 分组条件                       5</p><p>having  分组后的删选条件           6</p><p>order by 排序条件                        8</p><p>limit 偏移条目数                           9</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="MySQL" scheme="https://www.iamzmj.top/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.iamzmj.top/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://www.iamzmj.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记一：MySQL8.0安装及启动</title>
    <link href="https://www.iamzmj.top/posts/ca03e1e5.html"/>
    <id>https://www.iamzmj.top/posts/ca03e1e5.html</id>
    <published>2019-11-06T08:33:37.000Z</published>
    <updated>2019-11-19T18:01:20.020Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="MySQL介绍"><a href="#MySQL介绍" class="headerlink" title="MySQL介绍"></a>MySQL介绍</h1><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>其特点在于：开源、免费、成本低；性能高、移随性好；体积小、便于安装。</p><p>目前MySQL已推出8.0版本。</p><img src="https://i.loli.net/2019/11/08/3gFNO8EjiYBSHMz.jpg" width="500" height="高度" align="center"><h1 id="数据库概念"><a href="#数据库概念" class="headerlink" title="数据库概念"></a>数据库概念</h1><p><strong>1、数据库好处</strong></p><p>可以持久化数据到本地</p><p>结构化查询</p><p><strong>2、数据库常见概念</strong></p><p><strong>DB</strong> (Data Base)，存储数据的仓库</p><p><strong>DBMS</strong> (Data Base Management System)  数据库管理系统，DB是通过DBMS创建和操作的容器。</p><p><strong>SQL</strong>（Strucure Query Language）结构化查询语言，专门用来同数据库通信的语言。</p><p>其特点：</p><ul><li>DBMS都支持SQL</li><li>简单易学</li><li>是一种强有力的语言。</li></ul><p><strong>3、MySQL存储数据的特点</strong></p><p>1、将数据放到表中，再将表放到数据库中。</p><p>2、一个数据库中可以有多个表，每个表都有一个名字，每张表具有唯一的表名，用来标识自己。</p><p>3、表具有一些特性，这些特性定义了数据在表中如何存储。</p><h1 id="Win10下安装MySQL8-0"><a href="#Win10下安装MySQL8-0" class="headerlink" title="Win10下安装MySQL8.0"></a>Win10下安装MySQL8.0</h1><h2 id="下载MySQL8-0"><a href="#下载MySQL8-0" class="headerlink" title="下载MySQL8.0"></a>下载<a href="https://dev.mysql.com/downloads/mysql/" rel="external nofollow noopener noreferrer" target="_blank">MySQL8.0</a></h2><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>Windows下安装数据库，将下载的的压缩包解压， 文件位于：C:\mysql-8.0.18-winx64</p><p>然后去配置环境变量，点击电脑-&gt;属性-&gt;高级系统配置-&gt;环境变量；先对系统变量进行设置 </p><img src="https://i.loli.net/2019/11/07/uLMYeVqdUDAOnJz.png" width="500" height="高度" align="center"><img src="https://i.loli.net/2019/11/07/A8uXO3FvPstGHe4.jpg" width="500" height="高度" align="center"><img src="https://i.loli.net/2019/11/07/tyXTJFYHqWxw8QK.jpg" width="500" height="高度" align="center"><h2 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h2><p>打开mysql-8.0.16-winx64文件，在当前目录下，新建一个名为my.ini的文件，然后打开该文件，将下列代码加入到该文件中； </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=C:\mysql-<span class="number">8.0</span>.<span class="number">18</span>-winx64</span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=C:\mysql-<span class="number">8.0</span>.<span class="number">18</span>-winx64\Database</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><h2 id="命令行登录"><a href="#命令行登录" class="headerlink" title="命令行登录"></a>命令行登录</h2><p>进入C:\mysql-8.0.18-winx64\bin 目录,以管理员身份打开CMD窗口，</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="symbol">\W</span>INDOWS<span class="symbol">\s</span>ystem32&gt;CD C:<span class="symbol">\m</span>ysql-8.0.18-winx64<span class="symbol">\b</span>in</span><br></pre></td></tr></table></figure><p> <strong>MySQL服务安装</strong>， 执行mysqld install命令当出现Service successfully installed时表示mysql服务安装完成 ，</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="comment">--install</span></span><br></pre></td></tr></table></figure><p>注意：mysqld –install [服务名]</p><p>后面的服务名可以不写，默认的名字为 mysql。当然，如果你的电脑上需要安装多个MySQL服务，就可以用不同的名字区分了，比如 mysql5 和 mysql8。</p><p><img src="https://i.loli.net/2019/11/20/7PKQDUm4EwN3yYx.jpg" alt></p><p> <strong>MySQL服初始化</strong>， 在MySQL安装目录的 bin 目录下执行命令： </p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">mysqld</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">initialize</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">console</span></span><br></pre></td></tr></table></figure><p> 执行完成后，会打印 root 用户的初始默认密码，比如： </p><img src="https://i.loli.net/2019/11/20/yV9DU6riTIexkAR.jpg" width="800"><p>注意！执行输出结果里面有一段： [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: Ng* jbnKGd2!其中root@localhost:后面的“Ng*jbnKGd2!”就是初始密码（不含首位空格）。在没有更改密码前，需要记住这个密码，后续登录需要用到。要是手贱，关快了，或者没记住，那也没事，删掉初始化的 datadir 目录，再执行一遍初始化命令，又会重新生成的。当然，也可以使用安全工具，强制改密码，用什么方法，自己随意。</p><p><strong>启动MySQL的服务</strong>，通过命令net start mysql启动</p><p>进入D:\Program Files\mysql-8.0.11-winx64\bin路径下，执行mysql -u root -p命令，然后输入之前保存的密码，我这里是Ng*jbnKGd2_! </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、<span class="selector-tag">cd</span> <span class="selector-tag">C</span>:\<span class="selector-tag">mysql-8</span><span class="selector-class">.0</span><span class="selector-class">.18-winx64</span>\<span class="selector-tag">bin</span></span><br><span class="line">2、<span class="selector-tag">mysql</span> <span class="selector-tag">-u</span> <span class="selector-tag">root</span> <span class="selector-tag">-p</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/07/FnWYrTy1NzDwbJa.jpg" width="800" height="高度" align="center"><p>至此数据库安装成功</p><h2 id="修改初始登陆密码："><a href="#修改初始登陆密码：" class="headerlink" title="修改初始登陆密码："></a>修改初始登陆密码：</h2><p> 修改用户密码，在MySQL中执行命令： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">'qq886991985'</span>;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/20/iQKk5Prn4j2DFMq.jpg" width="800" height="高度" align="center"><h1 id="Navicat-Premium-12-登录MySQL"><a href="#Navicat-Premium-12-登录MySQL" class="headerlink" title="Navicat Premium 12  登录MySQL"></a>Navicat Premium 12  登录MySQL</h1><p><a href="https://www.lanzous.com/i77rnkj" rel="external nofollow noopener noreferrer" target="_blank">Navicat Premium 12+注册机</a>  简单连接配置即可连接使用，使用界面如下：</p><img src="https://i.loli.net/2019/11/08/8gROWhnuQKBALmx.jpg" width="800" height="高度" align="center"><h1 id="服务的启动和停止"><a href="#服务的启动和停止" class="headerlink" title="服务的启动和停止"></a>服务的启动和停止</h1><p>方式一：net start 服务名 / net stop 服务名</p><p>方式二:   计算机—右击—管理—服务</p><h1 id="登录和退出"><a href="#登录和退出" class="headerlink" title="登录和退出"></a>登录和退出</h1><p>登录：MySQL  【-h 主机名 -p 端口号】-u 用户名 -p密码</p><p>退出：exit 或者 ctrl +C</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="MySQL" scheme="https://www.iamzmj.top/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.iamzmj.top/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://www.iamzmj.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Win10中使用Hyper-V安装Ubuntu18.04并SSH远程</title>
    <link href="https://www.iamzmj.top/posts/b9259de4.html"/>
    <id>https://www.iamzmj.top/posts/b9259de4.html</id>
    <published>2019-11-02T03:33:34.000Z</published>
    <updated>2019-11-02T11:38:18.938Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="安装Hyper-V"><a href="#安装Hyper-V" class="headerlink" title="安装Hyper-V"></a>安装Hyper-V</h1><p> 首先安装Hyper-V：打开Win10控制面板–程序–启用或关闭Windows功能–选择Hyper-V勾选上（全部）–然后点击确定进行安装 。</p><p><img src="https://i.loli.net/2019/11/02/Ggtk2h9zC3poIji.jpg" alt></p><p>等待安装完毕后重启电脑，安装即可生效。</p><h1 id="快速创建虚拟机"><a href="#快速创建虚拟机" class="headerlink" title="快速创建虚拟机"></a>快速创建虚拟机</h1><p>提前下载<a href="https://cn.ubuntu.com/download" rel="external nofollow noopener noreferrer" target="_blank">Ubuntu</a>操作系统镜像文件。</p><p><img src="https://i.loli.net/2019/11/02/pRTw6GH5A8sovND.jpg" alt></p><p>最后点击创建虚拟机，进入以下界面并点击链接</p><p><img src="https://i.loli.net/2019/11/02/JANil3rG9ytdEBe.jpg" alt></p><p>点击启动</p><p><img src="https://i.loli.net/2019/11/02/C9aGLPl2YcyA4D7.jpg" alt></p><p> 进入到下面页面后选择Install Ubuntu，进行Ubuntu系统安装： </p><p><img src="https://i.loli.net/2019/11/02/V8U9ZTWKj2QFzPE.jpg" alt></p><p> 进入安装界面后，选择中文（简体），然后继续： </p><p><img src="https://i.loli.net/2019/11/02/nuJg8HGwj9TvB7f.jpg" alt></p><p> 键盘布局选择默认就好，然后继续： </p><p><img src="https://i.loli.net/2019/11/02/5DZeVpkKNjmXHFU.jpg" alt></p><p> 选择正常安装，其他选项暂不勾选，避免安装速度过慢，然后继续： </p><p><img src="https://i.loli.net/2019/11/02/4QjlsgUrEqNVLpw.jpg" alt></p><p> 由于是在虚拟机里面，选择第一项就好，然后选择现在安装开始安装系统： </p><p><img src="https://i.loli.net/2019/11/02/Kj7fbEpMJGtVHwN.jpg" alt></p><p> 点击中国所在位置，选择时区，然后继续： </p><p><img src="https://i.loli.net/2019/11/02/dZDloiX4myhtwaz.jpg" alt></p><p> 设置用户信息及登陆信息，然后继续： </p><p><img src="https://i.loli.net/2019/11/02/1HIbW92X6RTJQNF.jpg" alt></p><p> 等待安装完成： </p><p><img src="https://i.loli.net/2019/11/02/3HxIF2ksclAguqo.jpg" alt></p><p>进入主界面，打开终端安装net-tools(可以通过ifconfig查询主机IP)</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> net-tools</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/02/fgvsS1Ao2tTRPEH.jpg" alt></p><p> 查看 ubuntu 的 ssh 服务是否启动</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e <span class="string">| grp ssh</span></span><br></pre></td></tr></table></figure><p>出现以下提示，表示Openssh-Server已安装。</p><p> <img src="https://i.loli.net/2019/11/02/yepGJoCUx9rcnm4.jpg" alt></p><p>若未出现以上提示则需要安装openssh-server,方ssh软件远程操作</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install openssh-server</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/02/C65p8kvtBhiy7KF.jpg" alt></p><p>设置防火墙允许22端口被访问</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow <span class="number">22</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/02/NEe9rnc3uXQOFK5.jpg" alt></p><p>查询主机IP</p><p><img src="https://i.loli.net/2019/11/02/LqXJWBjyU2raPSK.jpg" alt></p><p>Win+R 调用命令提示符CMD    Ping 虚拟机主机地址+端口 并回车</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet <span class="number">172.31</span><span class="number">.84</span><span class="number">.77</span> <span class="number">22</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/02/bQiHn96ju3g7ftG.jpg" alt></p><p>出现如下提示表示 地址端口可以ping通。</p><p><img src="https://i.loli.net/2019/11/02/rOwPhbyjFknK71I.jpg" alt></p><h1 id="安装远程登陆软件"><a href="#安装远程登陆软件" class="headerlink" title="安装远程登陆软件"></a>安装远程登陆软件</h1><p>推荐<a href="https://www.lanzous.com/i74t49i" rel="external nofollow noopener noreferrer" target="_blank">MobaXterm</a></p><p>安装完毕后，进行相关登录设置</p><p><img src="https://i.loli.net/2019/11/02/7RkIzr3iCKWgsFa.jpg" alt></p><p>至此SSH远程登陆成功</p><p><img src="https://i.loli.net/2019/11/02/FlqJXmhZAIGv7Sk.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Ubuntu" scheme="https://www.iamzmj.top/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="https://www.iamzmj.top/tags/Ubuntu/"/>
    
      <category term="Hyper-V" scheme="https://www.iamzmj.top/tags/Hyper-V/"/>
    
  </entry>
  
  <entry>
    <title>读书计划2019</title>
    <link href="https://www.iamzmj.top/posts/10f46d57.html"/>
    <id>https://www.iamzmj.top/posts/10f46d57.html</id>
    <published>2019-10-28T17:14:20.000Z</published>
    <updated>2019-12-19T07:38:07.631Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="读书是一剂良药"><a href="#读书是一剂良药" class="headerlink" title="读书是一剂良药"></a>读书是一剂良药</h1><p>读书读来读去，读的都不是未来，而是过去。人为何要钟情于阅读？</p><p>有些人，经历一些生活的打击，会怨恨，愤慨，绝望。而还有一些人，经历一些生活的打击，反而学会了宽恕，淡忘，释然。后者多半内心平静。从前有人说，现在静不下来读书了。另一人说，搞错了，不是静下来读书，是读书让你静下来。读书到底有没有用，我想说某种程度上没有用，但它能让人平静。平静这种心情，</p><p>在这样躁动的年代，书是一种精神药物。摆在书架上，它就像是一颗颗药丸，各有不同的功效，治各种不同的精神创伤。</p><h1 id="读书计划2019"><a href="#读书计划2019" class="headerlink" title="读书计划2019"></a>读书计划2019</h1><h2 id="职场管理类"><a href="#职场管理类" class="headerlink" title="职场管理类"></a>职场管理类</h2><p>小强升职记 - 邹鑫</p><p><a href="https://www.lanzous.com/i59re0f" rel="external nofollow noopener noreferrer" target="_blank">搞定 - [美]戴维·艾伦</a></p><p><a href="https://www.lanzous.com/i59r96b" rel="external nofollow noopener noreferrer" target="_blank">专业主义 - 大前研一</a></p><p><a href="https://www.lanzous.com/i59r8cb" rel="external nofollow noopener noreferrer" target="_blank">非暴力沟通 - [美] 马歇尔·卢森堡</a></p><p>原则 - [美]瑞·达利欧</p><p><a href="https://www.lanzous.com/i5apseh" rel="external nofollow noopener noreferrer" target="_blank">每周工作4小时 - 蒂莫西·费里斯</a></p><p><a href="https://www.lanzous.com/i59r8hg" rel="external nofollow noopener noreferrer" target="_blank">高效演讲-胡维</a></p><p><a href="https://www.lanzous.com/i5lopxi" rel="external nofollow noopener noreferrer" target="_blank">把时间当作朋友-李笑来</a></p><h2 id="经济类"><a href="#经济类" class="headerlink" title="经济类"></a>经济类</h2><p>穷爸爸富爸爸 - [美] 罗伯特·清崎</p><p>小狗钱钱 -  [德] 博多·舍费尔</p><p><a href="https://www.lanzous.com/i59rh8b" rel="external nofollow noopener noreferrer" target="_blank">魔鬼经济学 - [美] 史蒂芬·列维特</a></p><h2 id="互联网类"><a href="#互联网类" class="headerlink" title="互联网类"></a>互联网类</h2><p><a href="https://www.lanzous.com/i59r94j" rel="external nofollow noopener noreferrer" target="_blank">人人都是产品经理 - 苏杰</a></p><p><a href="https://www.lanzous.com/i59r8la" rel="external nofollow noopener noreferrer" target="_blank">人人都是产品经理2.0 - 苏杰</a></p><p><a href="https://www.lanzous.com/i59r8nc" rel="external nofollow noopener noreferrer" target="_blank">新零售的未来 -  翁怡诺</a></p><p><a href="https://www.lanzous.com/i59rhmf" rel="external nofollow noopener noreferrer" target="_blank"><del>重新定义公司 - [美]埃里克·施密特</del></a></p><p><del>参与感_小米口碑营销内部手册</del></p><p><a href="https://www.lanzous.com/i59r8uj" rel="external nofollow noopener noreferrer" target="_blank">从零开始做运营进阶篇-张亮</a></p><h2 id="生活技能类"><a href="#生活技能类" class="headerlink" title="生活技能类"></a>生活技能类</h2><p>斯坦福完美睡眠法 - 西野精致 </p><p>如何阅读一本书 - [美]莫提默·J.艾德勒 </p><p><del>美国纽约摄影学院摄影教材（上）</del></p><p><del>美国纽约摄影学院摄影教材（下）</del></p><h2 id="社会人文"><a href="#社会人文" class="headerlink" title="社会人文"></a>社会人文</h2><p>激荡十年 - 吴晓波</p><p>激荡三十年 - 吴晓波</p><p>大败局 - 吴晓波</p><p>今日简史 - 尤瓦尔·赫拉利</p><p>未来简史 - 尤瓦尔·赫拉利</p><p><del>事实 - 汉斯·罗斯林</del></p><p>乌合之众 - (法)古斯塔夫.勒庞</p><h2 id="小说"><a href="#小说" class="headerlink" title="小说"></a>小说</h2><p><a href="https://pan.baidu.com/s/1tUC24-jO3La9li14rqjzCQ" rel="external nofollow noopener noreferrer" target="_blank">三体1-地球往事 - 刘慈欣</a></p><p><a href="https://pan.baidu.com/s/1yFtm57PTpcXjdaif1lwixQ" rel="external nofollow noopener noreferrer" target="_blank">三体2-黑暗森林 - 刘慈欣</a></p><p><a href="https://pan.baidu.com/s/1BVT1TTzr-faV3aGSHmSORA" rel="external nofollow noopener noreferrer" target="_blank">三体3-死神永生 -刘慈欣</a></p><p>流浪地球 - 刘慈欣</p><p><a href="https://pan.baidu.com/s/1ttgruo4vOQnRXNdF4oXNCg" rel="external nofollow noopener noreferrer" target="_blank">长安十二时辰</a></p><p><a href="https://pan.baidu.com/s/1WVUff19oXtLAQAlXCUrc5Q" rel="external nofollow noopener noreferrer" target="_blank">古董局中局1-  武则天明堂玉佛头失窃案</a></p><p><a href="https://pan.baidu.com/s/1GhMLPfkgunWrsa34nPjThg" rel="external nofollow noopener noreferrer" target="_blank">古董局中局2-  清明上河图</a></p><p><a href="https://pan.baidu.com/s/1g3nNPeabZfLyOHX0HVgNkA" rel="external nofollow noopener noreferrer" target="_blank">古董局中局3-   掠宝清单</a></p><p><a href="https://pan.baidu.com/s/1j4Y-RU2ZIDPYishEqeG7Kw" rel="external nofollow noopener noreferrer" target="_blank">古董局中局4-  大结局</a></p><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><p>空王冠 玫瑰战争与都铎王朝的崛起</p><p>易中天 品三国</p><p>易中天 风流南宋</p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/to%20do%20list.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="书单" scheme="https://www.iamzmj.top/categories/booklist/"/>
    
    
      <category term="书单" scheme="https://www.iamzmj.top/tags/booklist/"/>
    
      <category term="计划" scheme="https://www.iamzmj.top/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>5G移动通信技术简介(二)</title>
    <link href="https://www.iamzmj.top/posts/bc8dfb1d.html"/>
    <id>https://www.iamzmj.top/posts/bc8dfb1d.html</id>
    <published>2019-10-25T10:57:15.000Z</published>
    <updated>2019-10-25T11:27:50.331Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>第五代移动通信技术（英语：5th generation mobile networks或5th generation wireless systems、5th-Generation，简称5G或5G技术）是最新一代蜂窝移动通信技术，也是即4G（LTE-A、WiMax）、3G（UMTS、LTE）和2G（GSM）系统之后的延伸。5G的性能目标是高数据速率、减少延迟、节省能源、降低成本、提高系统容量和大规模设备连接。Release-15中的5G规范的第一阶段是为了适应早期的商业部署。Release-16的第二阶段将于2020年4月完成。</p><p>下面简单对5G移动通信技术作基本介绍：</p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%871.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%872.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%873.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%874.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%875.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%876.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%877.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%878.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%879.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8710.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8711.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8712.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8713.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8714.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8715.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8716.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8717.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8718.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8719.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8720.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8721.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8722.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8723.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8724.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8725.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8726.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8727.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8728.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8729.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8730.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8731.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8732.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8733.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8734.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8735.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8736.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8737.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8738.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8739.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8740.JPG" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E5%B9%BB%E7%81%AF%E7%89%8741.JPG" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="移动通信" scheme="https://www.iamzmj.top/categories/%E7%A7%BB%E5%8A%A8%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="5G" scheme="https://www.iamzmj.top/tags/5G/"/>
    
      <category term="移动通信" scheme="https://www.iamzmj.top/tags/%E7%A7%BB%E5%8A%A8%E9%80%9A%E4%BF%A1/"/>
    
      <category term="通信技术" scheme="https://www.iamzmj.top/tags/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>5G移动通信技术简介(一)</title>
    <link href="https://www.iamzmj.top/posts/57e87839.html"/>
    <id>https://www.iamzmj.top/posts/57e87839.html</id>
    <published>2019-10-24T07:12:45.000Z</published>
    <updated>2019-10-25T11:13:00.680Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>第五代移动通信技术（英语：5th generation mobile networks或5th generation wireless systems、5th-Generation，简称5G或5G技术）是最新一代蜂窝移动通信技术，也是即4G（LTE-A、WiMax）、3G（UMTS、LTE）和2G（GSM）系统之后的延伸。5G的性能目标是高数据速率、减少延迟、节省能源、降低成本、提高系统容量和大规模设备连接。Release-15中的5G规范的第一阶段是为了适应早期的商业部署。Release-16的第二阶段将于2020年4月完成。</p><p>下面简单对5G移动通信技术作基本介绍：</p><p><img src="https://i.loli.net/2019/10/24/HWzIyNjg8svPt4A.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0002.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0003.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/U6lKLhSnu5fOYaF.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/WB2EKqASCI94Djo.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0006.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/S4GzcL5yjFlbhTO.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/OjoBVciehTLuS3Y.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/dD8PUQXuH3EFBqy.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/Y4QAP7ICsDB1UNR.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/LId2lRgu5hqN9fD.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/qkNo2TEp7BYHdVC.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/wQCGMxRNIK8f4L7.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/jNm4Wwi2LpUgkxn.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/pXtuGK7MfekPL6c.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/dibl9hecr2PRWJu.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/27DxrmgIsjP4Zpe.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/KecCo3v6GhIuyqb.jpg" alt></p><p><img src="https://i.loli.net/2019/10/24/9eAvgknMFuVSRYa.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0020.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0021.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0022.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0023.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0024.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0025.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0026.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0027.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0028.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0029.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0030.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0031.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0032.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0033.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0034.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0035.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0036.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0037.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0038.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0039.jpg" alt></p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/0040.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="移动通信" scheme="https://www.iamzmj.top/categories/%E7%A7%BB%E5%8A%A8%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="5G" scheme="https://www.iamzmj.top/tags/5G/"/>
    
      <category term="移动通信" scheme="https://www.iamzmj.top/tags/%E7%A7%BB%E5%8A%A8%E9%80%9A%E4%BF%A1/"/>
    
      <category term="通信技术" scheme="https://www.iamzmj.top/tags/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之对象存储OSS</title>
    <link href="https://www.iamzmj.top/posts/411cd2b5.html"/>
    <id>https://www.iamzmj.top/posts/411cd2b5.html</id>
    <published>2019-10-07T12:35:53.000Z</published>
    <updated>2019-10-11T04:29:17.337Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="什么是OSS"><a href="#什么是OSS" class="headerlink" title="什么是OSS"></a>什么是OSS</h1><p>OSS对象存储服务，是阿里云提供的海量、安全、低成本、高可靠性的云存储服务。提供与平台无关的RESTful API接。基于盘古架构提供99.99999999999%的服务持久性。相比较物理存储它的优势在于：海量、安全、高可靠性、低成本。按量收费，无需担心存储容量。</p><h1 id="OSS主要功能"><a href="#OSS主要功能" class="headerlink" title="OSS主要功能"></a>OSS主要功能</h1><p>1、任何时间、任何地点、任何平台上对数据进行上传和下载</p><p>2、通过API或者WEB页面方式管理海量数据</p><p>3、弹性扩展，海量存储空间，随时增加，弹性增长</p><p>4、大规模，支持同一时间内高并发，大流量的读写访问。</p><p>5、图片处理，OSS上的图片，支持缩略、裁剪、水印、压缩和格式转换</p><p>6、按使用付费，按照存储、流量、请求次数付费，节省成本。</p><h1 id="OSS特点"><a href="#OSS特点" class="headerlink" title="OSS特点"></a>OSS特点</h1><p><strong>1、稳定</strong></p><p>服务设计可用性不低于99.9%</p><p>规模自动扩展，不影响对外服务</p><p>数据三重备份，持久性99.9999999999%</p><p><strong>2、低成本</strong></p><p>与传统硬件存储系统高投入相比，OSS使用成本低很多。</p><p>通过内网地址访问，免流量费，无需运维投入。</p><p><strong>3、安全</strong></p><p>结合云盾防DDoS系统</p><p>多种安全认证机制</p><p>提供访问日志有助于追查非法访问</p><p><strong>4、大规模、高性能</strong></p><p>存储容量无限扩展</p><p>处理能力弹性增长</p><p>多线BGP，各运营商访问流畅</p><h1 id="OSS应用场景"><a href="#OSS应用场景" class="headerlink" title="OSS应用场景"></a>OSS应用场景</h1><p>适合作为应用程序的持久化存储</p><p>应用场景1：<strong>数据处理</strong>（IMT）剪裁、旋转、水印、缩放/<strong>媒体转码</strong>（MT）音视频格式转换</p><p>应用场景2：<strong>海量存储</strong>   网络摄像机直存等</p><p>应用场景3:   <strong>动静态资源分离</strong>    </p><ul><li>动态资源：数据库记录</li><li>静态资源：利用BGP网络实现网页中图片、附件、音视频资源的超低延时传输。</li></ul><h1 id="OSS访问域名和数据中心"><a href="#OSS访问域名和数据中心" class="headerlink" title="OSS访问域名和数据中心"></a>OSS访问域名和数据中心</h1><p><strong>Bucket和数据中心的关系：</strong></p><p>Bucket是地域内作用的资源，可按照费用的单价，请求来源分布，网络延迟等方面的综合考虑。Bucket一旦创建完成，不可以修改所属的数据中心。</p><p>OSS支持Bucket级别的数据中心设置，不支持Object设置数据中心。Bucket所在的数据中心确定后，该Bucket下的所有Object将一直存放在该数据中心中。</p><p>访问OSS的数据请求，都是针对Bucket的三级域名[Bucket名字+.+EndPoint(根据Bucket所在地域的不同，内外网访问方式的不同会有所区别)</p><p><strong>以华北2节点位列：</strong></p><p>外网地址为：oss-cn-beijing.aliyuncs.com</p><p>内网地址为：oss-cn-beijing-internal.aliyuncs.com</p><p><strong>Bucket内网访问</strong></p><p>内网访问OSS需要满足以下两个件.</p><ul><li><p>条件1:只有ECS实例可以通过Bucket内网地址进行访问</p></li><li><p>条件2：ECS实例和Bucket在同一个地域，如不在同一个地域，需使用Bucket外网域名访问</p></li></ul><p><strong>Object访问地址构成规则</strong></p><p>1、bucket的权限为<font color="red">公共读</font>或<font color="red">公共读写</font>，Object的访问规则如下：</p><p>2、http://&lt;bucket名字&gt;.<endpoint>/&lt;object名字&gt;</endpoint></p><p>3、可以直接将URL连接写入HTML中访问Object</p><h1 id="使用Bucket"><a href="#使用Bucket" class="headerlink" title="使用Bucket"></a>使用Bucket</h1><p>1、Bucket是OSS上的命名空间，也是计费、权限控制、日志记录功能的管理实体。</p><p>2、Bucket名称在整个OSS服务中具有全局唯一性，存储OSS上的每一个Object必须都包含在Bucket中。</p><p>3、一个应用，例如图片分享网站，可以对应一个或多个Bucket中。</p><p>4、一个用户在同一地域下最多可以创建<font color="red">30</font>个Bucket,一旦创建成功，其名称、所处地域、存储类型不能修改。每个Bucket中存放的Object没有限制，存储容量没有限制。</p><p>其命名规则：</p><ul><li><p>只能包括小写字母，数字和短横线（-）</p></li><li><p>必须以小写字母或者数字开头和结尾。</p></li><li><p>长度必须3-63字节之间。</p></li></ul><h1 id="Object操作"><a href="#Object操作" class="headerlink" title="Object操作"></a>Object操作</h1><p>1、Object是OSS存储数据的基本单元，也被称为OSS文件。</p><p>2、Object由元信息，用户数据和文件名组成，对象由<font color="red">存储空间内部唯一</font>的KEY来识别。</p><p>3、根据不同的上传方式，object的大小限制是不一样的，分片上传最大支持48.8T的对象大小，其它的上传方式最大支持5GB。</p><p>4、Object在管理控制台上展现的形式为文件或文件夹，OSS服务没有文件夹的概念，所有文件都是由</p><p>Object来存储，文件夹本质上是创建一个size为“0”以“/”结尾的Object,方便在OSS控制台上管理Object。</p><p>命名规则：</p><ul><li><p>使用UTF8编码</p></li><li><p>长度必须在1-1023字节之间</p></li><li><p>不能以“/”或“\”字符开头</p></li><li><p>区分大小写</p></li></ul><p><strong>获取文件访问地址</strong></p><p>非私有：http://&lt;bucket名字&gt;.<endpoint>/&lt;object名字&gt;</endpoint></p><p>私有：http://&lt;bucket名字&gt;.<endpoint>/&lt;object名字&gt;&lt;?签名字符串&gt;</endpoint></p><p>删除文件</p><p>可单个删除/批量删除/自动删除</p><p>碎片管理</p><p>分片上传，超过一定容量的文件需要使用分片上传模式时，将Object切成若干个的Part,这些Part称为碎片。</p><h1 id="自定义域名绑定"><a href="#自定义域名绑定" class="headerlink" title="自定义域名绑定"></a>自定义域名绑定</h1><p>使用场景：网页静态内容存储在OSS Bucket中时</p><p><strong>域名绑定说明：</strong></p><p>OSS域名绑定（CNAME）功能目前只支持OSS三级域名访问方式进行绑定。既OSS配置方式为bucket_name.endpoint。</p><p>OSS未绑定域名，通过浏览器访问Object的URL，则为强制下载模式。</p><p>绑定的域名需要提供工信部备案号，域名持有者身份证等有效资料。经由阿里云审批通过后可以使用。</p><p>每一个Bucket可以绑定20个域名。</p><p><strong>绑定自定义域名前的访问方式：</strong></p><p>http://&lt;bucket名字&gt;.<endpoint>/&lt;object名字&gt;</endpoint></p><p><strong>绑定自定义域名后的访问方式：</strong></p><p>http://自定义域名/Object名字</p><h1 id="防盗链设置"><a href="#防盗链设置" class="headerlink" title="防盗链设置"></a>防盗链设置</h1><p>试用场景：为减少存储于OSS的数据被他人盗链而产生额外的费用。</p><p>OSS是按照使用量收费的服务，为减少OSS的数据被其它人盗链而产生额外的费用。OSS支持基于HTTP Header中字段referer的防盗链方法。</p><p>每个referer白名单使用换行符风格，支持通配符（*，？）</p><p><strong>白名单为空时：</strong></p><ul><li>不会检查referer字段是否为空</li></ul><p><strong>白名单不为空：</strong></p><ul><li><p>设置不允许referer字段为空的规则：只有referer属于白名单的请求被允许，其它请求（包括referer为空的请求）会被拒绝。</p></li><li><p>设置了允许referer字段为空的规则；则referer为空的请求和符合白名单的请求会被允许，其它请求都会被拒绝。如果使用浏览器直接浏览，需要设置referer字段为空。</p></li></ul><h1 id="静态网站托管"><a href="#静态网站托管" class="headerlink" title="静态网站托管"></a>静态网站托管</h1><ul><li>OSS支持静态网站托管。通过OSS控制台将自己的存储空间配置成静态网站的托管模式。支持索引和404默认页面，仅支持当前Bucket下的html格式的文件；为空则不启用静态网站托管。</li><li>静态网站托管网址：<a href="http://osstest.acper.net/" rel="external nofollow noopener noreferrer" target="_blank">http://osstest.acper.net/</a></li></ul><h1 id="OSS图片处理"><a href="#OSS图片处理" class="headerlink" title="OSS图片处理"></a>OSS图片处理</h1><p>图片服务（IMG）是阿里云OSS对外提供海量、安全、低成本、高可靠性的图片处理服务。</p><ul><li>调用简单：通过调用阿里云提供的RESTfUL接口调用，不受时间、地点、设备的限制。随OSS服务一并开通，无需单独开通。</li></ul><p><strong>1、图片服务提供如下功能：</strong></p><ul><li><p>图片缩放、剪裁、旋转</p></li><li><p>图片添加图片、文字、混合水印</p></li><li><p>图片格式转换</p></li><li><p>自定义图片处理样式</p></li><li><p>通关管道顺序调用多种图片处理能力</p></li><li><p>获取图片信息</p></li></ul><p><strong>2、图片服务规则：</strong></p><ul><li>通过URL的形式进行服务。</li></ul><p><a href="http://Bucket" rel="external nofollow noopener noreferrer" target="_blank">http://Bucket</a>.<endpoint>/object?x-oss-process=image/action.parame_value</endpoint></p><p>​    Bucket:用户的IMG频道</p><p>​    endpoint：用户的Bucket所在数据中心的访问域名。</p><p>​    object:在IMG中，用户操作图片的基本数据单元是Object。既OSS对应的Object,单个Object允许的最大大小是20MB.</p><p>​     action:用户对图片做的操作。</p><p>​      parame:用户对图片做的操作所对应的参数。</p><p><strong>3、URL方式访问</strong>：</p><p> &lt;文件URL&gt;?x-oss-process=style<stylename></stylename></p><p>例如：<a href="http://osstest.acper.net/image.jpg?x-oss-process=style/imgtest1" rel="external nofollow noopener noreferrer" target="_blank">http://osstest.acper.net/image.jpg?x-oss-process=style/imgtest1</a></p><p> <strong>4、分隔符方式访问</strong>：</p><p>&lt;文件URL&gt;&lt;分隔符&gt;<stylename></stylename></p><p>例如：<a href="http://osstest.acper.net/image.jpg@!imgtest1" rel="external nofollow noopener noreferrer" target="_blank">http://osstest.acper.net/image.jpg@!imgtest1</a></p><h1 id="OSS安全控制"><a href="#OSS安全控制" class="headerlink" title="OSS安全控制"></a>OSS安全控制</h1><h2 id="安全功能介绍"><a href="#安全功能介绍" class="headerlink" title="安全功能介绍"></a>安全功能介绍</h2><p>基于盘古分布式架构建设。</p><p><img src="https://i.loli.net/2019/10/11/GDsft9XNAvowcLg.jpg" alt></p><h2 id="安全控制"><a href="#安全控制" class="headerlink" title="安全控制"></a>安全控制</h2><p>OSS提供Bucket object级别的权限访问控制。</p><p>权限包括：</p><ul><li>公共读写——任何人可以对bucket中的Object读写、操作</li><li>公共读写、私有读写——只有创建者或被授权者可以对Bucket中的Object进行读写操作，任何人可以对Object进行读操作。</li><li>私有读写——只有创建者或被授权者可以对Bucket中的Object进行读写操作，其它人未经许可无法访问。</li><li>默认权限——Bucket是什么权限，Object就是什么权限。</li></ul><h2 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h2><p>OSS是按量收费的服务，OSS基于HTTP Header中的字段referer的防盗链方法。</p><h2 id="服务器端加密存储"><a href="#服务器端加密存储" class="headerlink" title="服务器端加密存储"></a>服务器端加密存储</h2><p>OSS支持在服务器端对用户上传的数据进行加密编码。数据上传时，OSS对收到的数据进行加密编码并保存。数据下载时，OSS自动对保存的加密数据进行解密并把原始数据返回给用户。并在返回的HTTP请求Header中，声明该数据进行了服务器端加密。</p><p>支持加密的操作包括：</p><p>Put Object:简单上传</p><p>Copy Object:复制Object</p><p>Initiate Multipart Upload:分片上传</p><h2 id="客户端加密SDK"><a href="#客户端加密SDK" class="headerlink" title="客户端加密SDK"></a>客户端加密SDK</h2><p>1、使用阿里云KMS托管用户主密钥，上传对象时指定KMS用户主密钥ID。</p><p>2、用户自主管理密钥，自主生成并保管加密密钥，当用户本地客户端加密时，由用户自主上传加密密钥</p><p>至本地加密客户端。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="阿里云" scheme="https://www.iamzmj.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="https://www.iamzmj.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="OSS" scheme="https://www.iamzmj.top/tags/OSS/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之虚拟私有云VPC</title>
    <link href="https://www.iamzmj.top/posts/fa1159eb.html"/>
    <id>https://www.iamzmj.top/posts/fa1159eb.html</id>
    <published>2019-09-30T14:07:58.000Z</published>
    <updated>2019-10-04T03:33:45.794Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p><img src="https://i.loli.net/2019/09/14/Z2PhoYi3sHEfqJ1.png" alt></p><h1 id="VPC概念介绍"><a href="#VPC概念介绍" class="headerlink" title="VPC概念介绍"></a>VPC概念介绍</h1><h2 id="1、什么是虚拟专用网络VPC"><a href="#1、什么是虚拟专用网络VPC" class="headerlink" title="1、什么是虚拟专用网络VPC"></a>1、什么是虚拟专用网络VPC</h2><p>问题1？系统上云后，是否可以向管理传统数据中心一样进行管理？</p><p>问题2？已经有了一个数据中心，后续的扩容以及新系统的建设想建设在阿里云上，如何处理云上系统及现有系统之间的管理？</p><p>基于上述2个问题，阿里云VPC应运而生。</p><h2 id="2、虚拟专用网络VPC的特点"><a href="#2、虚拟专用网络VPC的特点" class="headerlink" title="2、虚拟专用网络VPC的特点"></a>2、虚拟专用网络VPC的特点</h2><p>1、VPC VLAN级别的隔离，彻底阻断VPC之间的网络通信。</p><p>2、实现网络地址的自定义，我的地盘我做主。</p><p>3、专线/VPN接入，实现传统架构的平滑上云。</p><h2 id="3、VPC产品介绍"><a href="#3、VPC产品介绍" class="headerlink" title="3、VPC产品介绍"></a>3、VPC产品介绍</h2><p>专有网络是自己完全掌控的网络，例如选择IP地址范围、配置路由表、网关等，可以在自定义的专有网络中使用阿里云相关产品。</p><p>专有网络支持连接到其它专有网络或本地网络，形成一个按需定制的网络环境。实现应用的平滑迁移上云和对数据中心的扩展。</p><p><font color="red">专有网络VPC是基于阿里云构建的一个隔离的网络环境，专有网络之间逻辑上彻底隔离</font>。其优势主要为：安全隔离、软件定义网络、访问控制、丰富的网络连接控制、</p><h1 id="VPC功能特点"><a href="#VPC功能特点" class="headerlink" title="VPC功能特点"></a>VPC功能特点</h1><p><strong>特点1：安全隔离</strong></p><ul><li><p>使用隧道技术实现传统VLAN相同的隔离效果。</p></li><li><p>实现了不同云服务器间的二层网络隔离。（网卡MAC信息不进入物理网络）因此也实现了不同专有网络之间的二层网络隔离。</p></li><li><p>专有网络内的ECS使用安全组防火墙进行三层网络访问控制。</p></li></ul><p><strong>解决的问题</strong></p><ul><li>专有网络之间的彻底隔离。</li><li>专有网络内，网卡级别的隔离。</li></ul><p><strong>特点2：访问控制</strong></p><ul><li>灵活的访问控制规则。</li><li>满足政务、金融的安全隔离规范。</li></ul><p><strong>特点3：软件自定义网络</strong></p><ul><li>按需配置网络，软件定义网络。</li><li>管理操作实时生效。</li></ul><p><strong>特点4：丰富的网络连接方式</strong></p><ul><li>支持专线连接</li><li>支持软件VPN</li></ul><h1 id="VPC应用场景"><a href="#VPC应用场景" class="headerlink" title="VPC应用场景"></a>VPC应用场景</h1><p><strong>应用场景一:</strong></p><p><strong>本地数据中心+云上业务  混合模式</strong></p><img src="https://i.loli.net/2019/10/03/6YT7dLVsZq5euo2.jpg" style="zoom:43%;"><ul><li><p>将内部核心系统与核心数据放置在自建的数据中心。来确保核心数据的安全性。</p></li><li><p>云上部署对外客户的应用系统，实现对业务访问的激增。</p></li></ul><p><strong>应用场景二:</strong></p><p><strong>多租户的安全隔离</strong></p><img src="https://i.loli.net/2019/10/03/XULBy4eCnfFqarb.jpg" style="zoom:51%;"><ul><li><p>希望在云上构建一个完全隔离的业务环境。传统云架构的多租户共享机制不能保证数据的安全性。</p></li><li><p>自主定义私有网络配置。</p></li></ul><p><strong>应用场景三:</strong></p><p><strong>主动访问公网的抓取类业务</strong></p><img src="https://i.loli.net/2019/10/03/huEJqojTvaxb7NZ.jpg" style="zoom:50%;"><ul><li>专有网络中的多个服务器可以主动访问互联网。</li><li>避免这些服务器的公网IP暴露在公网上。</li></ul><p><strong>应用场景四:</strong></p><p>多个应用流量波动大—共享宽带包</p><img src="https://i.loli.net/2019/10/03/huEJqojTvaxb7NZ.jpg" style="zoom:50%;"><ul><li>系统中同时存在多个面向互联网的应用</li><li>各个应用都需要对外提供服务，并且其波峰时间点不一致。</li></ul><h1 id="VPC网络基本概念"><a href="#VPC网络基本概念" class="headerlink" title="VPC网络基本概念"></a>VPC网络基本概念</h1><h2 id="OSI以太网7层协议"><a href="#OSI以太网7层协议" class="headerlink" title="OSI以太网7层协议"></a><strong>OSI以太网7层协议</strong></h2><img src="https://i.loli.net/2019/10/03/ahtr2uIl79secZS.jpg" style="zoom: 33%;"><p><strong>OSI以太网7层协议和TCP/IP协议比较</strong></p><img src="https://i.loli.net/2019/10/03/UTmsxyQLrlIj2wD.jpg" style="zoom: 25%;"><p>数据链路层：网桥、二层交换机、网卡</p><p>网络层：路由器、三层交换机</p><h2 id="路由器和二层交换机的区别"><a href="#路由器和二层交换机的区别" class="headerlink" title="路由器和二层交换机的区别"></a>路由器和二层交换机的区别</h2><p><strong>路由器：</strong></p><ul><li><p>工作在网络层（三层）</p></li><li><p>以IP地址作为为寻址方式，支持TCP/IP协议</p></li><li><p>支持划分子网</p></li><li><p>可以连接不同的网段（跨网段）</p></li></ul><p><strong>二层交换机：</strong></p><ul><li>工作在数据链路层（二层），以MAC地址作为寻址方式</li><li>不能划分子网</li><li>用于同一网段内的数据交换</li></ul><h2 id="路由器和网关"><a href="#路由器和网关" class="headerlink" title="路由器和网关"></a>路由器和网关</h2><p>网关是一个网络连接另一个网络的“关卡”，它是一个<font color="red">逻辑概念</font>。</p><p>路由器是物理设备</p><ul><li>路由器可以实现网关的功能。</li><li>网关也可以由局域网中的一台双网卡机器来实现。</li></ul><h2 id="VLAN（虚拟局域网）"><a href="#VLAN（虚拟局域网）" class="headerlink" title="VLAN（虚拟局域网）"></a>VLAN（虚拟局域网）</h2><p>是一组逻辑上的设备和用户，不受物理位置限制，可以根据部门、应用、功能等因素讲他们组织起来，相互之间的通信就好像在同一个网段中一样。</p><ul><li>VLAN之间默认是二层联通。三层通过对数据包封装VLAN_ID隔离。</li><li>VLAN之间需要通过网关来实现数据交换。</li></ul><p>其优点：</p><ul><li>端口隔离，通过一台交换机进行多个VLAN划分，实现交换机的利用最大化。</li><li>提高安全，含有敏感数据的用户组可与网络的其它部分隔离。</li><li>管理灵活，将不同地点、不同网络，不同用户组组合在一起，形成一个虚拟的网络环境。</li></ul><h1 id="VPC云产品综述"><a href="#VPC云产品综述" class="headerlink" title="VPC云产品综述"></a>VPC云产品综述</h1><p>VPC是用户独有的、完全掌控的的云上私有网络。可以根据需求对IP地址、路由表和网关等网络基础要素进行统一规划并使用阿里云提供的其它产品。（如ECS、RDS、SLB）</p><ul><li>VPC由虚拟路由器和虚拟交换机共同组成。</li><li>为实现和本地数据中心的平滑互通，可通过使用高速通道（专线）或VPN方式，将VPC与原有的本地物理网络连接，组成混合网络。</li></ul><img src="https://i.loli.net/2019/10/04/WwCEom6MxSr9yb5.jpg" style="zoom: 40%;"><h2 id="VPC的安全隔离"><a href="#VPC的安全隔离" class="headerlink" title="VPC的安全隔离"></a><strong>VPC的安全隔离</strong></h2><p>1、不同账号的云服务器在不同的VPC里。</p><p>2、VPC基于目前主流的隧道技术，每个VPC都有一个独立的<font color="red">隧道ID</font>。一个隧道ID对应一个VPC。一个VPC内的云实例之间的传输数据包都会加上隧道ID封装，带有唯一隧道ID标识，然后送到物理网络上进行传输，不同VPC内的ECS实例因为所在隧道ID不同，本身处于两个不同的路由平面。所以不同VPC内的云产品实例无法进行通信，天然被隔离。</p><p>3、不同专有网络之间内部网络<font color="red">完全隔离</font>,只能通过对外映射IP（弹性公网IP和NAT IP）互联。</p><h2 id="VPC名词解释"><a href="#VPC名词解释" class="headerlink" title="VPC名词解释"></a>VPC名词解释</h2><img src="https://i.loli.net/2019/10/04/cXoskuJeDRhwlHz.jpg" style="zoom: 25%;"><h2 id="VPC与其它云产品之间的关系"><a href="#VPC与其它云产品之间的关系" class="headerlink" title="VPC与其它云产品之间的关系"></a>VPC与其它云产品之间的关系</h2><p>VPC阿里主推网络类型，支持VPC的阿里云产品有：ECS、SLB、RDS。</p><p>VPC创建成功并创建虚拟交换机后，具备了在相应地域下可用区中创建处于这个交换机下的ECS、RDS和SLB实例。</p><h2 id="VPC收费模式"><a href="#VPC收费模式" class="headerlink" title="VPC收费模式"></a>VPC收费模式</h2><ul><li><p>VPC：免费（VPC内的  路由器、交换机、路由表、路由条目、私网高可用虚拟IP）</p></li><li><p>弹性公网IP：收费（预付费和后付费两种模式 ）</p></li></ul><img src="https://i.loli.net/2019/10/04/Dr5E6NGcneSyZst.jpg" style="zoom:43%;"><h1 id="VPC创建"><a href="#VPC创建" class="headerlink" title="VPC创建"></a>VPC创建</h1><h2 id="创建VPC"><a href="#创建VPC" class="headerlink" title="创建VPC"></a>创建VPC</h2><p>1、创建VPC时，需以<font color="red">CIDR Block</font> 方式指定VPC 内私网网段。-<font color="red">指定的网段无法修改</font>。</p><p>2、VPC创建成功后，任需创建虚拟交换机，之后才可以创建云产品实例（ECS、SLB、RDS）。</p><p>3、删除指定的VPC前，必须先删除VPC内的<font color="red">所有</font>云产品实例（安全组、交换机、产品实例、路由条目）。</p><h2 id="如何使用交换机"><a href="#如何使用交换机" class="headerlink" title="如何使用交换机"></a>如何使用交换机</h2><p>1、VPC状态为<strong>可用</strong>时，才能创建交换机。</p><p>2、交换机不支持并行创建，只支持one by one方式创建。</p><p>3、交换机创建后，不能再修改网段。</p><p>4、删除交换机之前，必须先删除交换机下的所有云产品实例。</p><h2 id="弹性公网IP的使用"><a href="#弹性公网IP的使用" class="headerlink" title="弹性公网IP的使用"></a>弹性公网IP的使用</h2><p>申请弹性公网IP</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="阿里云" scheme="https://www.iamzmj.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="https://www.iamzmj.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="VPC" scheme="https://www.iamzmj.top/tags/VPC/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之弹性伸缩服务ESS</title>
    <link href="https://www.iamzmj.top/posts/5a90a5b6.html"/>
    <id>https://www.iamzmj.top/posts/5a90a5b6.html</id>
    <published>2019-09-23T14:30:04.000Z</published>
    <updated>2019-10-04T03:40:55.682Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="什么是弹性伸缩服务ESS"><a href="#什么是弹性伸缩服务ESS" class="headerlink" title="什么是弹性伸缩服务ESS"></a>什么是弹性伸缩服务ESS</h1><p><strong>ESS介绍</strong></p><p>ESS(弹性伸缩)自动调整弹性计算资源大小，来满足业务需求的变化。可根据设置的伸缩策略，在业务需求增长时自动增加ECS实例来保证计算能力。在业务需求降低时，自动减少ECS实例来节约成本。</p><p><img src="https://i.loli.net/2019/09/28/LEvGXzWietFjsdN.png" alt></p><p><strong>ESS伸缩性服务的特点</strong></p><p>弹性扩展、弹性收缩、弹性自愈</p><p><img src="https://i.loli.net/2019/09/24/xGseRT5tCSj3hcl.png" alt></p><h1 id="ESS名词解释"><a href="#ESS名词解释" class="headerlink" title="ESS名词解释"></a>ESS名词解释</h1><ul><li><p><strong>弹性伸缩</strong>（Auto Scalling）</p><p>弹性伸缩是根据用户的业务和策略，自动调节其弹性计算资源的管理服务。其能够在业务增长的时自动增加ECS实例，并在业务下降时自动减少ECS实例。</p></li><li><p><strong>伸缩组</strong> </p><p>伸缩组是具有相同应用场景的ECS实例集合，伸缩组定义了组内ECS实例数的最大值，最小值及相关的负载均实例和RDS实例等属性。</p></li><li><p><strong>伸缩配置</strong></p><p>伸缩配置定义了用于弹性伸缩的ECS实例的配置信息。</p></li><li><p><strong>伸缩规则</strong></p><p>伸缩规则定义了具体的扩展和收缩操作，例如加入或移出N个ECS实例。</p></li><li><p><strong>伸缩活动</strong></p><p>伸缩规则成功触发后，就会产生一条伸缩活动，伸缩活动主要用来描述伸缩组内ECS实例变化情况。</p></li><li><p><strong>冷却时间</strong></p><p>冷却时间指，在同一伸缩组内，一个伸缩活动执行完成后的一段锁定时间。在这段锁定时间内，该伸缩组不执行其他的伸缩活动。</p></li></ul><h1 id="ESS概念之间的关系"><a href="#ESS概念之间的关系" class="headerlink" title="ESS概念之间的关系"></a>ESS概念之间的关系</h1><ul><li><p>伸缩配置</p></li><li><p>伸缩规则        包含在伸缩组中（管理生命周期）</p></li><li><p>伸缩活动</p></li></ul><p>​     伸缩触发任务有<font color="red">定时服务</font>,<font color="red">云监控报警任务</font>等类型。</p><p>​    <font color="red">定时任务</font>，不依赖伸缩组的生命周期管理，删除伸缩组不会删除定时任务。</p><h1 id="ESS使用规则"><a href="#ESS使用规则" class="headerlink" title="ESS使用规则"></a>ESS使用规则</h1><h2 id="ESS使用规则一"><a href="#ESS使用规则一" class="headerlink" title="ESS使用规则一"></a>ESS使用规则一</h2><p><strong>伸缩规则</strong></p><ul><li><p>定义了具体扩展或伸缩操作，例如加入或移出N个实例</p></li><li><p>伸缩规则对ECS实例数量是执行增加或是减少的操作。是根据伸缩组中定义的MinSize和MaxSize判断的。</p></li></ul><p>​         例如某个伸缩组：MaxSize=3   当前实例数2，伸缩规则定义为增加3台ECS实例。实际执行过程中只会增加1台ECS实例（伸缩规则中的值不会调整）</p><p>​         例如某个伸缩组：MinSize=2   当前实例数3，伸缩规则定义为减少5台ECS实例。实际执行过程中只会较少1台ECS实例（伸缩规则中的值不会调整）</p><h2 id="ESS使用规则二"><a href="#ESS使用规则二" class="headerlink" title="ESS使用规则二"></a>ESS使用规则二</h2><p><strong>伸缩活动</strong></p><ul><li><p>同一伸缩组内，同一时刻只能有一个伸缩活动在执行。</p></li><li><p>伸缩活动不可以中断，某个创建20台ECS实例的伸缩活动在执行时，当创建到第6台ECS实例时，无法强制终止该伸缩活动。</p></li><li><p>伸缩活动有ECS实例加入伸缩组失败时，需要保持ECS实例级事务的完整性。而非伸缩活动级事务的完整性。既进行ECS实例回滚，而非伸缩级回滚。例如，当伸缩组创建了20台ECS实例，只有19台成功加入SLB负载均衡，则只对1台不成功的ECS实例进行释放操作。</p></li></ul><h2 id="ESS使用规则三"><a href="#ESS使用规则三" class="headerlink" title="ESS使用规则三"></a>ESS使用规则三</h2><p><strong>冷却时间</strong></p><ul><li><p>伸缩组在冷却时间内，只会拒绝云监控报警任务类型的伸缩活动请求，其它类型的触发任务可以绕过冷却时间立即执行伸缩活动。</p></li><li><p>伸缩规则冷却时间和伸缩组默认冷却时间同时存在时，以伸缩规则的冷却时间为伸缩活动的执行标准。</p></li><li><p>当伸缩组加入或移除多个ECS实例时，只有最后一个ECS实例加入或移出完成后，整个伸缩组的冷却时间才开始计算。</p></li><li><p>停用伸缩组后再开启伸缩组，冷却时间效果会消失。</p></li></ul><h1 id="ESS收费介绍"><a href="#ESS收费介绍" class="headerlink" title="ESS收费介绍"></a>ESS收费介绍</h1><p>弹性伸缩免费。</p><p>通过弹性伸缩自动创建的或手工添加的ECS实例按ECS相关实例类型进行付费。</p><p>按量付费ECS关机后，任收取实例费用。只有释放后才不再收取。</p><p>弹性伸缩尽力保证弹性伸缩服务足额正常弹出，也存在由于地域云服务器库存不足，启动时间长等问题导致弹性伸缩的实例无法全额弹出的情况。</p><h1 id="ESS的定时模式"><a href="#ESS的定时模式" class="headerlink" title="ESS的定时模式"></a>ESS的定时模式</h1><ul><li>定时模式</li></ul><p>自定义自动伸缩发生的时间和频率，例如每天13:00添加ECS实例。</p><ul><li>动态模式</li></ul><p>基于云动态监控指标(如CPU性能指标)自动增加或减少ECS实例。</p><ul><li>固定数量模式</li></ul><p>通过设置最小实例数（MinSize）,既健康运行ECS实例最小数量，以保证可用性。</p><ul><li>自定义模式</li></ul><p>通过API调用自有监控系统，执行手动操作。</p><ul><li>健康模式</li></ul><p>ECS实例为非RUNNING状态时，弹性伸缩将自动移出或释放不健康ECS。</p><ul><li>多模式并行</li></ul><p>以上所有模式都可以组合配置，例如设置每天13:00~14:00创建20个ECS实例来应对业务高峰，但实际情况可能需要</p><p>多于20个的实例，则可以选择其它模式与定时模式配合一起使用。</p><h1 id="ESS限制"><a href="#ESS限制" class="headerlink" title="ESS限制"></a>ESS限制</h1><p>伸缩组内部署在ECS实例的应用必须<font color="red">无状态</font>，并且可<font color="red">横向扩展</font> 。</p><p>弹性伸缩无法自动添加ECS实例到<font color="red">开放缓存</font>，实例白名单需要<font color="red">自行添加</font>。</p><p>弹性伸缩无法纵向扩展，既无法自动升降ECS实例的vCPU,内存，带宽等。</p><p><strong>数量限制</strong></p><ul><li>伸缩组：20个，每一个伸缩组内可创建10个伸缩配置及50个伸缩规则。</li><li>支持ESS实例：1000台（含自动添加，不包含手动添加）。</li><li>定时任务：20个。</li></ul><h1 id="伸缩组创建"><a href="#伸缩组创建" class="headerlink" title="伸缩组创建"></a>伸缩组创建</h1><h2 id="创建伸缩组"><a href="#创建伸缩组" class="headerlink" title="创建伸缩组"></a>创建伸缩组</h2><p>注意事项</p><p>RDS：</p><p>1、指定的RDS实例必须是运行中状态。</p><p>2、指定的RDS实例访问白名单的IP个数不能达到上限</p><p>3、伸缩组创建成功后，不会立即生效，只有启用才能接受伸缩组规则触发和执行相关伸缩活动。</p><h2 id="修改伸缩组"><a href="#修改伸缩组" class="headerlink" title="修改伸缩组"></a>修改伸缩组</h2><p>注意事项</p><p>1、地域、负载均衡、RDS数据库实例不可以修改。</p><p>2、伸缩组有 生效、失效、删除 三种状态。只有生效和失效状态才可以修改伸缩组属性。</p><p>3、当伸缩组的ECS实例数不满足修改后的MaxSize和MinSize时，弹性伸缩服务会自动加入或移出ECS实例。使得伸缩组的ECS实例数量匹配MaxSize和MinSize。</p><h2 id="启用伸缩组"><a href="#启用伸缩组" class="headerlink" title="启用伸缩组"></a>启用伸缩组</h2><p>注意事项</p><p>1、当伸缩组为失效状态时，才可以启用伸缩组。</p><p>2、当伸缩组有生效的伸缩配置时，才可以启用伸缩组。</p><p>3、一个伸缩组在同一时刻只能有一个生效的伸缩配置。</p><h2 id="停用伸缩组"><a href="#停用伸缩组" class="headerlink" title="停用伸缩组"></a>停用伸缩组</h2><p>注意事项</p><p>1、只有在当前伸缩组没有任何伸缩活动进行时，才能停用伸缩组。</p><p>2、当前伸缩组为生效状态时，才能停用伸缩组。</p><h2 id="删除伸缩组"><a href="#删除伸缩组" class="headerlink" title="删除伸缩组"></a>删除伸缩组</h2><p>1、控制台删除一个伸缩组时，默认使用强制删除模式。</p><p>2、删除伸缩组，包含删除相关的伸缩配置、伸缩规则、伸缩活动、伸缩信息等。但不会删除定时任务，云监控报警任务，负载均衡实例，RDS实例。</p><p>3、通过Open AI 删除伸缩组时，可以看到强制删除属性。表示伸缩组存在ECS实例或正在进行伸缩活动。是否强制删除伸缩组并移出和释放ECS实例。</p><h2 id="创建伸缩配置"><a href="#创建伸缩配置" class="headerlink" title="创建伸缩配置"></a>创建伸缩配置</h2><p>1、伸缩配置一旦创建成功，不可以编辑更改，只能创建一个新的伸缩配置来替换不需要的伸缩配置。</p><p>2、依据被替换的伸缩配置，而添加进组的ECS实例任可正常运行。</p><p>3、一个伸缩组内最多创建10个伸缩配置，但只能有1个伸缩配置处于激活状态。</p><h2 id="删除伸缩配置"><a href="#删除伸缩配置" class="headerlink" title="删除伸缩配置"></a>删除伸缩配置</h2><p>注意事项</p><p>1、伸缩配置在伸缩组中属于<font color="red">生效状态</font>,则伸缩配置不允许删除。</p><h1 id="生命周期挂钩"><a href="#生命周期挂钩" class="headerlink" title="生命周期挂钩"></a>生命周期挂钩</h1><h2 id="什么是生命周期挂钩"><a href="#什么是生命周期挂钩" class="headerlink" title="什么是生命周期挂钩"></a>什么是生命周期挂钩</h2><p>当伸缩组发生伸缩活动时，生命周期挂钩会暂停伸缩活动一段时间，伸缩活动进入等待状态。</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>扩张活动时：可以在等待期间初始化ECS实例配置。</p><p>收缩活动时：获取ECS实例数据</p><h2 id="作用时机"><a href="#作用时机" class="headerlink" title="作用时机"></a>作用时机</h2><p>扩张活动时：加入RDS、SLB实例白名单前</p><p>收缩活动时：移除RDS、SLB实例白名单前</p><h1 id="创建管理定时任务"><a href="#创建管理定时任务" class="headerlink" title="创建管理定时任务"></a>创建管理定时任务</h1><p>1、每个账户最多能创建20个定时任务</p><p>2、由于伸缩组正发生伸缩活动或者伸缩组停用等原因，导致定时任务触发执行伸缩规则失败，在重试过期时间内，定时任务会自动重试触发，否则放弃本次定时触发。</p><p>3、若多个定时任务在相近的时间内触发同一个伸缩组的伸缩规则，则最早触发的定时任务会先执行伸缩活动。由于同一个伸缩组在同一时刻只能有一个伸缩活动。排在后面的定时任务会在重试过期时间内自动重试实时触发。如上一个伸缩活动完成之后，排在后面的定时任务还在重试过期时间内重试，则执行该定时任务的伸缩规则并触发相应的伸缩活动。</p><p><strong>报警任务</strong></p><p>1、基于  云监控服务（CMS）运行的。</p><p>2、如果该报警任务名称已经存在，则用新的值进行替换。</p><p>3、在使用报警任务之前，需要在ECS镜像里安装新版本的云监控插件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="阿里云" scheme="https://www.iamzmj.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="https://www.iamzmj.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="ESS" scheme="https://www.iamzmj.top/tags/ESS/"/>
    
  </entry>
  
  <entry>
    <title>windows10命令行调用openssl</title>
    <link href="https://www.iamzmj.top/posts/ac409ae6.html"/>
    <id>https://www.iamzmj.top/posts/ac409ae6.html</id>
    <published>2019-09-16T15:29:55.000Z</published>
    <updated>2019-10-01T03:45:43.606Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>在计算机网络上，OpenSSL是一个开放源代码的软件库包，应用程序可以使用这个包来进行安全通信，避免窃听，同时确认另一端连接者的身份。这个包广泛被应用在互联网的网页服务器上。</p><p>下载安装windows平台<a href="http://slproweb.com/products/Win32OpenSSL.html" rel="external nofollow noopener noreferrer" target="_blank">openssl</a>密钥生成工具</p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/e61190ef76c6a7efb5f492a5fffaaf51f2de6666.gif" alt></p><p>执行安装目录bin下的”openssl.exe”，执行后弹出命令窗口如下</p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/Snipaste_2019-09-18_20-54-44.jpg" alt></p><p>生成私钥，命令行输入</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genrsa -out rsa_private_key<span class="selector-class">.pem</span> <span class="number">1024</span></span><br></pre></td></tr></table></figure><p>在bin目录下多了一个rsa_private_key.pem文件，将这个文件通过文本编辑器打开，将看到你所需要的<strong>私钥</strong>，使用时记得把—BEGIN PRIVATE KEY—，—END PRIVATE KEY—字样删掉。</p><p>生成公钥，命令行输入</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsa -<span class="keyword">in</span> rsa_private_key<span class="selector-class">.pem</span> -pubout -out rsa_public_key.pem</span><br></pre></td></tr></table></figure><p>在bin目录下多了一个rsa_public_key.pem文件，将这个文件通过文本编辑器打开，将看到你所需要的<strong>公钥</strong>，使用时记得把—BEGIN PRIVATE KEY—，—END PRIVATE KEY—字样删掉。</p><p>RSA私钥转换成 PKCS8 格式，命令行输入</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkcs8 -topk8 -inform PEM -<span class="keyword">in</span> rsa_private_key<span class="selector-class">.pem</span> -outform PEM -nocrypt</span><br></pre></td></tr></table></figure><p>回车，key直接显示在窗口中</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PRIVATE KEY-----</span><br><span class="line">MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBALaGPKpNJmgH6oV3</span><br><span class="line">tO19bPty3U52ELXQilxRvcXuIQbqWkteK86FUi4W7eM+eK+ldVuuJt3YVsBeSPh7</span><br><span class="line"><span class="number">2</span>HIFatdzxqbE5oXq7vyuWUj9fi3ldD3i0obN0v52qKBL6gNQqRThQjbRqaf2uix4</span><br><span class="line">BORP5DCALVanQKU4QUaL6Tnsy9MPAgMBAAECgYEApFlc2K+dTIEMP9+Y71tHvWYh</span><br><span class="line">NZwD0eKUIyqLKWURIgv0<span class="comment">//YslcngRJXq3/qJawceFE5MuucovhBnvi6tp4WPPCk0</span></span><br><span class="line">UA1gsEPYN9CC4M7DFy2NV+thY+PLZ5pv/mcNiO/eNMIVoibQK1luNIyH3bKbCQHo</span><br><span class="line">fkAyk5Ji8/TEfyVphmkCQQDj8HPXEtSe9RtbCkXyrx0Piq+<span class="number">4</span>kF79+ALQJwREisgJ</span><br><span class="line">LTtABgrOeWkse03gQHp64LgTJG0BgaBQZwsm++hwttONAkEAzP6GhuelN4zElPSJ</span><br><span class="line">skWApRjQOCTBKUf/<span class="number">5e6</span>g5WH284SO9tjjL4Kb8OetN4XmOijEcsWk7p6cEugVEnBj</span><br><span class="line">T4asCwJAa8fOLrujuEo0FjdkXd25wxiUAJSbpkF4qw5X8UUiU1yE8MAqqfk05yii</span><br><span class="line"><span class="number">6</span>U/z2liaEcselCDEOmCPIG7rOSjqHQJBALuz/<span class="number">6</span>h9aYog6kveUksbWv1RaC9QcFKF</span><br><span class="line">a+q1gzwmZMJ8SY/<span class="number">77</span>qKtPG7tJG2nvLTaaW8STMB2GUEyo0DcCgNitBsCQCbNHgqw</span><br><span class="line">/cE<span class="comment">//p/qLEuZgLZRBM6xOrsuLYU7ODXc3xL9H48l2iGt3mSnjLkEuW+OjaLMNKRL</span></span><br><span class="line">Iujc/<span class="number">0</span>AMhDYfL3w=</span><br><span class="line">-----END PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>–后续持续更新–</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="openssl" scheme="https://www.iamzmj.top/categories/openssl/"/>
    
    
      <category term="openssl" scheme="https://www.iamzmj.top/tags/openssl/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之弹性计算服务ECS</title>
    <link href="https://www.iamzmj.top/posts/26340115.html"/>
    <id>https://www.iamzmj.top/posts/26340115.html</id>
    <published>2019-09-15T12:57:19.000Z</published>
    <updated>2019-10-04T03:25:44.800Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p><img src="https://i.loli.net/2019/09/14/Z2PhoYi3sHEfqJ1.png" alt></p><h1 id="阿里云弹性计算服务ECS"><a href="#阿里云弹性计算服务ECS" class="headerlink" title="阿里云弹性计算服务ECS"></a>阿里云弹性计算服务ECS</h1><h2 id="什么是弹性计算服务ECS"><a href="#什么是弹性计算服务ECS" class="headerlink" title="什么是弹性计算服务ECS"></a>什么是弹性计算服务ECS</h2><p><strong>1、传统物理服务器</strong></p><p>随着业务的上升用户数和访问量急剧上升，传统的物理服务器都是会通过询价—采购—安装—调试—防病毒处理—BGP线路。。。。一套体系进行新增。</p><p><strong>2、云服务器Elastic Compute Service (ECS)</strong></p><p>阿里云提供的是一种<strong>随时创建</strong>、<strong>扩容</strong>、<strong>释放</strong>的基础云计算服务。</p><p>从管理方式上来讲，云服务器（简单、高效、稳定、安全、易用、成本低），使得开发者更加专注于核心业务的创新。</p><h2 id="ECS定位"><a href="#ECS定位" class="headerlink" title="ECS定位"></a>ECS定位</h2><p>云服务器（ECS）是阿里云产品体系中最基础的计算服务，通常用作应用程序的运行环境，其最重要的特性是弹性。</p><img src="https://i.loli.net/2019/09/19/GL8WNzJxDy1QO9g.jpg" style="zoom:50%;"><h2 id="ECS的基础运行环境"><a href="#ECS的基础运行环境" class="headerlink" title="ECS的基础运行环境"></a>ECS的基础运行环境</h2><p>1、ECS是应用程序的基础运行环境</p><ul><li><p>每个ECS都运行着用户选择的操作系统，一般是某个Linux或Windows的发行版。</p></li><li><p>用户的应用程序运行在实例的操作系统之上</p></li></ul><p>2、最简化的弹性结构</p><ul><li><p>较好的实践是将ECS和其他云计算产品搭配使用，列如ECS运行Webserver，使用RDS作为数据库，OSS作为文件存储</p></li><li><p>应避免完全将原有物理服务器上的应用照搬照抄到云服务器上。</p></li></ul><h2 id="ECS的弹性伸缩能力"><a href="#ECS的弹性伸缩能力" class="headerlink" title="ECS的弹性伸缩能力"></a>ECS的弹性伸缩能力</h2><p>1、支持垂直方向和水平方向的扩展。</p><ul><li><p>垂直扩展：五分钟内升级CPU、内存、磁盘、网络。</p></li><li><p>水平扩展：十分钟内启动N多的ECS实例，度过峰值后可以立刻销毁。</p></li></ul><img src="https://i.loli.net/2019/09/19/r7sjzkpNRKHU6tM.jpg" style="zoom:50%;"><h2 id="ECS的产品特点"><a href="#ECS的产品特点" class="headerlink" title="ECS的产品特点"></a>ECS的产品特点</h2><p>1、<strong>稳定</strong>  </p><p>可靠性99.999%，自动宕机迁移，数据备份和回滚，系统性能报警。无需再单独购买配置</p><img src="https://i.loli.net/2019/09/19/fI19GhDVSmzCwXy.jpg" style="zoom:70%;"><p>2、<strong>安全</strong>   </p><p>防DDoS，安全组规则的保护多用户隔离 ，防密码破解。无需再单独购买配置</p><img src="https://i.loli.net/2019/09/19/eLZPAhu2zFTgIsi.jpg" style="zoom:70%;"><p>3<strong>、弹性</strong>    </p><p><font color="red">10分钟内</font>创建一家中型互联网公司的IT资源（约100台），<font color="red">5分钟内</font>停机升级CPU和内存，在线不停机升级带宽。</p><p>4、<strong>高性能</strong></p><p>随机IOPS 100万，4000MB/s增强型SSD云盘性能；多线BGP骨干网络接入（避免了各宽带运营商之间数据交换进行的计费）；高性价比，低运营成本。</p><h2 id="ECS的应用场景"><a href="#ECS的应用场景" class="headerlink" title="ECS的应用场景"></a>ECS的应用场景</h2><p>ECS应用场景广泛</p><p>主要应用场景1：企业网站、个人博客、APP后台、Web应用。</p><p>主要应用场景2：数据库，通过在ECS上安装数据软件库，将ECS改造成后台数据库。</p><h2 id="ECS的基本概念"><a href="#ECS的基本概念" class="headerlink" title="ECS的基本概念"></a><strong>ECS</strong>的基本概念</h2><p>ECS，由多个并列，又相互关联的产品概念组成，包括：</p><p>1、实例，instance; </p><p>2、存储，storage; </p><p>3、快照，copy</p><p>4、镜像，image</p><p>5、安全组，security group</p><h2 id="ECS位置概念"><a href="#ECS位置概念" class="headerlink" title="ECS位置概念"></a>ECS位置概念</h2><p>1、地域  Region</p><p><font color="red">地域</font>，是阿里云提供的云计算服务的城市位置，一般一个Region会覆盖一个地域。</p><p>2、可用区  Zone</p><p><font color="red">可用区</font>，是Region下，电力和网络独立存在，软件故障隔离的物理数据中心，可用区的开发，目的是容许用户自行选择资源的分配策略。</p><img src="https://i.loli.net/2019/09/19/mVrjDQtoi8E2G94.jpg" style="zoom:60%;"><h2 id="ECS产品关系"><a href="#ECS产品关系" class="headerlink" title="ECS产品关系"></a><strong>ECS</strong>产品关系</h2><img src="https://i.loli.net/2019/09/19/sjIGBYeXkJW7alE.jpg" style="zoom: 43%;"><p><strong>选择地域</strong></p><ul><li><p>按服务接入点、就近选择地域</p></li><li><p>各种资源在不同的地域价格略有不同</p></li></ul><p><strong>选择可用区</strong></p><p>资源放在同一个可用区  </p><ul><li>优点：低时延</li><li>缺点：低可用性</li></ul><p>资源放在不同可用区 </p><ul><li>优点：高可用性</li><li>缺点：高时延</li></ul><h2 id="ECS实例概念"><a href="#ECS实例概念" class="headerlink" title="ECS实例概念"></a>ECS实例概念</h2><p>1、实例，是ECS产品最核心的部分，是指虚拟计算环境。只有基于实例，才能使用网络、存储、快照等其它资源。</p><p>2、实例规格，决定了ECS实例的计算和存储能力，是指实例的不同配置，包括vCPU核数、内网、网络（内网）性能等。</p><img src="https://i.loli.net/2019/09/19/zCXne6IoPwlKmqb.png" style="zoom:80%;"><h2 id="ECS故障迁移"><a href="#ECS故障迁移" class="headerlink" title="ECS故障迁移"></a>ECS故障迁移</h2><p>当一个实例的物理主机宕机时，ECS系统将启动宕机迁移过程，既将此物理机上运行的云服务器都迁移到其它物理机上。</p><ul><li><p>当发生宕机故障，阿里云发送迁移短信。</p></li><li><p>迁移完成后，阿里云再次发送给短信，配置信息迁移前后保持不变。</p></li><li><p>迁移过程持续时间5-10分钟，对于要求高可用的应用，使用SLB负载均衡到多个ECS实例上，应对宕机故障。</p></li><li><p>设置应用程序开机自动启动，避免宕机重启后应用程序没有启动，如Apache。</p></li><li><p>设置待迁移ECS实例上部署应用的自动重连功能如：连接数据库。</p></li><li><p>宕机迁移只针对使用云盘的ECS实例，使用本地盘的ECS实例收到宕机短信后，通过工单的方式确认是否需要保留本地数据等事项，并进入下一个恢复事项。</p></li></ul><h2 id="ECS实例计费方式"><a href="#ECS实例计费方式" class="headerlink" title="ECS实例计费方式"></a>ECS实例计费方式</h2><img src="https://i.loli.net/2019/09/20/OzIGJBwe6t2bhkX.jpg" style="zoom:30%;"><h2 id="ECS存储-上-云盘"><a href="#ECS存储-上-云盘" class="headerlink" title="ECS存储(上)云盘"></a>ECS存储(上)云盘</h2><p>存储的相关概念：</p><img src="https://i.loli.net/2019/09/19/H6Pjy2WgsZIEaLn.jpg" style="zoom:40%;"><p><strong>ECS存储</strong></p><p>一台ECS实例最多挂载16块云盘，云盘的出发点：高可靠性、兼顾低时延。</p><p><strong>ECS云盘</strong></p><img src="https://i.loli.net/2019/09/19/bW4XudJsRZIEjfO.jpg" style="zoom:50%;"><p><strong>各类云盘技术参数</strong></p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/Snipaste_2019-09-20_23-33-24.jpg" style="zoom:26%;"><p><strong>独立云磁盘：</strong></p><p>指单独购买的云盘（系统盘随ECS实例购买），可随时挂载，卸载</p><p>只可挂载同一可用区域内的任何实例上</p><p>但在同一时间只能挂载到一个实例上</p><p>可设置是否随实例一起释放</p><p>支持按量付费</p><h2 id="ECS存储-中-共享块存储（公测中）"><a href="#ECS存储-中-共享块存储（公测中）" class="headerlink" title="ECS存储(中)共享块存储（公测中）"></a>ECS存储(中)共享块存储（公测中）</h2><p>ECS共享块存储是一种支持多个ECS实例并发读写访问的数据块级存储设备，具备多并发、高性能、高可靠等特性，单个共享块存储最多支持同时挂载到一个可用区下的16个ECS实例上。（公测阶段为16个）</p><img src="https://i.loli.net/2019/09/19/7Lje1iEPQ8hZkJB.jpg" style="zoom:45%;"><p><strong>共享存储块技术参数</strong></p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/Snipaste_2019-09-20_23-28-52.jpg" style="zoom:33%;"><h2 id="ECS存储-下-本地存储"><a href="#ECS存储-下-本地存储" class="headerlink" title="ECS存储(下)本地存储"></a>ECS存储(下)本地存储</h2><img src="https://i.loli.net/2019/09/19/cCJtDGjm1WXRlhT.jpg" style="zoom:50%;"><p><strong>出发点：超低延时，低可靠性</strong></p><p>•无盘古可分布式系统</p><p>•与ECS实例在同一台物理服务器上，是否可靠由物理服务器决定，存在单点故障风险</p><p>•收到宕机短信后，需通过工单方式确认是否需要保留本地数据等事项，并进入下一个恢复环境。</p><p>•不建议存放需要长期保存的数据。</p><p><strong>计费</strong></p><p>本地盘的费用包括在本地盘实例的费用中。</p><p><strong>生命周期</strong></p><p>本地盘的生命周期与它所挂载的实例周期相同。</p><p>只能在创建本地盘实例时创建本地磁盘。本地磁盘的存储容量由本地盘实例规格决定，不能自行添加或减少。</p><p>本地盘实例释放时，本地盘也会同时释放。</p><p><strong>ECS本地存储技术参数</strong></p><img src="https://i.loli.net/2019/09/20/vV9AgMNLczSYoZr.jpg" style="zoom:28%;"><h2 id="ECS快照"><a href="#ECS快照" class="headerlink" title="ECS快照"></a>ECS快照</h2><p><strong>ECS快照功能：</strong></p><p>某一个时间点上某一个磁盘的数据备份。采用按量付费功能。</p><p><strong>ECS快照用途：</strong></p><p>1、系统盘、数据盘的日常备份，可以利用快照定期的对重要业务数据进行备份，来应对误操作、攻击、病毒导致的数据丢失风险。</p><p>2、更换操作系统，应用软件升级或业务数据迁移等重大操作前，可以创建一份或多份数据快照，一旦升级、迁移过程中出现任何问题，可以通过数据快照及时恢复到正常系统数据状态。</p><p>3、生产数据的多副本应用，通过生产数据创建快照，从而为数据挖掘、报表查询、开发测试等应用提供接近实时的真是生产数据。</p><p>4、通过系统盘快照创建自定义镜像。批量复制出与当前系统完全一样的ECS实例。</p><p>5、通过数据盘快照可以复制出与目前磁盘数据完全一样的新磁盘。</p><p><strong>ECS自动快照：</strong></p><p>阿里云除用户手动快找外，还提供自动快照简化用户管理。</p><ul><li><p>通过控制台/API设置自动快照策略。支持自动定义时间点、每周重复日期、快照保留时长。查询快照关联磁盘及详情。</p></li><li><p>可创建自动快照时间段来错开应用的高峰期。（创建快照时I/O的特性会降低）</p></li><li><p>每块磁盘拥有64个的额度。</p></li></ul><p><strong>ECS快照的收费</strong></p><p>快照所占存储空间的大小计费。开通快照时默认按照实际使用量按小时计费。</p><p>购买存储包（包月）的方式，来提前购买存储资源的使用额度和时长。（按量后付费模式）</p><p><strong>ECS快照机制</strong></p><p>快照使用增量方式，只拷贝两个快照间数据变化的部分</p><p><img src="https://i.loli.net/2019/09/19/4KURxGCYs539TZS.png" alt></p><p>数据变化情况不同，快照创建的时长也不同。第一次创建快照的时间最长。</p><h2 id="ECS镜像"><a href="#ECS镜像" class="headerlink" title="ECS镜像"></a>ECS镜像</h2><p><strong>ECS镜像：</strong></p><p>ECS镜像：是ECS实例运行环境的模板。模板中包括了特定的ECS操作系统信息。也包括一些额外安装的应用程序。</p><p>镜像相当于副本文件。包含一个或多个磁盘中的所有数据。对于ECS来说，这些数据可以是单个系统盘，也可以是系统盘+数据盘的组合。</p><p><strong>ECS镜像的类型及主要作用:</strong></p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/Snipaste_2019-09-20_23-50-24.jpg" style="zoom: 25%;"><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/Snipaste_2019-09-20_23-50-49.jpg" style="zoom: 25%;"><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/Snipaste_2019-09-20_23-51-11.jpg" style="zoom:25%;"><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/Snipaste_2019-09-20_23-51-55.jpg" style="zoom:25%;"><p><strong>ECS自定义镜像的创建</strong></p><p><strong>1、使用快照创建镜像</strong></p><ul><li><p>自定义镜像是ECS实例系统盘在某一时刻的快照</p></li><li><p>通过自定义镜像开通的实例，可与原实例配置的系统相同，也可以不同。</p></li></ul><p>使用说明:</p><ul><li><p>使用自定义镜像开通的ECS实例可以升级CPU、内存、带宽、磁盘等。</p></li><li><p>创建自定义镜像的ECS实例到期或数据释放后，创建的自定义镜像不受影响。使用自定义镜像开通的ECS实例也不会受影响。</p></li></ul><p>Linux注意事项:</p><ul><li><p>Linux实例的系统盘创建自定义镜像时，umonut linux 挂载的所有文件系统。不要在/etc/fstab文件中加载数据盘信息否则* 使用该镜像创建的实例无法启动。</p></li><li><p>请勿随意升级内核或操作系统版本，请勿调整系统盘分区，请勿修改默认登录用户名root。</p></li></ul><p><strong>2、使用实例创建镜像</strong></p><ul><li><p>基于实例创建一个自定义镜像，把实例中的所有磁盘，包括系统盘和数据盘中的数据，完整得复制到自定义镜像中。</p></li><li><p>创建自定义镜像的过程中，该实例中的每块磁盘都自动创建了一个快照，这些快照组合起来，构成一个自定义镜像。</p></li></ul><p>使用说明：</p><ul><li><p>创建镜像的过程中，不要改变实例状态，不要停止、启动或重启实例，避免创建失败。</p></li><li><p>使用带数据盘的自定义镜像创建实例时，默认根据镜像创建数据盘。</p></li><li><p>更换系统盘时，不能使用带数据的自定义镜像。</p></li></ul><p><strong>ECS自定义镜像适用范围</strong></p><img src="https://i.loli.net/2019/09/19/T5f2R9HaIcvtGgb.jpg" style="zoom:50%;"><p><strong>ECS自定义镜像的注意事项</strong></p><p>1、数据盘mount</p><p>Linux实例的系统盘创建镜像时，要umount linux挂载的所有文件系统，及不要在/etc/fstab文件中加载数据盘信息。否则使用该镜像的实例无法启动。因为一块磁盘只能同时被一个实例挂载。</p><p>2、敏感数据</p><p>自定义镜像可以共享给他人，为保证数据安全，在创建自定义镜像前，应删除敏感数据（如：密码 个人文件）</p><p>3、自动启动服务</p><p>为了自动扩展能力而创建的镜像，应当设置好启动时需要启动的程序。如Apache。</p><h2 id="ECS的网络和安全组"><a href="#ECS的网络和安全组" class="headerlink" title="ECS的网络和安全组"></a>ECS的网络和安全组</h2><p>如何兼顾ECS实例的安全及实例之间的数据通信？</p><p>ECS网络包括：</p><img src="https://i.loli.net/2019/09/19/qbfTpX1cCZFS9dw.jpg" style="zoom:50%;"><p>专有网络：</p><ul><li><p>一个隔离的网络环境。</p></li><li><p>可以自定义网络的拓扑和IP地址，适用于对网络安全性较高和有一定网络管理能力的用户。</p></li></ul><p>经典网络：已淘汰</p><p><strong>ECS内网</strong></p><img src="https://i.loli.net/2019/09/19/mJ1cVMxpruREhsG.jpg" style="zoom:47%;"><p>在同一地域，实例之间传输数据，一般推荐<font color="red">内网</font>&gt;连接方式</p><p><strong>1、经典网络实例：</strong></p><p>同一账号、同一地域实例，如果在同一个安全组，既默认内网互联。</p><p>同一账号、同一地域，不同可用区实例，如果在同一个安全组，即使内网地址不在同一网段，也可内网连接。</p><p>不同账号，相同地域的实例，可以通过安全组实现内网互联。</p><p><strong>2、专有网络实例：</strong></p><p>同一账号、同一地域、同一VPC网络的实例：</p><ul><li><p>在同一个安全组内，内网互联</p></li><li><p>不在同一个安全组内，需安全授权后才能内网互联</p></li></ul><p>同一账号、同一地域实例，如果在不同的VPC网络，需要通过<font color="red">高速通道</font>实现网络互联。</p><p><font color="red">实例的网络类型不同，默认不能内网互联</font>。</p><p><strong>ECS安全组</strong></p><p>ECS安全组是一种<font color="red">虚拟防火墙</font>，通过设置一个或多个规则，实现单台或多台实例网络访问控制。规则包含允许访问的网络协议、端口、源IP等信息，这些规则对于加入该安全组的所有实例均生效，每个实例至少要加入一个安全组。</p><p>安全组用途：</p><p>1、对ECS进行分组，限制互相访问权限控制时需要使用安全组功能。</p><p>2、通过安全组的配置可以实现：</p><ul><li><p>允许或限制特定的安全组或者特定的来源是否可以访问自己</p></li><li><p>允许或限制本安全组的实例是否可以访问组外特定资源</p></li></ul><h2 id="ECS防火墙规则"><a href="#ECS防火墙规则" class="headerlink" title="ECS防火墙规则"></a>ECS防火墙规则</h2><p>经典网络防火墙规则由源（IP、IP网段或安全组），协议类型，端口、策略（允许/拒绝），网络类型（内网/公网）组成。</p><img src="https://i.loli.net/2019/09/19/kP8b6IqsGRhgByW.jpg" style="zoom:50%;"><p>每个安全组可以通过<font color="red">两种方式</font>授权其它人访问自己</p><p>方式一：指定IP地址段，如123.123.0.0/16，公网IP段访问安全组1中的实例。</p><img src="https://i.loli.net/2019/09/19/tu3pSiPnlsY6Cab.jpg" style="zoom:50%;"><p>方式二：指定安全组ID，用于内网间授权。</p><img src="https://i.loli.net/2019/09/19/SiFhq6zN9gVrXQm.jpg" style="zoom:50%;"><p>安全组方向限制：安全组对出和入两个方向都配置防火墙规则，入方向即将自己作为访问目标，出方向即将自己作为访问源。</p><p>安全组限制：每个账号最多<font color="red">100</font>个安全组，每个安全组最多<font color="red">1000</font>个实例。每个实例最多加入<font color="red">5</font>个安全组。每个安全组最多<font color="red">100</font>条规则。</p><p>安全组优先级数字越小，优先级越高。</p><p>1、服务器只有一个安全组。</p><ul><li>两条优先级相同的规则，先判断第一条规则是否符合，不符合的情况下，判断第二条规则是否符合。</li><li>两条优先级不相同的规则，优先级小的数字高，优先级大的数字小。</li></ul><p>2、服务器至少有二个安全组。</p><ul><li>安全组1和安全组2的优先级一样的情况下，依次执行安全规则。</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安全组<span class="number">1</span>    <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>   优先级<span class="number">1</span></span><br><span class="line">安全组<span class="number">1</span>    <span class="number">1.1</span><span class="number">.1</span><span class="number">.2</span>   优先级<span class="number">1</span></span><br><span class="line">安全组<span class="number">2</span>    <span class="number">2.2</span><span class="number">.2</span><span class="number">.1</span>   优先级<span class="number">1</span> </span><br><span class="line">安全组<span class="number">2</span>    <span class="number">2.2</span><span class="number">.2</span><span class="number">.2</span>   优先级<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>安全组1和安全组2的优先级不一样的情况下，安全组1   1.1.1.1—安全组2   2.2.2.1— 安全组1  1.1.1.2 —安全组2  2.2.2.2</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安全组<span class="number">1</span>    <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>   优先级<span class="number">1</span></span><br><span class="line">安全组<span class="number">1</span>    <span class="number">1.1</span><span class="number">.1</span><span class="number">.2</span>   优先级<span class="number">2</span></span><br><span class="line">安全组<span class="number">2</span>    <span class="number">2.2</span><span class="number">.2</span><span class="number">.1</span>   优先级<span class="number">1</span> </span><br><span class="line">安全组<span class="number">2</span>    <span class="number">2.2</span><span class="number">.2</span><span class="number">.2</span>   优先级<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="ECS产品创建注意事项"><a href="#ECS产品创建注意事项" class="headerlink" title="ECS产品创建注意事项"></a>ECS产品创建注意事项</h2><p>1、服务器要部署在什么区域：</p><ul><li><p>ECS所在地域与目标用户所在的地理位置</p></li><li><p>ECS与其他阿里云产品之间的关系</p></li><li><p>资源价格</p></li><li><p>某些地区的特殊要求，如中国大陆要求的ICP备案，选择大陆地域的数据中心。</p></li></ul><p>2、服务器需要什么样的配置：</p><ul><li><p>根据应用系统所需的最大CPU、内存的需求选择所需配置</p></li><li><p>如果需要存储大量数据，按需选择附加磁盘</p></li><li><p>考虑是否需要本地存储</p></li></ul><p>3、选择操作系统</p><ul><li>WINDOWS / LINUX     32位/64位</li></ul><p>4、服务器的I/O系统满足需要么？</p><ul><li><p>选择I/O优化的实例，挂载SSD云盘时，能获得SSD云盘全部存储性能。</p></li><li><p>对于不支持I/O优化的实例，挂载SSD云盘时，能获得1000左右的IOPS性能。(SSD云盘追高支持2000IOPS) </p></li></ul><p>5、预算是否充足</p><ul><li><p>按年/月付费适合24*7小时的部署服务，按量付费适合临时使用。</p></li><li><p>预算足够可直接购买峰值所需配置。预算不足适当降低配置，设定服务器、CPU利用率告警。</p></li></ul><h2 id="ECS的API"><a href="#ECS的API" class="headerlink" title="ECS的API"></a>ECS的API</h2><p>通过向ECS API的服务端地址发送GET或POST请求，并按照接口说明在请求中加入相应请求参数来完成的。根据请求的处理情况，系统会返回处理结果。</p><p>请求结构</p><ul><li>服务地址：ecs.aliyuncs.com</li><li>通信协议:  支持HTTP或HTTPS  ,   推荐HTTPS</li><li>请求方法：支持HTTP或HTTPS  GET/POST方法发送请求，这种方式下请求参数需要包含在请求的URL中。</li><li>字符编码：请求及返回结果都使用UTF-8字符集进行编码。</li><li>返回格式：支持XML和JSON两种，默认为XML格式。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="阿里云" scheme="https://www.iamzmj.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="https://www.iamzmj.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="ECS" scheme="https://www.iamzmj.top/tags/ECS/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之云盾</title>
    <link href="https://www.iamzmj.top/posts/24ecca15.html"/>
    <id>https://www.iamzmj.top/posts/24ecca15.html</id>
    <published>2019-09-14T05:25:11.000Z</published>
    <updated>2019-10-04T03:21:22.754Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p><img src="https://i.loli.net/2019/09/14/Z2PhoYi3sHEfqJ1.png" alt></p><h1 id="阿里云盾介绍"><a href="#阿里云盾介绍" class="headerlink" title="阿里云盾介绍"></a>阿里云盾介绍</h1><p>为响应2018年6月《中华人民共和国网络安全法》政策的正式实施，提高全民网络安全意识。</p><h2 id="阿里云盾功能"><a href="#阿里云盾功能" class="headerlink" title="阿里云盾功能"></a>阿里云盾功能</h2><p><strong>1、网络防护</strong></p><p>网络防护:默认开通，可升级至DDoSa高防IP，主要面向产品  ECS、SLB。监测方式：时实。</p><p><strong>2、提醒功能</strong></p><p>默认开通，主要面向产品：ECS。监测方式：实时。内容包括：安全规则删除，异地登录，暴力破解，云资源的创建删除提醒。提醒方式：短信、邮件、旺旺（持续更新要看文档）。</p><p><strong>3、安全体检</strong></p><p>默认不开通，内容包括：WEB漏洞监测，系统漏洞监测，网页挂码监测等。</p><h2 id="阿里云盾特点"><a href="#阿里云盾特点" class="headerlink" title="阿里云盾特点"></a><strong>阿里云盾特点</strong></h2><p><strong>1、免费开通（DDoS基础防护）</strong></p><p>•无需购买昂贵设备</p><p>•无需专业安全团队</p><p>•拥有ECS即可免费开通云盾服务</p><p><strong>2、简单易用（WEB菜单式选择）</strong></p><p><strong>3、专业团队</strong></p><p>•完善的监控体系和安全团队，20年安全经验</p><h1 id="常见网络攻击类"><a href="#常见网络攻击类" class="headerlink" title="常见网络攻击类"></a><strong>常见网络攻击类</strong></h1><img src="https://i.loli.net/2019/09/14/qLmeFIaZcEjPfRM.jpg" style="zoom:40%;"><h2 id="网络防护-DDoS攻击防护"><a href="#网络防护-DDoS攻击防护" class="headerlink" title="网络防护_DDoS攻击防护"></a>网络防护_<strong>DDoS</strong>攻击防护</h2><h3 id="DDoS攻击是什么"><a href="#DDoS攻击是什么" class="headerlink" title="DDoS攻击是什么"></a><strong>DDoS攻击是什么</strong></h3><p>DDoS攻击：分布式拒绝服务攻击。</p><p>DDoS攻击目的：让既定目标，无法提供正常服务。防御难度很大。</p><p>DDoS防护功能：</p><ul><li><p>攻击流量的发现，牵引和自动处理</p></li><li><p>有效抵御基于网络层、传输层及应用层的DDoS攻击。包括但不限于：SYN Flood / UDP Flood / ICMP Flood /ACK Flood/DNS Query Flood / NTP Reply Flood,但不支持防护CC攻击。</p></li><li><p>攻击分析全自动监测。精准识别攻击，受到该攻击不会影响用户访问速度，妙级开启防护，基础DDoS防护免费（ECS、SLB、EIP、NAT）。</p></li><li><p>可管理。自动进行异常流量抓包，支持攻击事件、攻击流量的管理统计。</p></li></ul><h3 id="DDoS攻击防护原理"><a href="#DDoS攻击防护原理" class="headerlink" title="DDoS攻击防护原理"></a>DDoS攻击防护原理</h3><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/%E6%96%B0%E5%BB%BA%20Microsoft%20Visio%20Drawing.jpg" style="zoom:40%;"><h2 id="主机防护-安骑士"><a href="#主机防护-安骑士" class="headerlink" title="主机防护_安骑士"></a>主机防护_安骑士</h2><h3 id="安骑士架构及功能"><a href="#安骑士架构及功能" class="headerlink" title="安骑士架构及功能"></a><strong>安骑士架构及功能</strong></h3><img src="https://i.loli.net/2019/09/14/Wm4leBcKjshRN6F.jpg" style="zoom:50%;"><h3 id="安骑士特点"><a href="#安骑士特点" class="headerlink" title="安骑士特点"></a><strong>安骑士特点</strong></h3><p><strong>1、轻量化资源占用</strong></p><p>普通状态：安骑士插件占用约1%CPU及50MB内存</p><p>峰值状态：安骑士插件占用不超过10%CPU和80MB内存，如果占用资源超过峰值，插件停止工作。</p><p><strong>2、实时告警</strong></p><p>控制台集中管控，短信实时报警黑客攻击行为及高危漏洞风险。</p><p><strong>3、支持非阿里云服务器</strong> </p><p>腾讯云、青云、AWS、UCloud</p><h2 id="Web防护—Web应用防火墙（WAF）"><a href="#Web防护—Web应用防火墙（WAF）" class="headerlink" title="Web防护—Web应用防火墙（WAF）"></a>Web防护—Web应用防火墙（WAF）</h2><h3 id="应用防火墙（WAF）是什么"><a href="#应用防火墙（WAF）是什么" class="headerlink" title="应用防火墙（WAF）是什么"></a>应用防火墙（WAF）是什么</h3><h3 id="应用防火墙（WAF）功能"><a href="#应用防火墙（WAF）功能" class="headerlink" title="应用防火墙（WAF）功能"></a>应用防火墙（WAF）功能</h3><p><strong>1、常见Web攻击防护</strong></p><p>SQL注入、XSS跨站、Webshell上传、后门隔离保护、命令注入、非法HTTP协议请求、常见Web服务器漏洞攻击、核心文件非授权访问、路径穿越、扫描防护等。</p><p>0day补丁定期及时更新。</p><p><strong>2、CC恶意攻击防护</strong></p><p>对单一来源IP访问频率进行控制。</p><p>针对海量慢速请求攻击，根据统计响应码及URL请求分布，异常Referer及User-Agent特征识别，结合网站精准防护规则进行综合性防护。</p><p><strong>3、虚拟补丁</strong></p><p>在Web应用漏洞补丁发布和修复之前，通过调整Web防护策略实现快速防护。</p><p><strong>4、攻击事件管理</strong></p><p>支持攻击事件、攻击流量、攻击规模的集中管理统计</p><h3 id="应用防火墙（WAF）特点"><a href="#应用防火墙（WAF）特点" class="headerlink" title="应用防火墙（WAF）特点"></a>应用防火墙（WAF）特点</h3><p><strong>1、配置简单</strong></p><p>工作在用户端和网站之间，只需修改DNS记录</p><p><strong>2、强大的Web防御功能</strong></p><p>内置千条防护规则，每周有规则的新增和优化；Web 0day漏洞补丁修复，24小时内防护，全球同步；专业攻防团队进行漏洞研究；捕获0day漏洞生成防护规则。</p><p><strong>3、检测块、防护稳</strong></p><p>一毫秒内检测攻击并防护生效，防护无延迟。新的防护规则一分钟内全球同步，全年稳定在线可用。</p><h3 id="内容安全—（阿里绿网）"><a href="#内容安全—（阿里绿网）" class="headerlink" title="内容安全—（阿里绿网）"></a>内容安全—（阿里绿网）</h3><p><strong>内容安全功能</strong></p><ul><li>站点监测</li><li>OSS违规监测服务</li><li>内容监测API</li></ul><p><strong>内容安全特点</strong></p><p><strong>1、性价比高</strong></p><p>节省90%的人力成本，支持妙级返回结果，达到99%以上准确率。</p><p><strong>2、接入成本低</strong></p><p>一次接入即可提供音视频、图片、文字等形式的内容监测，覆盖恐暴、鉴黄、涉政、广告等风险防范。</p><p><strong>3、灵活服务方式</strong></p><p>与OSS、ECS等云产品无缝对接，还可通过API方式同用户审核系统集成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="阿里云" scheme="https://www.iamzmj.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="https://www.iamzmj.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="云盾" scheme="https://www.iamzmj.top/tags/%E4%BA%91%E7%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之负载均衡SLB</title>
    <link href="https://www.iamzmj.top/posts/b0f46966.html"/>
    <id>https://www.iamzmj.top/posts/b0f46966.html</id>
    <published>2019-09-12T04:10:21.000Z</published>
    <updated>2019-10-04T03:18:19.416Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p><img src="https://i.loli.net/2019/09/14/Z2PhoYi3sHEfqJ1.png" alt></p><h1 id="SLB的由来"><a href="#SLB的由来" class="headerlink" title="SLB的由来"></a>SLB的由来</h1><p>互联网应用随着业务量的发展、访问量和数据流量的不断增长，单一的服务器设备已经无法承担。</p><h1 id="SLB的定义"><a href="#SLB的定义" class="headerlink" title="SLB的定义"></a>SLB的定义</h1><p>将前台执行的任务分摊到后台多台较低配置的服务器处理，然后返回结果给客户。</p><h1 id="传统的SLB"><a href="#传统的SLB" class="headerlink" title="传统的SLB"></a>传统的SLB</h1><p>在客户端和服务器之间添加负载均衡硬件设备。</p><img src="https://i.loli.net/2019/09/12/6cusfmwQzaTtpSB.jpg" style="zoom:65%;"><p>好处：1、扩展了网络设备和服务器的带宽，增加了吞吐量。2、增强了网络数据处理能力。3、提高了网络灵活性和可用性。</p><p>劣势：1、设备价格昂贵。2、达到上限需继续购买硬。</p><h1 id="阿里弹性负载均衡SLB"><a href="#阿里弹性负载均衡SLB" class="headerlink" title="阿里弹性负载均衡SLB"></a>阿里弹性负载均衡SLB</h1><h2 id="弹性负载均衡定义"><a href="#弹性负载均衡定义" class="headerlink" title="弹性负载均衡定义"></a><strong>弹性负载均衡定义</strong></h2><p><strong>基于软件的</strong>负载均衡SLB解决方案。是<strong>对多台服务器进行的流量分发</strong>的一种负载均衡。</p><h2 id="弹性负载均衡特点"><a href="#弹性负载均衡特点" class="headerlink" title="弹性负载均衡特点"></a><strong>弹性负载均衡特点</strong></h2><p>1、高可用性（全冗余的设计，消除了单点故障，支持同城容灾；搭配DNS的话可以实现跨地域容灾，可用性高达99.95%；在流量波动的情况下，不中断对外服务。）</p><p>2、低成本（同传统负载均衡系统高投入相比投入下降60%，且不需要运维；在私网类型网络中免费使用。）</p><p>3、高安全性（结合云盾防DDoS系统。）</p><h2 id="弹性负载均衡应用场景"><a href="#弹性负载均衡应用场景" class="headerlink" title="弹性负载均衡应用场景"></a><strong>弹性负载均衡应用场景</strong></h2><p>—&gt;适合做应用程序的流量入口</p><p>SLB负载均衡，横向扩展的应用系统服务能力，适用于App Server    服务器Server。当部分ESC宕机后，应用系统能继续工作。</p><p>ESC，(阿里云后端服务器)可运行linux或Windows Server,(无状态无数据) Apache+Web应用，可水平扩展。</p><p>OSS，(对象存储)</p><p>RDS,（数据库应用）</p><p><strong>举例：</strong></p><img src="https://i.loli.net/2019/09/12/urB7EgcDUpVQAqf.jpg" alt="解读案例一：浙江政务服务网" style="zoom: 33%;"><center>浙江政务服务网</center><img src="https://i.loli.net/2019/09/12/AWJ8uobPctIzVRa.jpg" alt="学信网" style="zoom:33%;"><center>学信网</center>## 弹性SLB用途<p>1、流量分发扩展应用系统对外服务能力，通过消除单点障碍提升应用系统可用性。</p><p>2、SLB可以通过<strong>设置虚拟地址</strong>，<strong>将同一地域</strong>的多台ESC资源虚拟成一个高性能，高可用的资源地。（规则检查，按规则分发）</p><img src="https://i.loli.net/2019/09/12/CvNzQAhPsFMOYpq.jpg" style="zoom:50%;"><p>3、SLB检查ECS资源池中的ECS健康状况，能自动隔离异常ECS，解决单点故障，提高服务能力。</p><p>4、具备HTTP与TCP抗DDos攻击能力。（阿里云开启SLB实例服务的同时默认开启云盾服务）</p><p>5、SLB是ESC面向多机方案的一项配套服务，需要搭配ESC来使用。</p><h2 id="弹性SLB容灾"><a href="#弹性SLB容灾" class="headerlink" title="弹性SLB容灾"></a>弹性SLB容灾</h2><p>1、本地容灾</p><p>2、同城容灾（通过DNS轮询）</p><p>3、跨地域容灾（通过DNS轮询）</p><h2 id="弹性SLB的功能架构"><a href="#弹性SLB的功能架构" class="headerlink" title="弹性SLB的功能架构"></a>弹性SLB的功能架构</h2><img src="https://i.loli.net/2019/09/14/KQRf7dPY5jVTehz.jpg" style="zoom: 35%;"><h2 id="弹性SLB的主要功能"><a href="#弹性SLB的主要功能" class="headerlink" title="弹性SLB的主要功能"></a>弹性SLB的主要功能</h2><p>功能一：提供四层（TCP/UDP协议）和七层（HTTP/HTTPS协议）的均衡负载。</p><p>功能二：对后端ECS进行健康检查，自动屏蔽异常状态的ECS，待该ECS恢复正常后自动解除屏蔽。</p><p>功能三：提供会话保持功能，在Session的生命周期内，将同一客户端的请求转发到同一ECS上。</p><p>功能四：提供轮询、加权轮询（WRR）、加权最小连接数（WLC）3种转发方式。</p><ul><li>轮询：依次将请求发送到后端ECS上。</li><li>加权轮询：为后端的ECS设置权重，权重越高被分发的几率越大。</li><li>加权最小连接数：在后端ECS权重相同的情况下，将请求分发到当前连接数最小的ECS上。</li></ul><p>功能五：针对HTTP协议，提供统一的证书管理服务，解密处理在SLB实例上，降低后端ECS的CPU开销。</p><p>功能六：支持公网或私网类型的负载均衡。(私网类型免费试用)。</p><p>功能七：带宽控制，支持根据监听设置其对应服务所达到的带宽峰值。</p><p>功能八：安全防护，结合云盾，可提供5G以下防DDoS攻击能力。</p><p>功能九：容灾，支持同一地域跨可用区的容灾，结合DNS轮询支持跨地域容灾。</p><p>功能十：提供控制台，API、SDK三种控制方式。</p><h2 id="弹性SLB使用"><a href="#弹性SLB使用" class="headerlink" title="弹性SLB使用"></a>弹性SLB使用</h2><p>开通SLB之前，需要考虑的问题</p><p>1、ESC部署在什么区域？</p><p>按照用户所在位置就近选择区域，来提升用户访问速率。</p><p>2、需要多少台后端服务器？</p><p>根据实际业务需求申请并部署。</p><p>3、采用什么样的协议进行SLB转发？</p><p>根据应用系统使用的协议选择四层或七层协议。</p><p>4、SLB是公网还是内网服务？</p><p>根据SLB的用途进行选择。</p><p>5、是否需要域名？</p><p>需要就提前准备域名。</p><p>选择离用户最近节点的SLB服务，配置实例后才可使用。默认按量付费的实例为60个。</p><h2 id="弹性SLB服务监听设置"><a href="#弹性SLB服务监听设置" class="headerlink" title="弹性SLB服务监听设置"></a>弹性SLB服务监听设置</h2><p>1、七层网络(HTTP)监听配置——适用场景为:SLB使用HTTP或者HTTPs协议的负载均衡。（会话保持基于COOKIE）</p><p>2、七层网络(HTTPs)监听配置 比HTTP多了一个证书的服务。（会话保持基于COOKIE）</p><p>3、四层网络(TCP)监听配置——适用场景为:SLB使用TCP协议的负载均衡。（会话保持基于源地址）</p><p><strong>监听配置的限制</strong></p><ul><li><p>负载均衡数量50个/实例</p></li><li><p>每个用户上传证书的数量小于等于100个</p></li></ul><p><strong>如何选择监听协议</strong></p><img src="https://i.loli.net/2019/09/14/J9lUIyDERN6uQMP.jpg" style="zoom: 40%;"><h2 id="弹性SLB服务管理后端服务器"><a href="#弹性SLB服务管理后端服务器" class="headerlink" title="弹性SLB服务管理后端服务器"></a>弹性SLB服务管理后端服务器</h2><p>主备服务器组：</p><ul><li><p>主机正常，流量往主机走；主机宕机，流量往备机走。</p></li><li><p>备机不进行健康检查，所以主机健康检查失败，系统将流量直接切到备机上，主机健康检查恢复正常后流量重新切回主机。</p></li><li><p>一个主备服务器组只允许添加两个ECS实例，一个作为主机，一个作为备机，主备服务器组只支持四层监听。</p></li></ul><p>虚拟服务器组：</p><ul><li><p>当需要将不同的请求转发到不同的后端服务器上时，或需要通过域名或URL进行请求转发，可以选择虚拟服务器组。</p></li><li><p>如设置了虚拟服务器组，默认在SLB实例维度末端添加的后端服务器不再接受请求。</p></li></ul><p>权值设置：最高为100，最低为0，权值越高轮询概率越大。</p><h2 id="弹性SLB证书管理"><a href="#弹性SLB证书管理" class="headerlink" title="弹性SLB证书管理"></a>弹性SLB证书管理</h2><p>1、SLB证书只支持PEM格式的证书，在上传证书之前需确保证书、证书链和私钥符合格式要求，其中私钥是加密存储的。</p><p>2、自建证书可以通过OpenSSL生成。</p><p>3、证书管理是地域及资源</p><p>4、SLB协议前端口选择HTTPs协议，端口选择443；后端选择HTTP，端口选择80。</p><p>5、SLB支持管理100个证书用户。</p><p>服务器证书（单项认证的证书）、CA证书（双向认证的证书）</p><h2 id="弹性SLB的API"><a href="#弹性SLB的API" class="headerlink" title="弹性SLB的API"></a>弹性SLB的API</h2><p>通过向负载均衡API服务端地址发送HTTP GET请求，并按照接口说明在请求中加入相应请求参数来完成的；根据请求的处理情况，系统会返回处理结果。</p><p>请求的结构：</p><ul><li>服务地址：slb.aliyuncs.com</li><li>通信协议：支持HTTP/HTTPS,推荐HTTPS</li><li>请求方式：支持HTTP GET方法发送请求，这种方式下请求参数需要包含在请求URL中。</li><li>字符编码：请求及返回结果采用UTF-8字符集进行编码。</li></ul><p><strong>弹性SLB的API-LoadBalancer相关API</strong></p><p><strong>弹性SLB的API-Listener相关API</strong></p><p><strong>弹性SLB的API-BackendServer相关API</strong></p><p>以上这些均可在<a href="http://api.aliyun.com" rel="external nofollow noopener noreferrer" target="_blank">阿里云API官网</a> 查看和调用。</p><h2 id="SLB相关思考题"><a href="#SLB相关思考题" class="headerlink" title="SLB相关思考题"></a>SLB相关思考题</h2><p><strong>题目1</strong>：</p><p>SLB连接1台ECS服务器，这种情况下如何将任务进行流量分发？</p><p><strong>答</strong>：</p><p>初始配置ECS时默认网络是固定带宽的，(例如初始创建5M带宽)随着业务的发展，继续升级带宽会造成浪费。阿里云支持续费降配方式去修改网络计费方式。但是需要等到下个计费周期，在这种的情况下最简单最快的方法就是开通SLB，通过SLB来实现带宽的扩展。SLB默认采用按流量计费的方式，SLB作为前段服务，后端连接ESC即可，这样做还方便后期增加ESC来实现多台ESC的负载。</p><p>如果你的业务场景（网站平时流量不高，基本带宽够用，但在明显的峰谷时却不能流畅访问）不妨考虑在前端增加一个SLB。</p><p><strong>题目2</strong>：</p><p>后端20台ECS服务器，有一台的ECS权值设置成0，会发生什么？</p><p><strong>答</strong>：</p><p>由于一台ECS服务器权值被设置成0，会导致SLB健康检查异常</p><p>由于一台ECS服务器权值被设置成0，SLB不会将新的连接转发给该ECS</p><p><strong>题目3</strong>：</p><p>设置ECS的权重为0和移除ECS的区别</p><p><strong>答</strong>:</p><p>ECS权重设置为0时，ECS已建立的长连接依然存在。</p><p>设置ECS权重值为0只适用于主动运维，如部署应用或升级ECS。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="阿里云" scheme="https://www.iamzmj.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="https://www.iamzmj.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="SLB" scheme="https://www.iamzmj.top/tags/SLB/"/>
    
  </entry>
  
  <entry>
    <title>Hexo nest添加雪花飘落效果</title>
    <link href="https://www.iamzmj.top/posts/c5826913.html"/>
    <id>https://www.iamzmj.top/posts/c5826913.html</id>
    <published>2019-09-04T07:12:45.000Z</published>
    <updated>2019-10-28T17:26:05.215Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。</p><p><img src="https://raw.githubusercontent.com/zhanminjie/mybigimage/master/blogimage/12345.png" alt></p><p>为了增加博客站点的趣味性，这次主要介绍 <strong>NexT 7.2.0</strong> 在PC端下添加雪花飘落的效果。</p><h1 id="添加雪花飘落效果"><a href="#添加雪花飘落效果" class="headerlink" title="添加雪花飘落效果"></a>添加雪花飘落效果</h1><p>在<code>\themes\next\source\js\src</code>目录下新建一个<code>snow.js</code>文件，复制粘贴一下代码。</p><p>样式一是六边形的雪片，样式二是小圆点雪花，选择自己喜欢的样式即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*样式一*/</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line">$.fn.snow = <span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> $flake = $(<span class="string">'&lt;div id="snowbox" /&gt;'</span>).css(&#123;<span class="string">'position'</span>: <span class="string">'absolute'</span>,<span class="string">'z-index'</span>:<span class="string">'9999'</span>, <span class="string">'top'</span>: <span class="string">'-50px'</span>&#125;).html(<span class="string">'&amp;#10052;'</span>),</span><br><span class="line">documentHeight = $(<span class="built_in">document</span>).height(),</span><br><span class="line">documentWidth= $(<span class="built_in">document</span>).width(),</span><br><span class="line">defaults = &#123;</span><br><span class="line">minSize: <span class="number">10</span>,</span><br><span class="line">maxSize: <span class="number">20</span>,</span><br><span class="line">newOn: <span class="number">1000</span>,</span><br><span class="line">flakeColor: <span class="string">"#AFDAEF"</span> <span class="comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span></span><br><span class="line">&#125;,</span><br><span class="line">options= $.extend(&#123;&#125;, defaults, options);</span><br><span class="line"><span class="keyword">var</span> interval= setInterval( <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> startPositionLeft = <span class="built_in">Math</span>.random() * documentWidth - <span class="number">100</span>,</span><br><span class="line">startOpacity = <span class="number">0.5</span> + <span class="built_in">Math</span>.random(),</span><br><span class="line">sizeFlake = options.minSize + <span class="built_in">Math</span>.random() * options.maxSize,</span><br><span class="line">endPositionTop = documentHeight - <span class="number">200</span>,</span><br><span class="line">endPositionLeft = startPositionLeft - <span class="number">500</span> + <span class="built_in">Math</span>.random() * <span class="number">500</span>,</span><br><span class="line">durationFall = documentHeight * <span class="number">10</span> + <span class="built_in">Math</span>.random() * <span class="number">5000</span>;</span><br><span class="line">$flake.clone().appendTo(<span class="string">'body'</span>).css(&#123;</span><br><span class="line">left: startPositionLeft,</span><br><span class="line">opacity: startOpacity,</span><br><span class="line"><span class="string">'font-size'</span>: sizeFlake,</span><br><span class="line">color: options.flakeColor</span><br><span class="line">&#125;).animate(&#123;</span><br><span class="line">top: endPositionTop,</span><br><span class="line">left: endPositionLeft,</span><br><span class="line">opacity: <span class="number">0.2</span></span><br><span class="line">&#125;,durationFall,<span class="string">'linear'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).remove()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, options.newOn);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.fn.snow(&#123; </span><br><span class="line">    minSize: <span class="number">5</span>, <span class="comment">/* 定义雪花最小尺寸 */</span></span><br><span class="line">    maxSize: <span class="number">50</span>,<span class="comment">/* 定义雪花最大尺寸 */</span></span><br><span class="line">    newOn: <span class="number">300</span>  <span class="comment">/* 定义密集程度，数字越小越密集 */</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*样式二*/</span></span><br><span class="line"><span class="comment">/* 控制下雪 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">snowFall</span>(<span class="params">snow</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 可配置属性 */</span></span><br><span class="line">    snow = snow || &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.maxFlake = snow.maxFlake || <span class="number">200</span>;   <span class="comment">/* 最多片数 */</span></span><br><span class="line">    <span class="keyword">this</span>.flakeSize = snow.flakeSize || <span class="number">10</span>;  <span class="comment">/* 雪花形状 */</span></span><br><span class="line">    <span class="keyword">this</span>.fallSpeed = snow.fallSpeed || <span class="number">1</span>;   <span class="comment">/* 坠落速度 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 兼容写法 */</span></span><br><span class="line">requestAnimationFrame = <span class="built_in">window</span>.requestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.mozRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.webkitRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.oRequestAnimationFrame ||</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123; setTimeout(callback, <span class="number">1000</span> / <span class="number">60</span>); &#125;;</span><br><span class="line"></span><br><span class="line">cancelAnimationFrame = <span class="built_in">window</span>.cancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.mozCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.webkitCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.msCancelAnimationFrame ||</span><br><span class="line"><span class="built_in">window</span>.oCancelAnimationFrame;</span><br><span class="line"><span class="comment">/* 开始下雪 */</span></span><br><span class="line">snowFall.prototype.start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* 创建画布 */</span></span><br><span class="line">    snowCanvas.apply(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/* 创建雪花形状 */</span></span><br><span class="line">    createFlakes.apply(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/* 画雪 */</span></span><br><span class="line">    drawSnow.apply(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 创建画布 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">snowCanvas</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 添加Dom结点 */</span></span><br><span class="line">    <span class="keyword">var</span> snowcanvas = <span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>);</span><br><span class="line">    snowcanvas.id = <span class="string">"snowfall"</span>;</span><br><span class="line">    snowcanvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">    snowcanvas.height = <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">    snowcanvas.setAttribute(<span class="string">"style"</span>, <span class="string">"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;"</span>);</span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(snowcanvas);</span><br><span class="line">    <span class="keyword">this</span>.canvas = snowcanvas;</span><br><span class="line">    <span class="keyword">this</span>.ctx = snowcanvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line">    <span class="comment">/* 窗口大小改变的处理 */</span></span><br><span class="line">    <span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        snowcanvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">        <span class="comment">/* snowcanvas.height = window.innerHeight */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 雪运动对象 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flakeMove</span>(<span class="params">canvasWidth, canvasHeight, flakeSize, fallSpeed</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvasWidth);   <span class="comment">/* x坐标 */</span></span><br><span class="line">    <span class="keyword">this</span>.y = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvasHeight);  <span class="comment">/* y坐标 */</span></span><br><span class="line">    <span class="keyword">this</span>.size = <span class="built_in">Math</span>.random() * flakeSize + <span class="number">2</span>;          <span class="comment">/* 形状 */</span></span><br><span class="line">    <span class="keyword">this</span>.maxSize = flakeSize;                           <span class="comment">/* 最大形状 */</span></span><br><span class="line">    <span class="keyword">this</span>.speed = <span class="built_in">Math</span>.random() * <span class="number">1</span> + fallSpeed;         <span class="comment">/* 坠落速度 */</span></span><br><span class="line">    <span class="keyword">this</span>.fallSpeed = fallSpeed;                         <span class="comment">/* 坠落速度 */</span></span><br><span class="line">    <span class="keyword">this</span>.velY = <span class="keyword">this</span>.speed;                             <span class="comment">/* Y方向速度 */</span></span><br><span class="line">    <span class="keyword">this</span>.velX = <span class="number">0</span>;                                      <span class="comment">/* X方向速度 */</span></span><br><span class="line">    <span class="keyword">this</span>.stepSize = <span class="built_in">Math</span>.random() / <span class="number">30</span>;                 <span class="comment">/* 步长 */</span></span><br><span class="line">    <span class="keyword">this</span>.step = <span class="number">0</span>                                       <span class="comment">/* 步数 */</span></span><br><span class="line">&#125;</span><br><span class="line">flakeMove.prototype.update = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="keyword">this</span>.x,</span><br><span class="line">        y = <span class="keyword">this</span>.y;</span><br><span class="line">    <span class="comment">/* 左右摆动(余弦) */</span></span><br><span class="line">    <span class="keyword">this</span>.velX *= <span class="number">0.98</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.velY &lt;= <span class="keyword">this</span>.speed) &#123;</span><br><span class="line">        <span class="keyword">this</span>.velY = <span class="keyword">this</span>.speed</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.velX += <span class="built_in">Math</span>.cos(<span class="keyword">this</span>.step += <span class="number">.05</span>) * <span class="keyword">this</span>.stepSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.y += <span class="keyword">this</span>.velY;</span><br><span class="line">    <span class="keyword">this</span>.x += <span class="keyword">this</span>.velX;</span><br><span class="line">    <span class="comment">/* 飞出边界的处理 */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.x &gt;= canvas.width || <span class="keyword">this</span>.x &lt;= <span class="number">0</span> || <span class="keyword">this</span>.y &gt;= canvas.height || <span class="keyword">this</span>.y &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.reset(canvas.width, canvas.height)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* 飞出边界-放置最顶端继续坠落 */</span></span><br><span class="line">flakeMove.prototype.reset = <span class="function"><span class="keyword">function</span>(<span class="params">width, height</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * width);</span><br><span class="line">    <span class="keyword">this</span>.y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span>.size = <span class="built_in">Math</span>.random() * <span class="keyword">this</span>.maxSize + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">this</span>.speed = <span class="built_in">Math</span>.random() * <span class="number">1</span> + <span class="keyword">this</span>.fallSpeed;</span><br><span class="line">    <span class="keyword">this</span>.velY = <span class="keyword">this</span>.speed;</span><br><span class="line">    <span class="keyword">this</span>.velX = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span></span><br><span class="line">flakeMove.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params">ctx</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> snowFlake = ctx.createRadialGradient(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="number">0</span>, <span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="keyword">this</span>.size);</span><br><span class="line">    snowFlake.addColorStop(<span class="number">0</span>, <span class="string">"rgba(255, 255, 255, 0.9)"</span>);  <span class="comment">/* 此处是雪花颜色，默认是白色 */</span></span><br><span class="line">    snowFlake.addColorStop(<span class="number">.5</span>, <span class="string">"rgba(255, 255, 255, 0.5)"</span>); <span class="comment">/* 若要改为其他颜色，请自行查 */</span></span><br><span class="line">    snowFlake.addColorStop(<span class="number">1</span>, <span class="string">"rgba(255, 255, 255, 0)"</span>);    <span class="comment">/* 找16进制的RGB 颜色代码。 */</span></span><br><span class="line">    ctx.save();</span><br><span class="line">    ctx.fillStyle = snowFlake;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="keyword">this</span>.size, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">    ctx.fill();</span><br><span class="line">    ctx.restore();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* 创建雪花-定义形状 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createFlakes</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxFlake = <span class="keyword">this</span>.maxFlake,</span><br><span class="line">        flakes = <span class="keyword">this</span>.flakes = [],</span><br><span class="line">        canvas = <span class="keyword">this</span>.canvas;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; maxFlake; i++) &#123;</span><br><span class="line">        flakes.push(<span class="keyword">new</span> flakeMove(canvas.width, canvas.height, <span class="keyword">this</span>.flakeSize, <span class="keyword">this</span>.fallSpeed))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 画雪 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawSnow</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxFlake = <span class="keyword">this</span>.maxFlake,</span><br><span class="line">        flakes = <span class="keyword">this</span>.flakes;</span><br><span class="line">    ctx = <span class="keyword">this</span>.ctx, canvas = <span class="keyword">this</span>.canvas, that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">/* 清空雪花 */</span></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; maxFlake; e++) &#123;</span><br><span class="line">        flakes[e].update();</span><br><span class="line">        flakes[e].render(ctx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*  一帧一帧的画 */</span></span><br><span class="line">    <span class="keyword">this</span>.loop = requestAnimationFrame(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        drawSnow.apply(that);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 调用及控制方法 */</span></span><br><span class="line"><span class="keyword">var</span> snow = <span class="keyword">new</span> snowFall(&#123;<span class="attr">maxFlake</span>:<span class="number">60</span>&#125;);</span><br><span class="line">snow.start();</span><br></pre></td></tr></table></figure><p>然后在<code>\themes\next\layout\_layout.swig</code>文件里的<code>&lt;body&gt;&lt;/body&gt;</code>内部进行引用：``</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 雪花特效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> windowWidth = $(<span class="built_in">window</span>).width();</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">if</span> (windowWidth &gt; <span class="number">480</span>) &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    document.write('<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/snow.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">\</span>/<span class="attr">script</span>&gt;</span>');</span></span></span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>  即可本地预览效果。</p><p>参考文章: <a href="https://blog.csdn.net/stormdony/article/details/86001618" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/stormdony/article/details/86001618</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="https://www.iamzmj.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://www.iamzmj.top/tags/Hexo/"/>
    
      <category term="nest" scheme="https://www.iamzmj.top/tags/nest/"/>
    
      <category term="雪花" scheme="https://www.iamzmj.top/tags/snowflake/"/>
    
  </entry>
  
</feed>
