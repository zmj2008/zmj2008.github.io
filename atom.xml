<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>占敏捷</title>
  
  <subtitle>有事没事写点什么</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.iamzmj.top/"/>
  <updated>2020-01-31T04:28:23.571Z</updated>
  <id>https://www.iamzmj.top/</id>
  
  <author>
    <name>Martin Zhan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>西餐餐桌礼仪有哪些</title>
    <link href="https://www.iamzmj.top/posts/49f3b7ae.html"/>
    <id>https://www.iamzmj.top/posts/49f3b7ae.html</id>
    <published>2020-01-29T03:06:12.000Z</published>
    <updated>2020-01-31T04:28:23.571Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>第一次吃西餐很尴尬，就餐时不知所措像是个乡巴佬。但很多事就是这样，当你亲身经历一些事后，再去看一些书和一些文字说明，会有更深刻且透彻清晰的理解。为了避免大家和我一样发生不必要的尴尬场面，分享一些餐桌礼仪 Table manners 。</p><h1 id="找座位"><a href="#找座位" class="headerlink" title="找座位"></a>找座位</h1><p>通常情况下大家可以在座位表上找到自己的名字，然后按照座位表就坐即可。如果在没有座位表的情况下该如何坐呢？</p><p><strong>西餐通常的就坐方式遵循三个原则：</strong>  </p><p>1.一男一女间隔开</p><p>2.伴侣拆散坐</p><p>3.男主人右手边坐的是女vip，女主人右手边坐的是男vip</p><p>4、男士应该请女士坐在靠墙的位置上，年长者通常坐在靠墙的位置。</p><p>5、男士应该让女士避免坐在人来人往的过道边上，如果有两男一女一起用餐，女士应该坐在两位男士的中间</p><center><img src="http://111.229.17.211:3389/imgs/2020/01/fe82216aeaeef64a.jpg" width="600"></center>  聪明的小伙伴们可以等到大家都坐定差不多的时候，再去找位子，这样就避免了不小心坐到vip位子上的尴尬。 <p> 男生在女孩子就坐时要帮忙拉开椅子。 </p><h1 id="进餐前"><a href="#进餐前" class="headerlink" title="进餐前"></a>进餐前</h1><p><strong>餐巾的使用：</strong>坐好进餐前需要铺餐巾，餐巾通常是放在盘子上的。</p><p>将餐巾打开，对折（可以对角折成三角形，也可以对折成长方形）折痕那一面朝向自己，摊铺在大腿上。 如果中途要出去（接电话或者去洗手间），将餐巾放在椅子上,示意服务员回来还要继续用餐；用过餐后，将餐巾叠好放在盘子右边。</p><center><img src="http://111.229.17.211:3389/imgs/2020/01/d583870c603d5b97.jpg" width="600"></center>常见餐巾的错误使用有：~~餐巾围脖~~，~~餐巾垫在盘子下（多出现在中餐酒席）~~。<p><strong>刀叉的使用</strong>： 刀子和勺放在餐盘的右边，叉子放在左边，每次桌上摆放的刀叉不会超过三副。 </p><p>如果这顿饭有三道以上的菜品，那么只有在使用了已摆放的刀叉之后，服务员才会放置新的刀叉。 </p><p>刀叉是按照从外侧向里侧的顺序使用的。</p><p>刀叉的尺寸大小也决定了用途的不同。吃肉时用大号的刀叉；吃开胃菜、沙拉或者甜点时， 用中号刀叉；喝汤用大号勺；喝咖啡或者吃冰淇淋用小号勺。 </p><center><img src="http://111.229.17.211:3389/imgs/2020/01/d5fb9f27b0d81fd3.jpg" width="600"></center>​       <h1 id="进餐中"><a href="#进餐中" class="headerlink" title="进餐中"></a>进餐中</h1><p>西餐讲究量入为出，吃多少就要多少，不够再取，不要浪费，更不要打包,服务员上菜不要主动去接，会有抢菜的嫌疑，最好等服务员送到面前再拿。 吃西餐的时候要闭着嘴嚼。</p><p><strong>倒酒顺序：</strong>服务员一般会从客人的左侧上菜，右侧倒酒。西餐中，请不要给自己倒酒，而是等服务员添加；另外，酒不能添满，最多不超过1/2即可。</p><p><strong>上菜顺序：</strong>头盘——开胃酒，汤——白葡萄酒，鱼菜（鱼、海鲜）——白葡萄酒，肉菜（牛羊猪肉）——红葡萄酒，甜点——甜白、贵腐 </p><h2 id="酒"><a href="#酒" class="headerlink" title="酒"></a>酒</h2><p>西餐中，桌面通常会在靠近右手边放3-4个杯子，呈45度角摆放。 右下角最靠近你右手的是起泡酒杯，高而瘦的杯型方便大家观赏气泡上升的样子。</p><p>稍稍远一些的第二个杯子，是喝白葡萄酒的，它不同于起泡酒杯，是我们常见的形状。</p><p>再远一些的第三个杯子是红酒杯，它形状类似白葡萄酒杯（当然具体形状也不是绝对的，取决于主人的爱好，这里说的是一般情况），但稍高大一些。</p><p>离你右手最远的杯子则是水杯，它也是最高最大的。在换酒，换菜时饮水漱口，可以帮助更好品尝酒菜滋味。</p><center><img src="http://111.229.17.211:3389/imgs/2020/01/774ee12063ec8ea2.jpg" width="600"></center>​    <h2 id="面包"><a href="#面包" class="headerlink" title="面包"></a>面包</h2><p>面包有时候会放在左手的小盘子里，有时候会放在大框子里需要自己挑选。<font color="red">如果筐子离你太远，千万不要起身弯腰去够，请靠近面包的人帮你递过来就行了（同理还有盐和胡椒的瓶子）</font>。吃面包用手掰，掰成没一口可以吃完的分量，再用面包盘上的黄油刀刮一点黄油往上抹就行了。 </p><h2 id="前菜"><a href="#前菜" class="headerlink" title="前菜"></a>前菜</h2><p>前菜有时是沙拉，大块的蔬菜一口包进去不美观，需要切切切。切食物时，手肘，手腕都不要碰到餐桌，呈悬空状态： </p><p>有时候我们要谈话或者上厕所，需要将餐具稍稍放下，应该怎么放呢？如下图左，摆成一个八字，服务员就知道不要收掉。而吃完这盘菜需要服务员收碗时，则摆成下图右，刀叉柄朝5点方向。 </p><center><img src="http://111.229.17.211:3389/imgs/2020/01/4dd0a15e3393c48b.jpg" width="600"></center>​      <h2 id="汤"><a href="#汤" class="headerlink" title="汤"></a>汤</h2><p>无论是西餐还是中餐，都要注意一个点，<font color="red">永远不要低头去够桌上的汤</font>。要把勺子举到与不低头情况下的嘴同高，将汤送入。怎么舀汤呢？勺子由内向外是英式舀汤的方法，勺子由外向内是法式的。如下图，左为英式，右为法式 </p><center><img src="http://111.229.17.211:3389/imgs/2020/01/58a38a2f44797b15.jpg" width="400"></center>汤剩下一个底了怎么办呢？这一点英法的礼仪又不同了，英国是将碗的内侧抬起，碗朝着外面倾斜，汤聚在碗的外侧，再用勺子去盛。法式相反，将汤碗外侧抬起，汤汇聚在碗内侧，再用勺子去刮。但无论如何，端起不带把的汤碗对嘴喝是万万不可以的。 <h2 id="主菜"><a href="#主菜" class="headerlink" title="主菜"></a>主菜</h2><p><strong>海鲜</strong>：叉子通常是四个齿的，而吃海鲜的叉子会是三个齿，且微微向上翘起。鱼肉易碎，如果连特制的叉子也无法将其盛起，就用勺子帮忙吧。如果鱼带骨，吃完一面不要翻，将骨头剔除，再吃剩下的。吃生蚝，龙虾，田螺等，都会有自己特别的工具，按照顺序使用就好。 </p><p><strong>肉类</strong>：这里涉及到切。通常我们将叉子叉在肉上，刀靠近叉子轻轻切肉，这样可以防止食物移动。一般来说，<font color="red">从肉的左边开始，往右切</font>，肉的大小适宜一口吃下。</p><p>欧式和美式切东西的方式不尽相同：</p><center><img src="http://111.229.17.211:3389/imgs/2020/01/14b560e0f2d10e45.jpg" width="600"></center>左边的美式礼仪，先将一整块肉全切成一小块一小块，放下刀子，右手拿叉，将一盘碎肉叉着吃。<p>右边比较传统算是欧式，切一块吃一块，依旧左叉右刀。若牛肉有骨，需要沿着骨头切。</p><p>如果吃鸡，有细小的骨头需要吐出来，千万不要直接吐到桌上。把餐巾打开，手拿着遮挡住嘴，叉子伸到嘴边，将骨头吐到叉子上。再将叉子上的骨头放入碟子靠自己的那一边。 </p><p><strong>意大利面</strong>：将左右手的叉勺于桌面交换。用叉子叉一些面条，再抵着勺子内部旋转，把面条卷起来吃。 </p><center><img src="http://111.229.17.211:3389/imgs/2020/01/a1975c4bf099bb5f.jpg" width="400"></center>## 甜点<p>甜点用盘子上方的叉勺，叉子用来叉水果，勺用来吃布丁类的软食物。有时候遇到了水果块头太大无法一口吞下的情况，也可以用勺代替刀，帮助切一下再吃。 </p><h2 id="Cheese-board"><a href="#Cheese-board" class="headerlink" title="Cheese board"></a><strong>Cheese board</strong></h2><p>用随着cheese board端来的刀切cheese，将它放在一起端来的饼干上，直接用手拿着吃。 </p><p>🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻🍻</p><p>整个进餐过程中需要注意的地方：</p><p>1.手握刀叉，不可以去端酒杯，更不可以用刀叉指向别人。 </p><p>2.用餐巾可以擦嘴，擦嘴时将餐巾的角卷在食指上，轻轻擦嘴角。如果是很严重的脏渍，就不要在餐桌上用餐巾擦了，去洗手间。</p><p>3电话静音。</p><p>4.不要包着食物说话。 </p><p>5.如果汤和菜比较烫，可以等凉一些了再吃，不要用嘴吹,喝汤时不要吸啜，发出声音。 </p><p>6.剔牙时，要用手或者餐巾遮住；用过的餐具、牙签都要放在盘子里，别扔在桌上。</p><p>7.用餐过程中如果要叫服务员，不要大声叫喊或者打响指，这样很不礼貌，只需做个手势让服务员看到即可。</p><p>8.嘴里还有食物的时候不要开口说话，要先咀嚼吞咽下去后再开口。 </p><p>9.<font color="red">整个用餐期间都不要将手腕、胳膊肘放在桌上，更不要托着头</font>。 </p><h1 id="餐后"><a href="#餐后" class="headerlink" title="餐后"></a>餐后</h1><p>用餐结束后，餐巾脏渍朝内叠起，放到原本的餐盘内。 </p><p>如果用餐愉快，千万不要忘了感谢主人，最礼貌的做法是寄一张感谢函呢。 </p><h1 id="着装"><a href="#着装" class="headerlink" title="着装"></a>着装</h1><p>西餐的穿衣礼仪 Dress Code最正式的晚礼服——白领结（White Tie） 其实就是全套的礼服和下摆及地的长裙，在具体的规格、面料、以及配饰、手袋等方面都有严格的规定。  </p><p>半正式的晚礼服——黑领结（Black Tie）在美国又被称作无尾礼服（Tuxedos），相比白领结来 半正式的晚礼服—黑领结（Black Tie）在美国又被称作无尾礼服（Tuxedos），相比白领结来 。 </p><p>精致休闲装（Smart Casual）既然有精致盖头，也就是说休闲要适度，不可以过分得随心所欲，优雅和精致是必须的。 牛仔裤、无领的Polo衫、运动鞋或者凉鞋就免了吧。女士们裙子仍不宜过短，大方得体，不要搞得花里胡哨才好。 </p><iframe height="400" width="600" src="//player.bilibili.com/player.html?aid=85870579&cid=146779542&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>推荐一部英剧《唐顿庄园》，通过观看这部剧集也可以学习正式的西餐礼仪。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="美食" scheme="https://www.iamzmj.top/categories/%E7%BE%8E%E9%A3%9F/"/>
    
    
      <category term="西餐" scheme="https://www.iamzmj.top/tags/%E8%A5%BF%E9%A4%90/"/>
    
      <category term="礼仪" scheme="https://www.iamzmj.top/tags/%E7%A4%BC%E4%BB%AA/"/>
    
  </entry>
  
  <entry>
    <title>《东京大饭店》赏析</title>
    <link href="https://www.iamzmj.top/posts/4f551a90.html"/>
    <id>https://www.iamzmj.top/posts/4f551a90.html</id>
    <published>2020-01-28T03:34:19.000Z</published>
    <updated>2020-01-28T14:29:52.914Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="剧集简介"><a href="#剧集简介" class="headerlink" title="剧集简介"></a>剧集简介</h1><p>《东京大饭店》：Grand Maison东京，是由冢原亚由子执导，<strong>木村拓哉</strong>、铃木京香、玉森裕太、宽一郎、朝仓亚纪等主演。于2019年10月20日在日本首播。 主要讲述木村拓哉饰演的 主厨尾花夏树失去了自己的餐厅和伙伴，人生跌入低谷后与铃木京香饰演的女性相遇，再度燃起主厨的信念，立志打造三星级米其林餐厅的故事。  除了满屏的美食治愈力，职场细节依然保持了日剧优质水准，豆瓣评分达8.7分。</p><img src="http://111.229.17.211:3389/imgs/2020/01/22087b772d0bd9b9.jpg">      <div id="aplayer-EBZFmfoK" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1407577736" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><img src="http://111.229.17.211:3389/imgs/2020/01/449f9b6d453d9023.jpg">  <p>Grand Maison Tokyo 最为核心的装修风格可能就是时下日本很是流行的「破墙风」了，保持着粗犷的水泥墙，不是极致的精致，而是在粗糙与贴近自然之间找到了一种和谐的平衡。<img src="http://111.229.17.211:3389/imgs/2020/01/14724cf43cbbe028.jpg">   </p><h1 id="美食集锦"><a href="#美食集锦" class="headerlink" title="美食集锦"></a>美食集锦</h1><p><strong>1.Grand Maison 东京试营业期间菜谱：</strong></p><p>第一道菜：开胃菜 鸡油菌辣椒酥饼<img src="http://111.229.17.211:3389/imgs/2020/01/bfab3f33847db90a.jpg">  </p><p>第二道菜：前菜 羊奶巴伐露<img src="http://111.229.17.211:3389/imgs/2020/01/a007b38b9fbfff1e.jpg">  </p><p>第三道菜：前菜 茄子白饼干  <img src="http://111.229.17.211:3389/imgs/2020/01/a96419976c006cc5.jpg">  </p><p>第四道菜：前菜 圣米歇尔山贻贝冷烫  <img src="http://111.229.17.211:3389/imgs/2020/01/541526e2a55f4814.jpg">  </p><p>第五道菜：主菜 蘑菇蛤蜊黄油派  <img src="http://111.229.17.211:3389/imgs/2020/01/6104c4f6265e76f2.jpg">  </p><p>第六道菜：主菜 烤牛肚  <img src="http://111.229.17.211:3389/imgs/2020/01/80c8b6d24c9618fd.jpg">  </p><p>第七道菜：海鲜 乾酪烤海胆  <img src="http://111.229.17.211:3389/imgs/2020/01/a4c9b58fa8dd149f.jpg">  </p><p>第八道菜：肉类 烤本州鹿里脊配鹿血清汤  <img src="http://111.229.17.211:3389/imgs/2020/01/664933da71cfb751.jpg">  </p><p>第九道菜：甜品 蛋白糖冰淇凌  <img src="http://111.229.17.211:3389/imgs/2020/01/102faf595f113fa2.jpg">  </p><p>第十道菜：甜品 蒙布朗<img src="http://111.229.17.211:3389/imgs/2020/01/c85b39b8d99ce8b7.jpg">  </p><p><strong>凭借着大家的努力和精湛的烹饪技术，Grand Maison 东京在开店第一年便成为世界最受欢迎餐厅第10位！</strong></p><hr><p><strong>2.Grand Maison 东京评选米其林星级时所用菜谱：</strong></p><p>第一道菜：开胃菜 法式海胆土司  <img src="http://111.229.17.211:3389/imgs/2020/01/cde8f0d1a616ff8c.jpg">  </p><p>第二道菜：前菜 羊奶巴伐露<img src="http://111.229.17.211:3389/imgs/2020/01/a007b38b9fbfff1e.jpg"></p><p>第三道菜：主菜：煮白子  <img src="http://111.229.17.211:3389/imgs/2020/01/ce073950cd8cd24e.jpg"></p><p>第四道菜：主菜 长脚虾汤  <img src="http://111.229.17.211:3389/imgs/2020/01/f878e48bea07043e.jpg">  </p><p>第五道菜：主菜：小牛胸腺古斯古斯沙拉  <img src="http://111.229.17.211:3389/imgs/2020/01/e93cd1a8db125b3a.jpg">  </p><p>第六道菜：主菜   血肠挞<img src="http://111.229.17.211:3389/imgs/2020/01/1aa25d6079c435e1.jpg">  </p><p>第七道菜：烤石斑鱼 配榛子凤尾鱼酱  <img src="http://111.229.17.211:3389/imgs/2020/01/d026a1b515fe5f6e.jpg">  </p><p>第八道菜：主菜 脆皮半包斑鸠  <img src="http://111.229.17.211:3389/imgs/2020/01/52548c5d0b110df5.jpg"></p><p>第九道菜：甜品 蛋白糖冰淇凌  <img src="http://111.229.17.211:3389/imgs/2020/01/102faf595f113fa2.jpg"></p><p>第十道菜：点心 奶油乾酪蛋 <img src="http://111.229.17.211:3389/imgs/2020/01/dffaec34b2d4b18e.jpg">  </p><p><strong>最终Grand Maison 东京 折服米其林三星评鉴师，摘得米其林三星桂冠！！</strong></p><h1 id="看剧感受"><a href="#看剧感受" class="headerlink" title="看剧感受"></a>看剧感受</h1><p>剧中演员木村拓哉简直就是该部日剧品质的保证，高颜值本就吸引了很多观众的注意，加上整部剧的色调打光都不错，主题歌也配得好，演员的气质都在剧情中充分的体现了出来。节奏流利、菜品丰富、台词犀利，是一场专业厨艺的视觉盛宴， 是一部良心作品，非常值得推荐！👍👍👍👍</p><p><a href="https://pan.baidu.com/s/1gWntZKBWMwBGz9mG0icxQg" rel="external nofollow noopener noreferrer" target="_blank">Grand Maison东京  百度云</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="电视剧" scheme="https://www.iamzmj.top/categories/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
    
      <category term="美食" scheme="https://www.iamzmj.top/tags/%E7%BE%8E%E9%A3%9F/"/>
    
      <category term="日剧" scheme="https://www.iamzmj.top/tags/%E6%97%A5%E5%89%A7/"/>
    
      <category term="木村拓哉" scheme="https://www.iamzmj.top/tags/%E6%9C%A8%E6%9D%91%E6%8B%93%E5%93%89/"/>
    
  </entry>
  
  <entry>
    <title>核爆动漫神曲</title>
    <link href="https://www.iamzmj.top/posts/cb814dfc.html"/>
    <id>https://www.iamzmj.top/posts/cb814dfc.html</id>
    <published>2020-01-26T07:51:13.000Z</published>
    <updated>2020-01-27T23:39:58.109Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script> <p>2020的春节因武汉爆发大规模新型冠状病毒感染肺炎，感染率极高。虽然自己住杭州离武汉相隔很远，为了避免感染，这个春节只能家里呆呆了。今晚上网听了一些动漫神曲，简直可以燃爆全世界！！作为动漫迷的我就自己做了一下整理和记录。祝武加油！祝中国加油！</p><h1 id="火影忍者疾风传"><a href="#火影忍者疾风传" class="headerlink" title="火影忍者疾风传"></a>火影忍者疾风传</h1>   <img src="http://111.229.17.211:3389/imgs/2020/01/1bd9ba996b860527.jpg">  <p><strong>青鸟（ブルーバード）</strong>   いきものがかり</p>    <div id="aplayer-rynHUJYr" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="718765" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="数码宝贝"><a href="#数码宝贝" class="headerlink" title="数码宝贝"></a>数码宝贝</h1><img src="http://111.229.17.211:3389/imgs/2020/01/ff3a257bdabc4a93.jpg">  <p><strong>Butter-Fly</strong>  和田光司</p>    <div id="aplayer-crLGrEYu" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4940920" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><p> <strong>Brave heart</strong>    宮崎歩</p>    <div id="aplayer-wRKjQFjG" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="29816860" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="海贼王"><a href="#海贼王" class="headerlink" title="海贼王"></a>海贼王</h1><img src="http://111.229.17.211:3389/imgs/2020/01/098ff60a0512b8a9.jpg">  <p> <strong>Fight Together</strong>     安室奈美惠 </p>    <div id="aplayer-KKlYecIE" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="565940039" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="未闻花名"><a href="#未闻花名" class="headerlink" title="未闻花名"></a>未闻花名</h1><img src="http://111.229.17.211:3389/imgs/2020/01/d65b32c2c79d1c06.jpeg">  <p><strong>secret base ~君が</strong>   茅野愛衣 / 戸松遥 / 早見沙織</p>    <div id="aplayer-cnwzbXHv" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="33911781" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="七大罪"><a href="#七大罪" class="headerlink" title="七大罪"></a>七大罪</h1> <img src="http://111.229.17.211:3389/imgs/2020/01/3515256757b03d1f.jpg">      <p><strong>Perfect Time</strong>    小林未郁 / mpi</p>    <div id="aplayer-tBgvMaIh" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="29814175" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="四月是你的谎言"><a href="#四月是你的谎言" class="headerlink" title="四月是你的谎言"></a>四月是你的谎言</h1><img src="http://111.229.17.211:3389/imgs/2020/01/dbe257e4167d56dd.jpg"><p> <strong>光るなら</strong>    Goose house</p>    <div id="aplayer-NQmScRPq" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="29732992" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="化物语"><a href="#化物语" class="headerlink" title="化物语"></a>化物语</h1><img src="http://111.229.17.211:3389/imgs/2020/01/8dbef87836249765.jpg">  <p><strong>恋愛サーキュレーション</strong>    花澤香菜</p>    <div id="aplayer-NiQYIQZU" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="579954" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="妖精的尾巴"><a href="#妖精的尾巴" class="headerlink" title="妖精的尾巴"></a>妖精的尾巴</h1>  <img src="http://111.229.17.211:3389/imgs/2020/01/42adaa942eb9baf5.jpg">  <p> <strong>Be As One</strong>     w-inds </p>    <div id="aplayer-DDQBopml" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="22672013" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="灌篮高手"><a href="#灌篮高手" class="headerlink" title="灌篮高手"></a>灌篮高手</h1><img src="http://111.229.17.211:3389/imgs/2020/01/612bd4ec6a0c915a.jpg">     <p> <strong>あなただけ見つめてる</strong>   大黒摩季</p>    <div id="aplayer-SFCoDBWR" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4990423" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><p> <strong>煌めく瞬間に捕われて</strong>    MANISH</p>    <div id="aplayer-haLJqGEg" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4990429" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><p> <strong>世界が终るまでは…</strong>   WANDS</p>    <div id="aplayer-RSlRIjGL" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28987657" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="龙珠GT"><a href="#龙珠GT" class="headerlink" title="龙珠GT"></a>龙珠GT</h1><img src="http://111.229.17.211:3389/imgs/2020/01/00b66b2b740dd823.jpg"><p><strong>渐渐被你吸引</strong>   FIELD OF VIEW</p>    <div id="aplayer-oDirtTKe" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="477331759" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h1 id="中华小当家"><a href="#中华小当家" class="headerlink" title="中华小当家"></a>中华小当家</h1>  <img src="http://111.229.17.211:3389/imgs/2020/01/8e711566a33d874c.png">      <p><strong>君さえいれば</strong>     DEEN </p>    <div id="aplayer-fppZbVud" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="711377" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><p>持续更新中….!!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="动漫" scheme="https://www.iamzmj.top/categories/%E5%8A%A8%E6%BC%AB/"/>
    
    
      <category term="动漫" scheme="https://www.iamzmj.top/tags/%E5%8A%A8%E6%BC%AB/"/>
    
      <category term="神曲" scheme="https://www.iamzmj.top/tags/%E7%A5%9E%E6%9B%B2/"/>
    
  </entry>
  
  <entry>
    <title>春节兼职服务员</title>
    <link href="https://www.iamzmj.top/posts/d7b9c6c9.html"/>
    <id>https://www.iamzmj.top/posts/d7b9c6c9.html</id>
    <published>2020-01-22T05:51:50.000Z</published>
    <updated>2020-01-30T14:55:01.123Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><img src="http://111.229.17.211:3389/imgs/2020/01/c526eec0bb946d8b.jpg">      <p>2020年鼠年春节放弃了年三十同家人的聚会，选择去酒店兼职包厢服务员，感受颇深。</p><p>来看看包厢服务员一天的工作内容是则么样的：</p><p>9点20分，前厅人员（包括我）酒店大厅集合，酒店经理点名并开早会。</p><p>10点00分，酒店人员统一后厨边餐厅吃早饭。</p><p>10点20分，包厢服务员包厢过道集合，包厢主管开始分配中午摆台服务员。（空闲）</p><p>13点30分，开始休息。</p><p>16点00分，酒店人员统一后厨边餐厅吃晚饭。</p><p>16点20分，包厢服务员包厢过道集合，包厢主管开始分配晚上摆台服务员。（忙碌）</p><p>21点30分，包厢整理。</p><p>10点30分，下班。</p><hr><p>春节期间，中午酒店业务基本不多，到晚上的时候才开始多起来。我干的是兼职，基本每天晚上都要摆一桌台。</p><p>小白开始干，被分到15个座位的999包厢，这个包厢在12和15两个包厢之间，其实就是用999替换掉13和14两个客人比较忌讳的数字。春节来吃饭的客人基本上都会点年夜饭套餐。如下表：</p><table><thead><tr><th>摆桌菜单</th><th>5530元/标</th><th>15人</th><th></th></tr></thead><tbody><tr><td><strong>燕鲍翅</strong></td><td><strong>冷菜</strong></td><td><strong>海鲜</strong></td><td><strong>冷菜</strong></td></tr><tr><td>金汤海参</td><td>白灼牛肋骨</td><td>香蒜蒸澳龙</td><td>白切鸡</td></tr><tr><td>鹅掌煨鲍鱼</td><td>全家福</td><td>白灼基围虾</td><td>酱鸭</td></tr><tr><td></td><td>咸肉蒸春笋</td><td>酒酿面包蟹</td><td>熏鱼</td></tr><tr><td></td><td>芥兰炒山药</td><td>广式东星斑</td><td>海蜇</td></tr><tr><td></td><td>葱油爽脆</td><td></td><td>大拌菜</td></tr><tr><td></td><td></td><td></td><td>芹菜</td></tr><tr><td></td><td></td><td></td><td>玉女甜瓜</td></tr><tr><td></td><td></td><td></td><td>木耳</td></tr><tr><td></td><td></td><td></td><td>象拔蚌拼三文鱼</td></tr><tr><td><strong>点心</strong></td><td></td><td></td><td></td></tr><tr><td>八宝饭</td><td></td><td></td><td></td></tr><tr><td>春卷</td><td></td><td></td><td></td></tr><tr><td>酒酿圆子羹</td><td></td><td></td><td></td></tr></tbody></table><p>16点20分，包厢主管会将对应包厢的上菜单发给我们，然后各自会包厢开始准备。</p><ul><li>根据上菜单人数，调整餐桌餐盘数量。</li><li>备餐间烧热水，以备给客人泡茶，热饮料及奶瓶。</li><li>清洗醒酒壶，分酒器（红酒/白酒），备用碗碟快餐盘等餐具。</li><li>准备米醋酱料，芥末等调料。</li><li>准备宝宝椅一张</li><li>打开包厢空调及电视</li></ul><p>这些准备完就便可以在包厢门口处等待迎接客人的到来。待客人到了就开始询问下是否需要茶水，并介绍下酒店的酒水啥的，一般客人都会自己带酒水（红酒/白酒）。</p><p><strong>酒水：</strong></p><p>很多顾客会要求我们服务员帮忙开酒。我们就拿出之前准备的醒酒器和分酒器（红酒先导入醒酒器醒酒，再倒入分酒器中，白酒直接导入分酒器），将装有酒水的分酒器放在转盘上，让想喝酒的顾客自己拿。</p><p><strong>冷菜：</strong></p><p>客人到的差不多的时候，电话后厨让传菜生上冷菜，普通的冷菜顾客下单后传菜员会给送过来，这些冷菜可以在客人未到齐前均匀摆放到餐桌转盘上。如果客人点了类似象拔蚌拼三文鱼这类海鲜拼盘则需要电话后厨送菜，在顾客基本到齐的时候送上转盘。</p><p><strong>热菜：</strong></p><p>顾客到齐后，电话后厨让传菜生上热菜，将传菜生送过来的热菜送上转台，小蝶装入调料给需要的顾客。后续上热菜前将客户吃剩的餐盘撤下再上热菜。</p><p><strong>点心：</strong></p><p>点心最后上，一般在热菜上的差不多的时候，电话后厨让传菜生上点心。</p><p><strong>水果：</strong></p><p>按照酒店经理的说法菜单上一般不会出现水果，来包厢吃饭的客人会根据包厢的大小送顾客一份大小不等的水果拼盘。（很廉价的感觉）</p><p>上面就是一般的上菜顺序，我有不懂的问题，就会去问下对门或者隔壁包厢服务员。现在想想上菜也是门技术活，</p><p>有些客人比较讲究，像龙虾，鱼这类的对头的摆放位置会比较关注。有的时候服务员还要给客人倒酒，倒酒顺序也是有讲究的😂。</p><p>另外察言观色很重要！察言观色很重要！察言观色很重要！</p><p>每个酒店都有一个点菜系统，其实这个也比较简单，输入员工号，点击对应自己的包厢号，就可以帮客人加饮料或者加菜，点击保存后会打印出小票，像我这个小白一开始是跑去让酒店的前台来做这个的（怕自己出错）。</p><p>我这里兼职人员不参与买单，客人要是买单需要找包厢主管，这也是主要怕我们出错。。。兼职的水平差距还是很大的@@@</p><p>客人走后，就要清理包厢了….菜盘菜碟及剩菜垃圾需要通知后厨来收拾，其它碗碟快，台布转盘，地面卫生就需要自己打扫和清洗干净，最后再摆台，是个费时间费体力的活。一晚上整个包厢服务流程下来，我只能说一个字累。但酒店的卫生以及消毒真的是非常重要，非常重要！</p><p>今年还来了一个新型冠状病毒感染的肺炎疫情，搞得人心惶惶。走得那天酒店经理说50多桌年夜饭客户退单后就只剩5桌了。。。像我这种兼职就直接叫去领钱走人了。走之前问了问这边的老员工，都说新招来的服务员很多都干了半个多月就受不了走了。。</p><p>长这么大第一次做餐饮兼职有收获也有教训，这四天还算值得！！😊 ^^ </p><hr><p>二零二零，你好哇。</p><p>愿悲欢历尽，照亮所有向往。</p><p>盼千帆过后，听见前路回响。</p><p>眉目舒展，等春照面。</p><p>年年有余，等梦苏醒。</p><p>下班回家躺在床上来首关于你！</p>    <div id="aplayer-gJUxCuPH" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="416385181" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><img src="http://111.229.17.211:3389/imgs/2020/01/5ea8de0dff9bfc6f.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="生活" scheme="https://www.iamzmj.top/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="兼职" scheme="https://www.iamzmj.top/tags/%E5%85%BC%E8%81%8C/"/>
    
      <category term="服务员" scheme="https://www.iamzmj.top/tags/%E6%9C%8D%E5%8A%A1%E5%91%98/"/>
    
      <category term="酒店" scheme="https://www.iamzmj.top/tags/%E9%85%92%E5%BA%97/"/>
    
  </entry>
  
  <entry>
    <title>如何理解墨菲定律</title>
    <link href="https://www.iamzmj.top/posts/4fad24fc.html"/>
    <id>https://www.iamzmj.top/posts/4fad24fc.html</id>
    <published>2020-01-09T03:17:08.000Z</published>
    <updated>2020-01-14T09:21:40.818Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="墨菲定律"><a href="#墨菲定律" class="headerlink" title="墨菲定律"></a>墨菲定律</h1><p><strong>墨菲定律（Murphy’s Law）</strong>:<strong>事情往往会向你所想到的不好的方向发展，只要有这个可能性。</strong></p><p>比如你衣袋里有两把钥匙，一把是你房间的，一把是汽车的;如果你现在想拿出车钥匙，会发生什么？是的，你往往是拿错了房间钥匙。  </p><h2 id="墨菲定律的起源"><a href="#墨菲定律的起源" class="headerlink" title="墨菲定律的起源"></a>墨菲定律的起源</h2><p>墨菲是美国爱德华兹空军基地的上尉工程师。1949年，他和他的上司斯塔普少校，在一次火箭减速超重试验中，因仪器失灵发生了事故。墨菲发现，测量仪表被一个技术人员装反了。由此，他得出的教训是：如果做某项工作有多种方法，而其中有一种方法将导致事故，那么一定有人会按这种方法去做。</p><p>换种说法：假定你把一片干面包掉在地毯上，这片面包的两面均可能着地。但假定你把一片一面涂有一层果酱的面包掉在地毯上，常常是带有果酱的一面落在地毯上。</p><p>在事后的一次记者招待会上，斯塔普将其称为“墨菲法则”，并以极为简洁的方式作了重新表述：凡事可能出岔子，就一定会出岔子。墨菲法则在技术界不胫而走，因为它道出了一个铁的事实：技术风险能够由可能性变为突发性的事实。 If there are two or more ways to do something, and one of those ways can result in a catastrophe, then someone will do it. </p><p><strong>根据墨菲定律：</strong></p><p>一、任何事都没有表面看起来那么简单；</p><p>二、所有的事都会比你预计的时间长；</p><p>三、会出错的事总会出错；</p><p>四、如果你担心某种情况发生，那么它就更有可能发生。</p><h1 id="墨菲定律的启示"><a href="#墨菲定律的启示" class="headerlink" title="墨菲定律的启示"></a>墨菲定律的启示</h1><h2 id="管理学角度："><a href="#管理学角度：" class="headerlink" title="管理学角度："></a><strong>管理学角度</strong>：</h2><p>不好的事情或者说隐患哪怕它发生的概率再小，如果重复的次数足够多，它就会发生。对此，我们应该如何面对这一小概率问题：</p><p>（1）<strong>提高忧患意识</strong>，对于可能发生的损失很大的事件，哪怕其出现的可能性很小，也要提高警惕减少其发生的可能；</p><p>（2）<strong>减少不必要的冒险</strong>，减少中间环节，用以减少不好的事情发生的可能性；</p><p>（3）<strong>必须制定应急预案</strong>，做好充分的应急准备，减少偶发突发情况带来的损失；</p><p>（4）<strong>不断提升</strong>工艺水平，提高安全水平，减少隐患，是避免事故发生的最根本途径。也就是说，通过不断降低不好的事情发生的概率p，使p不断趋近于零，我们就能无限延长不好的事情到来的时间，<strong>以达到在我们需要的某个时期内，不发生这种情况的目的。</strong></p><hr><p>（1）如果事情已经没可能发生，也就是p=0，我们没必要浪费精力去担心它；</p><p>（2）如果一个不好的事情有很小的概率会发生，但我们重复的次数很少，做好应急准备就没必要过多担心了；</p><p>（3）如果一件不好的事情有很小的概率会发生，我们又会经常重复做这件事，但它产生的问题很小，很容易解（4）决，我们也没必要过于担心，正常处理就好。</p><h2 id="心理学角度："><a href="#心理学角度：" class="headerlink" title="心理学角度："></a>心理学角度：</h2><p>（1）人应该不断提高、锻炼自己的心理素质，达到临危不乱，才能<strong>冷静客观</strong>的处理问题，而不应该因为自身造成更多的问题。</p><p>（2）人应该积极乐观的看待任何问题、<strong>面对任何情况给自己积极的心理暗示</strong>，有助于发挥人的更好水平，提高成功率。</p><h2 id="社会学角度："><a href="#社会学角度：" class="headerlink" title="社会学角度："></a>社会学角度：</h2><p>（1）要对事件相关的<strong>其他人有充分的了解</strong>；</p><p>（2）要多角度的思考问题，至少<strong>要站在这件事的各利益相关方的角度去思考问题</strong>；</p><p>（3）自己做出正确的选择的同时，也要<strong>照顾其他人的选择</strong>，求同存异方能使事情推进下去；</p><p>（4）<strong>防人之心不可无，林子大了什么鸟都有</strong>。</p><hr><p><strong>墨菲定律只是描述了一种现实中的现象，无所谓好坏，它对你的影响关键在于你如何看待它。</strong></p><ul><li>若你把墨菲定律当作消极不作为的借口、当成失败时的抱怨，那它就是不详的灾星和失败的乌云。</li><li>若你把它当成勉力提高自己的动力、当作成功时的鞭策，那它就是灿烂的阳光和成功的彩虹。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="读书笔记" scheme="https://www.iamzmj.top/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="墨菲定律" scheme="https://www.iamzmj.top/tags/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/"/>
    
      <category term="读书笔记" scheme="https://www.iamzmj.top/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>博弈论</title>
    <link href="https://www.iamzmj.top/posts/12bcd26e.html"/>
    <id>https://www.iamzmj.top/posts/12bcd26e.html</id>
    <published>2020-01-07T02:53:04.000Z</published>
    <updated>2020-01-10T07:34:20.755Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="博弈论简介"><a href="#博弈论简介" class="headerlink" title="博弈论简介"></a>博弈论简介</h1><p> <strong><a href="https://wiki.mbalib.com/wiki/%E5%8D%9A%E5%BC%88%E8%AE%BA" rel="external nofollow noopener noreferrer" target="_blank">博弈论</a>（Game Theory），也称对策论或竞赛论</strong> 。是指研究多个个体或团队之间在特定条件制约下在对局中利用相关方的策略，而实施对应策略的学科。  它是应用数学的一个分支，既是现代数学的一个新分支，也是运筹学的一个重要学科。目前在生物学、经济学、国际关系学、计算机科学、政治学、军事战略和其他很多学科都有广泛的应用。</p><p>具有竞争或对抗性质的行为成为博弈行为。在这类行为中，参加斗争或竞争的各方各自具有不同的目标或利益。为了达到各自的目标和利益，各方必须考虑对手的各种可能的行动方案，并力图选取对自己最为有利或最为合理的方案。比如日常生活中的下棋，打牌等。博弈论就是研究博弈行为中斗争各方是否存在着最合理的行为方案，以及如何找到这个合理的行为方案的数学理论和方法。  </p><h1 id="博弈论分类"><a href="#博弈论分类" class="headerlink" title="博弈论分类"></a>博弈论分类</h1><p><strong>1）根据参与者之间是否具有一个具有约束力的协议，博弈可分为合作博弈和非合作博弈。</strong></p><p>有：合作博弈（合作中如何分配利益问题，使协议框架内所有参与者都满意）。</p><p>没有：非合作博弈（如何争取自己最大化利益，不考虑其它参与者利益）。</p><p><strong>2）根据参与者选择的策略，做出决定的先后顺序，博弈可分为静态博弈和动态博弈。</strong></p><p> 静态博弈：参与人同时选择策略或者虽非同时选择，但后做出决策的行动者并不知道先行动者采取了什么策略。</p><p>动态博弈： 参与人的行动有先后顺序，且后行动者能够观察到先行动者采取策略的前提下制定自己的策略。</p><p> <strong>3）根据对其它参与者的信息掌握程度，博弈可分为完全信息博弈和不完全信息博弈</strong>。</p><p>完全信息博弈：每一位参与人对其他参与人的特征、策略空间及收益函数(也叫支付)有准确的信息。</p><p>不完全信息博弈：每一位参与人对其他参与人的特征、策略空间及收益函数信息了解的不够准确、或者不是对所有参与人的特征、策略空间及收益函数都有准确的信息。</p><h1 id="博弈论要素"><a href="#博弈论要素" class="headerlink" title="博弈论要素"></a>博弈论要素</h1><p>一场博弈包含4个基本要素：</p><p>1.至少两人参加</p><p>2.参与者间的利益（博弈的目的）</p><p>3.策略（行动方案）</p><p>4.信息（制定策略的依据）</p><h1 id="博弈模型-常见"><a href="#博弈模型-常见" class="headerlink" title="博弈模型(常见)"></a>博弈模型(常见)</h1><h2 id="囚徒博弈"><a href="#囚徒博弈" class="headerlink" title="囚徒博弈"></a><strong>囚徒博弈</strong></h2><p>警方逮捕甲、乙两名嫌疑犯，但没有足够证据指控二人入罪。于是警方分开囚禁嫌疑犯，分别和二人见面，并向双方提供以下相同的选择：若一人认罪并作证检控对方（相关术语称“背叛”对方），而对方保持沉默，此人将即时获释，沉默者将判监10年。若二人都保持沉默（相关术语称互相“合作”），则二人同样判监1年。若二人都互相检举举，则二人同样判监8年。</p><p>博弈分析：</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"></td><td align="center">甲（认罪）</td><td align="center">甲（沉默）</td></tr><tr><td align="center">乙（认罪）</td><td align="center">8，8</td><td align="center">0，10</td></tr><tr><td align="center">乙（沉默）</td><td align="center">10，0</td><td align="center">1，1</td></tr></tbody></table><p><a href="https://wiki.mbalib.com/wiki/%E5%9B%9A%E5%BE%92%E5%9B%B0%E5%A2%83" rel="external nofollow noopener noreferrer" target="_blank">囚徒困境</a>假定每个参与者（即“囚徒”）都是利己的，即都寻求最大自身利益，而不关心另一参与者的利益。这场博弈的纳什均衡，显然不是顾及团体利益的帕累托最优解决方案。以全体利益而言，如果两个参与者合作保持沉默，两人都只会被判刑1年，总体利益更高，结果也比两人背叛对方、判刑8年的情况较佳。但根据以上假设，二人均为理性的个人，且只追求自己个人利益。均衡状况会是两个囚徒都选择背叛，结果二人判决均比合作要高，总体利益较合作低。这就是“困境”所在。例子漂亮地证明了：非零和博弈中，帕累托最优和纳什均衡是相冲突的。</p><h2 id="智猪博弈"><a href="#智猪博弈" class="headerlink" title="智猪博弈"></a><strong>智猪博弈</strong></h2><p>假设猪圈里有两头猪，一头大猪，一头小猪。  猪圈很长，一头有一踏板，另一头是饲料的出口和食槽。猪每踩一下踏板，另一边就会有相当于10份的猪食进槽，但是踩踏板以后跑到食槽所需要付出的“劳动”，加起来要消耗相当于2份的猪食。踏板和食槽分置笼子的两端，如果有一只猪去踩踏板，另一只猪就有机会抢先吃到另一边落下的食物。</p><p>博弈分析：</p><p>如果两只猪同时踩踏板，同时跑向食槽，大猪吃进7份，得益5份，小猪吃进3份，实得1份；如果大猪踩踏板后跑向食槽，这时小猪抢先，吃进4份，实得4份，大猪吃进6份，付出2份，得益4份；如果大猪等待，小猪踩踏板，大猪先吃，吃进9份，得益9份，小猪吃进1份，但是付出了2份，实得-1份；如果双方都懒得动，所得都是0。 </p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">踩踏板消耗2份食物</td><td align="center">大猪（踩踏板）</td><td align="center">大猪（等待）</td></tr><tr><td align="center">小猪（踩踏板）</td><td align="center">1，5</td><td align="center">-1，7</td></tr><tr><td align="center">小猪（等待）</td><td align="center">4，4</td><td align="center">0，0</td></tr></tbody></table><p>利益分配格局决定两头猪的理性选择：小猪踩踏板只能吃到一份，不踩踏板反而能吃上4份。对小猪而言，无论大猪是否踩动踏板，小猪将选择“搭便车”策略，也就是舒舒服服地等在食槽边，这是最好的选择。</p><p>启发：</p><p>(商战)大企业与小企业：小企业（小猪）将行业老大（大猪）的实力转化为自己的助力。</p><p>(股市)大户与散户：大户设局形成猪圈，引小户（小猪）入套….。</p><p>(奖惩)企业与员工：杜绝智猪博弈（搭便车现象）,（移动食物槽位并减少食物投放）。</p><p>(董事会)大股东与小股东：大股东为企业的盈利亏损负责，小股东不负责监管直接拿分红。</p><p>总结：</p><p>无论是商业中的”抱大腿”，还是人生奋斗历程中的搭”搭便车”都是一种策略，一次机会。只要我们以一种平实的心态就能以这种快捷的方式获得成功。</p><h2 id="猎鹿博弈"><a href="#猎鹿博弈" class="headerlink" title="猎鹿博弈"></a><strong>猎鹿博弈</strong></h2><p>源自启蒙思想家卢梭的著作《论人类不平等的起源和基础》 </p><p>古代的村庄有两个猎人。当地的猎物主要有两种：鹿和兔子。如果一个猎人单兵优作战，一天最多只能打到4只兔子。只有两个一起去才能猎获一只鹿。从填饱肚子的角度来说，4只兔子能保证一个人4天不挨饿，而一只鹿却能让两个人吃上10天。</p><p>博弈分析：</p><p>两个人的行为决策可以形成两个博弈结局：分别打兔子，每人得4；合作，每人得10。这样猎鹿博弈有两个纳什均衡点，那就是：要么分别打兔子，每人吃饱4天；要么合作，每人吃饱10天。 </p><table><thead><tr><th></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td></td><td align="center">猎人A（猎兔）</td><td align="center">猎人A（猎鹿）</td></tr><tr><td>猎人B（猎兔）</td><td align="center">4，4</td><td align="center">4，0</td></tr><tr><td>猎人B（猎鹿）</td><td align="center">0，4</td><td align="center">10，10</td></tr></tbody></table><p>猎鹿博弈反应的是：合作带来的最大利益。</p><h2 id="枪手博弈"><a href="#枪手博弈" class="headerlink" title="枪手博弈"></a><strong>枪手博弈</strong></h2><p>该模型可以简单概括为：实力越强死得越快。最能体现这个博弈的：赤壁之战。</p><p>甲乙丙三个枪手准备决斗。甲枪法最好，80%命中率。乙枪法次之，60%命中率。丙枪法最差，40%命中率。假设他们了解彼此实力，也能做出理性判断。问题一：如果三人同时开枪，并且每人只发一枪。第一轮枪战后，谁活下来的机会大？问题二：如果三人轮流开枪，并且由枪法最差的丙先开枪，他该怎么做？</p><p>博弈分析：</p><p>问题一：同时开枪</p><p>甲的最佳策略：先瞄准乙。因为乙对甲的威胁要比丙大，所以应该首先干掉乙，再干掉丙小菜一碟。 </p><p>乙的最佳策略：先瞄准甲。一旦将甲干掉了，和丙进行对决，乙胜算的概率要大得多。 </p><p>丙的最佳策略：也是先瞄准甲。毕竟对丙来说，乙的威胁还是比甲要小一些，先努力干掉甲再想如何面对乙，这是丙的正常思路。 </p><p>在这种情况下，我们计算一下三个枪手开枪后各自存活的概率： </p><p>甲存活概率：40％X60％=24％。</p><p>乙存货概率：20%</p><p>丙存货概率：100%</p><p>问题二：轮流开枪</p><p>甲先开枪：必定把枪口对准乙，</p><ul><li><p>乙被打死，接下来由丙开枪。丙会对甲开枪，甲存活率为60%，丙存活率100%。</p></li><li><p>乙未被打死，接下来由乙开枪，乙会对甲开枪，无论甲是否被乙杀死，接下来开枪的是丙，其存活率100%。</p></li></ul><p>乙先开枪：和第一种情况一致，丙的存活率依然最高。</p><p>丙先开枪：根据情况适当调整策略，随便开一空抢，接下来由甲开枪，甲会对乙开枪，丙的存活率仍然最高。向甲开枪时一种冒险的行为，因为万一杀死了甲，乙就会向丙开枪，此时丙的存活率为40%。</p><p>在现实中，会有信息不对称的情况。比如如果枪手甲伪装自己，让乙和丙认为他的枪法最差：这时，幸存者是甲的概率就会大幅上升。在现实中，<strong>能力很强的人要学会韬光养晦</strong>，往往能成为最后的胜利者。  能力差的人在竞争中耍弄手腕能赢一时，但往往不能最终成事；提升自己实力会在最后的对决中起到关键作用。 无论是一次性博弈还是相继出招的序惯博弈，博弈者都要努力寻找自己最有力的策略。</p><p><font color="red">如果自身没有优势策略，那就站在对方的角度上进行分析，确定对方的最优策略。得到的最终结果都不会超过最优势策略得到的结果，可大胆放心使用。</font></p><p><font color="red">如果身处复杂的博弈当中，一时间无法确定自己的最佳策略，就先选择把自己的劣势策略排除,来简化博弈情况。</font></p><h2 id="警察与小偷博弈"><a href="#警察与小偷博弈" class="headerlink" title="警察与小偷博弈"></a>警察与小偷博弈</h2><p>在一个小镇上，只有一名警察负责巡逻，保卫小镇的人生和财产安全。小镇分A，B两区，A区一酒馆，B区一仓库，镇上还仅住着一名小偷，他的目标时A区酒馆或者B区仓库。因为只有一名警察，每次只能选择A区或B区一个区域区巡逻，而小偷正是看到这一点，每次也到一个区域区偷窃。假设A区有2万元财产，B区有1万元财产。警察区A区巡逻，小偷去B区，则B区1万元财产归小偷；如果警察去B区巡逻，小偷也去A区，则被逮捕。警察去B区巡逻，小偷去A区，则2A区2万元财产归小偷，；如果警察去B区巡逻，小偷也去B区，则同样被逮捕。那警察采取那种方式巡逻，镇上的财产损失最少？</p><p>分析：</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"></td><td align="center">警察（A区）</td><td align="center">警察（B区）</td></tr><tr><td align="center">小偷（A区）</td><td align="center">0,3</td><td align="center">2,1</td></tr><tr><td align="center">小偷（B区）</td><td align="center">1,2</td><td align="center">0,3</td></tr></tbody></table><p>警察抽签的方式（2个A区签，1个B区签），去A区巡逻的概率2/3，去B去巡逻的概率1/3。</p><p>小偷抽签的方式（2个A区签，1个B区签），抽到A区签去B区偷盗，抽到B区签去A区偷盗。</p><h2 id="斗鸡博弈"><a href="#斗鸡博弈" class="headerlink" title="斗鸡博弈"></a>斗鸡博弈</h2><p>试想有两只好斗的公鸡狭路相逢，每只鸡有两个行动选择：一是退下来，一是进攻。如果一方退下来，而对方没有退下来，对方获得胜利；如果对方也退下来，双方则打个平手；如果自己没退下来，而对方退下来，自己则胜利，对方则失败；如果两只鸡都前进，那么则两败俱伤。因此，对两只鸡来说，最好的结果是，对方退下来，而自己不退。</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"></td><td align="center">A鸡（前进）</td><td align="center">A鸡（后退）</td></tr><tr><td align="center">B鸡（前进）</td><td align="center">-2，-2</td><td align="center">1，-1</td></tr><tr><td align="center">B鸡（后退）</td><td align="center">-1，1</td><td align="center">-1，-1</td></tr></tbody></table><p>这个博弈有两个纯策略纳什均衡：一方前进，另一方后退；或一方后退，另一方前进。但关键是谁进谁退？当然，该博弈也存在一个混合策略均衡，即大家随机的选择前进或后退。不过相对而言，我们更关注于纯策略均衡。一博弈，如果有惟一的纳什均衡点，那么这个博弈是可预测的，即这个纳什均衡点就是事先知道的惟一的博弈结果。但是如果一博弈有多个纳什均衡，则要预测结果就必须附加另外的有关博弈的细节信息。比如，这里谁进谁退，可能就需要附加额外的细节信息才能做出判断。 </p><p>斗鸡博弈强调的是，如何在博弈中采用妥协的方式取得利益。如果双方都换位思考，它们可以就补偿进行谈判，最后造成以补偿换退让的协议，问题就解决了。博弈中经常有妥协，双方能换位思考就可以较容易地达成协议。考虑自己得到多少补偿才愿意退，并用自己的想法来理解对方。只从自己立场出发考虑问题，不愿退，又不想给对方一定的补偿，僵局就难以打破。 </p><h2 id="协和博弈"><a href="#协和博弈" class="headerlink" title="协和博弈"></a>协和博弈</h2><p>协和谬误即某件事情在投入了一定成本、进行到一定程度而后发现不宜继续下去，却苦于各种原因而将错就错，欲罢不能。 </p><p>当你进行了一项不理性的行动后，应该忘记已经发生的行为和你支付的成本，只要考虑这项活动之后需要耗费的精力和能够带来的好处，再综合评定它能否给自己带来正效用。比如进行投资时，把目光投向前方，审时度势，如果发现这项投资并不能赢利，应该及早停掉，不要惋惜已投下去的各项成本：精力、时间、金钱…… </p><h2 id="海盗分金博弈"><a href="#海盗分金博弈" class="headerlink" title="海盗分金博弈"></a>海盗分金博弈</h2><p> 5个海盗抢得100枚金币，他们按抽签的顺序依次提方案：首先由1号提出分配方案，然后5人表决，超过半数同意方案才被通过，否则他将被扔入大海喂鲨鱼，依此类推。  这是一个高度简化和抽象的模型，体现了博弈的思想。 假定“每人海盗都是绝顶聪明且很理智”，那么“第一个海盗提出怎样的分配方案才能够使自己的收益最大化？”  </p><p>博弈分析：</p><p>推理过程采用倒推的方式： </p><p>　　从后向前推，在只剩4号和5号的话，4号的方案一定是100，0，此时即使5号反对结果也无法反对。 </p><p>　　在只剩3号4号和5号的话，根据5号之前的处境，3号会提出99，0，1的方案，该方案3号一定同意，4号肯定不同意，但5号一定回头赞成票。如果5号投了反对票，就会回到只剩4号和5号的情况。</p><p>​       在2号3号4号和5号共存的情况下，2号最好的分配方案是98，0，0，2，既笼络5号，放弃3号4号，2号和5号投赞成票，3号4号投反对票，方案半数人同意而通过。</p><p>​       那1至5号都在的情况下，假如1号海盗被扔进大海，由2号海盗来分配方案的话，3号和4号海盗什么也得不到，因此1号海盗的分配方案就会从处于劣势的3号和4号海盗入手，最优方案是98，0，1，1，0，这样1号3号4号投赞成票，2和5号投反对票，方案通过。</p><p> 模型任意改变一个假设条件，最终结果都会不一样。  </p><p>“海盗分金”其实是一个高度简化和抽象的模型，体现了博弈的思想。在“海盗分金”模型中，任何“分配者”想让自己的方案获得通过的关键是事先考虑清楚“挑战者”的分配方案是什么，并用最小的代价获取最大收益，拉拢“挑战者”分配方案中最不得意的人们。企业中的一把手，在进行内部人员控制时，经常是抛开二号人物，而与会计和出纳们打得火热，就是因为公司里的小人物好收买。 1号看起来最有可能喂鲨鱼，但他牢牢地把握住先发优势，结果不但消除了死亡威胁，还收益最大。这不正是全球化过程中先进国家的先发优势吗？而5号，看起来最安全，没有死亡的威胁，甚至还能坐收渔人之利，却因不得不看别人脸色行事而只能分得一小杯羹。</p><h2 id="路径依赖博弈"><a href="#路径依赖博弈" class="headerlink" title="路径依赖博弈"></a>路径依赖博弈</h2><p>一旦人们做了某种选择，就好比走上了一条不归之路，惯性的力量会使这一选择不断自我强化，并让你不能轻易走出去。 </p><p>美国经济学家道格拉斯·诺思是第一个提出制度的“路径依赖”理论的学者，他认为，路径依赖类似于物理学中的“惯性”，一旦进入某一路径（无论是“好”的还是“坏”的）就可能对这种路径产生依赖。某一路径的既定方向会在以后发展中得到自我强化。人们过去做出的选择决定了他们现在及未来可能的选择。好的路径会对企业起到正反馈的作用，通过惯性和冲力，产生飞轮效应，企业发展因而进入良性循环；不好的路径会对企业起到负反馈的作用，就如厄运循环，企业可能会被锁定在某种无效率的状态下而导致停滞。而这些选择一旦进入锁定状态，想要脱身就会变得十分困难。 </p><p>在现实生活中，路径依赖现象无处不在。一个著名的例子是：现代铁路两条铁轨之间的标准距离是四英尺又八点五英寸，为什么采用这个标准呢？原来，早期的铁路是由建电车的人所设计的，而四英尺又八点五英寸正是电车所用的轮距标准。那么，电车的标准又是从哪里来的呢？最先造电车的人以前是造马车的，所以电车的标准是沿用马车的轮距标准。马车又为什么要用这个轮距标准呢？因为古罗马人军队战车的宽度就是四英尺又八点五英寸。罗马人为什么以四英尺又八点五英寸为战车的轮距宽度呢？原因很简单，这是牵引一辆战车的两匹马屁股的宽度。</p><p>有趣的是，美国航天飞机燃料箱的两旁有两个火箭推进器，因为这些推进器造好之后要用火车运送，路上又要通过一些隧道，而这些隧道的宽度只比火车轨道宽一点，因此火箭助推器的宽度由铁轨的宽度所决定。所以，今天世界上最先进的运输系统的设计，在两千年前便由两匹马的屁股宽度决定了！ </p><hr><h1 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><h2 id="纳什均衡"><a href="#纳什均衡" class="headerlink" title="纳什均衡"></a><a href="https://wiki.mbalib.com/wiki/%E7%BA%B3%E4%BB%80%E5%9D%87%E8%A1%A1" rel="external nofollow noopener noreferrer" target="_blank">纳什均衡</a></h2><p>纳什均衡，又称为非合作博弈均衡，是博弈论的一个重要术语，以约翰·纳什命名。在一个博弈过程中，无论对方的策略选择如何，当事人一方都会选择某个确定的策略，则该策略被称作支配性策略。如果两个博弈的当事人的策略组合分别构成各自的支配性策略，那么这个组合就被定义为纳什均衡。一个策略组合被称为纳什均衡，当每个博弈者的均衡策略都是为了达到自己期望收益的最大值，与此同时，其他所有博弈者也遵循这样的策略。</p><p><strong>纳什均衡的重要影响：</strong></p><p>1.改变了经济学的体系和结构。 </p><p>2.扩展了经济学研究经济问题的范围。 </p><p>3.加强了经济学研究的深度。 </p><p>4.形成了基于经典博弈的研究范式体系。 </p><p>5.扩大和加强了经济学与其他社会科学、自然科学的联系。 </p><h2 id="帕累托效率"><a href="#帕累托效率" class="headerlink" title="帕累托效率"></a><strong><font color="red"><a href="https://wiki.mbalib.com/wiki/%E5%B8%95%E7%B4%AF%E6%89%98%E6%95%88%E7%8E%87" rel="external nofollow noopener noreferrer" target="_blank">帕累托效率</a></font></strong></h2><p>帕累托最优（Pareto Optimality），也称为帕累托效率、帕累托改善，是博弈论中的重要概念，并且在经济学， 工程学和社会科学中有着广泛的应用。</p><p>帕累托最优是指资源分配的一种理想状态，假定固有的一群人和可分配的资源，从一种分配状态到另一种状态的变化中，在没有使任何人境况变坏的前提下，使得至少一个人变得更好，这就是帕累托改进或帕累托最优化。帕累托最优的状态就是不可能在有更过的帕累托改进的余地；换句话说，帕累托改进是达到帕累托最优的路径和方法。帕累托最优是公平与效率的“理想王国”。</p><p>一般来说，达到帕累托最优时，会同时满足以下3个条件：</p><ul><li>交换最优：即使再交易，个人也不能从中得到更大的利益。此时对任意两个消费者，任意两种商品的边际替代率是相同的，且两个消费者的效用同时得到最大化。</li><li>生产最优：这个经济体必须在自己的生产可能性边界上。此时对任意两个生产不同产品的生产者，需要投入的两种生产要素的边际技术替代率是相同的，且两个消费者的产量同时得到最大化。</li><li>产品混合最优：经济体产出产品的组合必须反映消费者的偏好。此时任意两种商品之间的边际替代率必须与任何生产者在这两种商品之间的边际产品转换率相同。</li></ul><p>如果一个经济体不是帕累托最优，则存在一些人可以在不使其他人的境况变坏的情况下使自己的境况变好的情形。普遍认为这样低效的产出的情况是需要避免的，因此帕累托最优是评价一个经济体和政治方针的非常重要的标准。</p><h2 id="夏普里值方法"><a href="#夏普里值方法" class="headerlink" title="夏普里值方法"></a><strong><font color="red"><a href="https://wiki.mbalib.com/wiki/%E5%A4%8F%E6%99%AE%E5%88%A9%E5%80%BC" rel="external nofollow noopener noreferrer" target="_blank">夏普里值方法</a></font></strong></h2><p>夏普利值指所得与自己的贡献相等，是一种分配方式。核心是付出和收益成正比。</p><p>考虑这样一个联盟博弈。有这样一个三人财产分配问题。假定财产为100万元，假定这100万元在三个人之间进行分配。A拥有50%的票力，b拥有40%的票力，c拥有10%的票力。规则规定，当超过50%的票认可了某种方案时，才能获得整个财产，否则三人将一无所获。 </p><p>我们看到，任何单独一个人的票力都不超过50%，从而不能单独决定财产的分配。要超过50%的票力必须要形成联盟。也就是说，在这个例子中任何人的权利都不是“决定性的”，也没有一个人是“无权利的”或权利为0.</p><p>此时财产应当按票力分配吗？如果是的话，即a、b、c的财产分配为：50%，40%，10%。但如果这样分配的话，c可以提出这样的方案，a：70%，b：0，c：30%。这个方案能被a、c接受，因为对a、c来说这是一个比按票力分配有明显改进的方案，尽管b被排除出去，但是a、c的票力构成大多数（60%）。</p><p>在这样的情况下，b会向a提出这样一个方案，a：80%，b20%，c：0。此时a和b所得均比刚才c提出的方案要好，但c成了一无所有，但a、b票力综合构成多数（90%）……这样的过程可以一直进行下去。</p><p>在这个过程中，理性的人会形成联盟ab、ac或abc。但哪个联盟能够形成呢？最终的分配结果应该是怎样的呢？ </p><p>夏普里值是这样的一个值：在各种可能的联盟次序下，参与者对联盟的边际贡献之和除以各种可能的联盟组合。在财产分配问题上，我们可以写出各种可能的联盟顺序。而边际贡献就在于在这个顺序中谁是这个联盟的“关键加入者”。如果是关键加入者，那么他的边际贡献就为100万元。下表：财产问题中各种排列下的关键加入者： </p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">次序</td><td align="center">abc</td><td align="center">acb</td><td align="center">bac</td><td align="center">bca</td><td align="center">cab</td><td align="center">cba</td></tr><tr><td align="center">关键加入者</td><td align="center">b</td><td align="center">c</td><td align="center">a</td><td align="center">a</td><td align="center">a</td><td align="center">a</td></tr></tbody></table><p> 由上表，我们得到abc的夏普里值分别为：   A=4/6，b=1/6，c=1/6  </p><p>从这个例子可以看到，票力是虚假的实力表示。b、c票里不同，但是夏普里值相同，即权利相同，他们在形成获胜联盟中作为关键加入者的课程性是一样的。 </p><h2 id="哈丁悲剧"><a href="#哈丁悲剧" class="headerlink" title="哈丁悲剧"></a><strong><font color="red"><a href="https://wiki.mbalib.com/wiki/%E5%85%AC%E5%9C%B0%E6%82%B2%E5%89%A7" rel="external nofollow noopener noreferrer" target="_blank">哈丁悲剧</a></font></strong></h2><p>公共资源悲剧最初由哈定提出。哈定举了这样一个具体事例：一群牧民面对向他们开放的草地，每一个牧民都想多养一头牛，因为多养一头牛增加的收益大于其购养成本，是合算的，尽管因平均草量下降，可能使整个牧区的牛的单位收益下降。每个牧民都可能多增加一头牛，草地将可能被过度放牧，从而不能满足牛的食量，致使所有牧民的牛均饿死。这就是公共资源的悲剧。</p><p>“公地悲剧”展现的是一幅私人利用免费午餐时的狼狈景象——无休止地掠夺。“悲剧”的意义就在于此。根据哈丁的讨论，结合我们对挣扎在生活磨难中的人们的理解，“公地悲剧”的发生机理似乎可以这样来理解：勤劳的人为个人的生计而算计，在一番忽视远期利益的计算后，开始为眼前利益而“杀鸡取卵”，没有规则，没有产权制度，没有强制，最后，导致公共财产——那个人们赖依生存的摇篮的崩溃，公地悲剧”的更准确的提法是：无节制的、开放式的、资源利用的灾难。</p><p> 应对之策：</p><p>1、明确和稳定产权。   </p><p>2、配合企业制度改革，力争做到公共产品私人供给。  </p><p>3、加强制度建设，重视委托、代理、搭便车、机会主义问题研究。  </p><h2 id="最小最大策略"><a href="#最小最大策略" class="headerlink" title="最小最大策略"></a><a href="https://wiki.mbalib.com/wiki/%E6%9C%80%E5%A4%A7%E6%9C%80%E5%B0%8F%E7%AD%96%E7%95%A5" rel="external nofollow noopener noreferrer" target="_blank">最小最大策略</a></h2><p>在二人零和博弈中，参与者的利益严格相反（一人所得等于另一人所失），每个参与者都会尽最大努力使对手的最大收益最小化，而他的对手则正好相反，他们努力使自己的最小收益最大化。</p><h2 id="鳄鱼法则"><a href="#鳄鱼法则" class="headerlink" title="鳄鱼法则"></a><a href="https://wiki.mbalib.com/wiki/%E9%B3%84%E9%B1%BC%E6%B3%95%E5%88%99" rel="external nofollow noopener noreferrer" target="_blank">鳄鱼法则</a></h2><p>假定一只鳄鱼咬住你的脚，如果你用手去试图挣脱你的脚，鳄鱼便会同时咬住你的脚与手。你愈挣扎，就被咬住得越多。所以，万一鳄鱼咬住你的脚，你唯一的机会就是牺牲一只脚。 </p><p>给人的启示：当发现自己的行动已经离既定方向越来越远时，果断做出选择，停止行动，不要有一丝侥幸心理。</p><h2 id="蔡格尼效应"><a href="#蔡格尼效应" class="headerlink" title="蔡格尼效应"></a><a href="https://wiki.mbalib.com/wiki/%E8%94%A1%E6%A0%BC%E5%B0%BC%E6%95%88%E5%BA%94" rel="external nofollow noopener noreferrer" target="_blank">蔡格尼效应</a></h2><p>是指人们天生有一种办事有始有终的驱动力，人们之所以会忘记已完成的工作，是因为欲完成的动机已经得到满足；如果工作尚未完成，这同一动机便使他对此留下深刻印象。 一般来说，工作难度越大，思维越活跃，短时间强化的强度就越高，而强化对增强记忆是有益的。因此，被中止的工作往往容易被首先回忆。此外，工作难度大时，人们的情绪变化也大，而情绪对回忆是有很大的帮助。</p><p>避免措施：</p><p>第一，在看事物的时候运用自己的价值观标准，如果发现一个工作计划不值得做，那么就勇敢地放弃。 </p><p>第二，编制一个时间表，把必须做的事以及要费的时间都写下来。努力培养出一种较合实际的意识，把期限定在要求办妥的时间以前。如果有笔帐必须在12月1日缴付，那就预订在11月25日付出。 </p><p>第三，一点一滴地强化意志力，我们可以先从一件小事来训练自己，比如强迫自己在洗碗槽里留下几只碟子不洗，看一本书的时候，尝试停一下，想想自己是否在浪费时间和精力，如果是的，要不要继续看下去？ </p><p>第四，从现在开始：做任何事情，不要想着我还有时间去做，等待片刻；这样子会让大脑产生一定的滞后性，会让自己产生懒惰的行文；因此，想到就去实现，做是一切成功的前提； </p><p>第五，练习是一件好事，但是切勿目标盲目； </p><p>第六，制定一个准确的截止日期；针对每一项工作任务，预测可能需要的时间，根据时间结点来评估自己的任务完成计划； </p><p>第七，细分每一步工作计划：对于一项工作任务，不要盲目的去做，前提是仔细思考，细化每一个任务步骤，结合每一步任务所需要的条件即可</p><h2 id="马太效应"><a href="#马太效应" class="headerlink" title="马太效应"></a><a href="https://wiki.mbalib.com/wiki/%E9%A9%AC%E5%A4%AA%E6%95%88%E5%BA%94" rel="external nofollow noopener noreferrer" target="_blank">马太效应</a></h2><p>马太效应（Matthew Effect），是指好的愈好，坏的愈坏，多的愈多，少的愈少的一种现象。即两极分化现象。来自于圣经《新约•马太福音》中的一则寓言。</p><p>1968年，美国科学史研究者罗伯特·莫顿（Robert K. Merton）提出这个术语用以概括一种社会心理现象：“相对于那些不知名的研究者，声名显赫的科学家通常得到更多的声望即使他们的成就是相似的，同样地，在同一个项目上，声誉通常给予那些已经出名的研究者，例如，一个奖项几乎总是授予最资深的研究者，即使所有工作都是一个研究生完成的。”</p><p>此术语后为经济学界所借用，反映贫者愈贫，富者愈富，赢家通吃的经济学中收入分配不公的现象。 </p><h2 id="群体效应"><a href="#群体效应" class="headerlink" title="群体效应"></a><a href="https://wiki.mbalib.com/wiki/%E7%BE%A4%E4%BD%93%E6%95%88%E5%BA%94" rel="external nofollow noopener noreferrer" target="_blank">群体效应</a></h2><p>个体在群体的压力下，在认知，判断，信念和行为等方面，自愿与全体中的多数保持一致。既个体行为总是以全体行为为参照。</p><p>产生的原因为：1.寻求行为准则；2.避免孤独感；3.群体凝聚力。</p><p>📚📚💎💎</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="读书笔记" scheme="https://www.iamzmj.top/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://www.iamzmj.top/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="博弈论" scheme="https://www.iamzmj.top/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署谷歌浏览器</title>
    <link href="https://www.iamzmj.top/posts/d4e355e4.html"/>
    <id>https://www.iamzmj.top/posts/d4e355e4.html</id>
    <published>2020-01-04T16:39:27.000Z</published>
    <updated>2020-01-05T14:31:58.663Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>Centos7安装完图形界面系统后会自带是 火狐 Firefox 浏览器，虽然很优秀，但平时 谷歌 Chrome 浏览器用习惯了，有很多标签，我希望同步回来，所以安装一个 Google Chrome 浏览器非常有必要，本次部署环境为Centos7操作系统         </p>  <img src="http://111.229.17.211:3389/imgs/2020/01/fb9c661aa42a8b83.jpg" width="200">  <h1 id="下载Chome-rpm包"><a href="#下载Chome-rpm包" class="headerlink" title="下载Chome rpm包"></a>下载Chome rpm包</h1><p>指定下载位置为 /etc/apt/sources.list.d/</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https:<span class="regexp">//</span>dl.google.com<span class="regexp">/linux/</span>direct<span class="regexp">/google-chrome-stable_current_x86_64.rpm -P /</span>etc<span class="regexp">/apt/</span>sources.list.d<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h1 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y lsb</span><br><span class="line">yum <span class="keyword">install</span> -y libXScrnSaver</span><br></pre></td></tr></table></figure><h1 id="安装Chome"><a href="#安装Chome" class="headerlink" title="安装Chome"></a>安装Chome</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">google-chrome-stable_current_x86_64</span><span class="selector-class">.rpm</span></span><br></pre></td></tr></table></figure><h1 id="安装问题解决"><a href="#安装问题解决" class="headerlink" title="安装问题解决"></a>安装问题解决</h1><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base) [root@VM_0_2_centos sources.list.d]# rpm -ivh google-chrome-stable_current_x86_64.rpm</span><br><span class="line">警告：google-chrome-stable_current_x86_64.rpm: 头V4 DSA/SHA1 Signature, 密钥 ID 7fac5991: NOKEY</span><br><span class="line">错误：依赖检测失败：</span><br><span class="line">libappindicator3.so<span class="meta">.1</span>()(64bit) 被 google-chrome-stable-<span class="number">79.0</span><span class="meta">.3945</span><span class="meta">.88</span>-<span class="number">1.</span>x86_64 需要</span><br><span class="line">liberation-fonts 被 google-chrome-stable-<span class="number">79.0</span><span class="meta">.3945</span><span class="meta">.88</span>-<span class="number">1.</span>x86_64 需要</span><br></pre></td></tr></table></figure><p>根据错误提示安装对应依赖：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> liberation-fonts           <span class="comment">#对应错误1</span></span><br><span class="line">yum <span class="keyword">install</span> libappindicator-gtk3       <span class="comment">#对应错误2</span></span><br></pre></td></tr></table></figure><p>再次安装Chome</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">google-chrome-stable_current_x86_64</span><span class="selector-class">.rpm</span></span><br></pre></td></tr></table></figure><p>安装成功提示</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(base) [root@VM_0_2_centos sources.list.d]# rpm -ivh google-chrome-stable_current_x86_64.rpm</span><br><span class="line">警告：google-chrome-stable_current_x86_64.rpm: 头V4 DSA/SHA1 Signature, 密钥 ID <span class="number">7</span>fac5991: NOKEY</span><br><span class="line">准备中...                          ################################# [<span class="number">100</span>%]</span><br><span class="line">正在升级/安装...</span><br><span class="line">   <span class="number">1</span>:google-chrome-stable<span class="number">-79.0</span><span class="number">.3945</span><span class="number">.88</span>################################# [<span class="number">100</span>%]</span><br><span class="line">Redirecting to /bin/systemctl start atd.service</span><br></pre></td></tr></table></figure><p>系统桌面—应用程序—互联网—Chome已安装。 <img src="http://111.229.17.211:3389/imgs/2020/01/b52e506c9c2d9f7f.jpg">    </p><img src="http://111.229.17.211:3389/imgs/2020/01/ea627957487d5f96.png"><p>到此谷歌浏览器安装完毕。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="Centos7" scheme="https://www.iamzmj.top/tags/Centos7/"/>
    
      <category term="谷歌浏览器" scheme="https://www.iamzmj.top/tags/%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署图形化界面</title>
    <link href="https://www.iamzmj.top/posts/8b61043f.html"/>
    <id>https://www.iamzmj.top/posts/8b61043f.html</id>
    <published>2020-01-02T09:34:46.000Z</published>
    <updated>2020-01-05T14:35:17.465Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>腾讯云Linux系统默认是无图形化界面的，命令行不熟练话使用非常不方便，拥有一个图形化界面使用起来会非常的方便。本次就尝试在云服务器Centos7操作系统下部署一个”GNOME Desktop”图形化界面。</p>  <img src="http://111.229.17.211:3389/imgs/2020/01/37d2f5e5efb5137c.jpg">  <h1 id="安装图形化桌面安装包"><a href="#安装图形化桌面安装包" class="headerlink" title="安装图形化桌面安装包"></a>安装图形化桌面安装包</h1><p>SSH远程登陆云服务器 输入以下指令:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yum</span> groupinstall <span class="string">"GNOME Desktop"</span> <span class="string">"Graphical Administration Tools"</span></span><br></pre></td></tr></table></figure><p>再输入’Y’确认安装 。</p><h1 id="设置图形化界面为默认启动"><a href="#设置图形化界面为默认启动" class="headerlink" title="设置图形化界面为默认启动"></a>设置图形化界面为默认启动</h1><p>输入如下指令：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">runlevel5</span>.<span class="title">target</span> /<span class="title">etc</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">default</span>.<span class="title">target</span></span></span><br></pre></td></tr></table></figure><h1 id="重启服务器"><a href="#重启服务器" class="headerlink" title="重启服务器"></a>重启服务器</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">reboot</span></span><br></pre></td></tr></table></figure><h1 id="VNC方式登陆"><a href="#VNC方式登陆" class="headerlink" title="VNC方式登陆"></a>VNC方式登陆</h1><p>登陆腾讯云控制器—实例—登陆—VNC方式</p><img src="http://111.229.17.211:3389/imgs/2020/01/f397239663f6ef16.jpg"><p>按照提示一步一步往下操作既可进入页面。</p><img src="http://111.229.17.211:3389/imgs/2020/01/ea3391d261625a9c.jpg">  <p>到此图形化界面安装完毕。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="Centos7" scheme="https://www.iamzmj.top/tags/Centos7/"/>
    
      <category term="图形化界面" scheme="https://www.iamzmj.top/tags/%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>家常菜谱汇总</title>
    <link href="https://www.iamzmj.top/posts/cf8a8166.html"/>
    <id>https://www.iamzmj.top/posts/cf8a8166.html</id>
    <published>2020-01-01T06:00:12.000Z</published>
    <updated>2020-01-09T12:57:18.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>做饭永远是一件让人头痛的事情啊！做一道美味的家常菜犒劳自己和家人那真是一件非常的棒的事情。</p><p>在此持续搜集一些比较火的博主的家常菜的制作视频以备不时之需。</p><p>🍆🥔🥕🌽🌶️🥒🥦🍄🥜🌰   🍖🍗🥓🍦~~🥰🥰🥰🥰</p>    <div id="aplayer-roeypXyc" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1412478063" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div><hr><h2 id="美食家王刚"><a href="#美食家王刚" class="headerlink" title="美食家王刚"></a>美食家王刚</h2><table><thead><tr><th>家常美食</th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://pan.baidu.com/s/1KFSr6npF3YwU9NfchLXu2Q" rel="external nofollow noopener noreferrer" target="_blank">醋大蒜制作</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1SuONhqpyat2NdfVDfJLpiA" rel="external nofollow noopener noreferrer" target="_blank">盐水毛豆</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/15WjvLQ7kwUjDgK4k9EnaKQ" rel="external nofollow noopener noreferrer" target="_blank">小葱煎蛋</a></td><td><a href="https://pan.baidu.com/s/1-nIM8JpLHgP_eHPTbAY3yQ" rel="external nofollow noopener noreferrer" target="_blank">鸡蛋炒米粉</a></td><td><a href="https://pan.baidu.com/s/1NKhWNjRBEJiWCwDwsYi0Fw" rel="external nofollow noopener noreferrer" target="_blank">豆腐煎鸡蛋</a></td><td><a href="https://pan.baidu.com/s/1rgiLgxB6yWaafYplss3YZQ" rel="external nofollow noopener noreferrer" target="_blank">韭菜炒鸡蛋</a></td></tr><tr><td><a href="https://pan.baidu.com/s/14O27QcbvdAb6Y3ZoGqZLiA" rel="external nofollow noopener noreferrer" target="_blank">醋溜大白菜</a></td><td><a href="https://pan.baidu.com/s/1FKs_HnE8AyZqOxUkQG2EVQ" rel="external nofollow noopener noreferrer" target="_blank">酸辣大白菜</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1O4ITPr53lEEfHIYPKU7qog" rel="external nofollow noopener noreferrer" target="_blank">炝炒土豆丝</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1lnVGDZfFkoOXCQA9qrVydQ" rel="external nofollow noopener noreferrer" target="_blank">肉末烧茄子</a></td><td><a href="https://pan.baidu.com/s/1mUD-tNKu_MR3ABpuk3VIBg" rel="external nofollow noopener noreferrer" target="_blank">鱼香茄子</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/14obcC4VFiZo_jFkCiQyH7A" rel="external nofollow noopener noreferrer" target="_blank">麻婆豆腐</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1czWobDkECm0Hx2asHz2Nmw" rel="external nofollow noopener noreferrer" target="_blank">手工番茄鸡蛋面</a></td><td><a href="https://pan.baidu.com/s/1pr4dYdGsc3yqxMxwgtis6Q" rel="external nofollow noopener noreferrer" target="_blank">川味牛肉面</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/19DmRhdFPj1VS3XMclfsXIw" rel="external nofollow noopener noreferrer" target="_blank">脆青瓜炒肉</a></td><td><a href="https://pan.baidu.com/s/1O3yhi5zDM97gW1ZTOMNmNQ" rel="external nofollow noopener noreferrer" target="_blank">青椒牛肉丝</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/13an4vDGnkkG5oXdm9heG9g" rel="external nofollow noopener noreferrer" target="_blank">汆水丸子</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1G37ylhJUSmOx64N4MZ_-zg" rel="external nofollow noopener noreferrer" target="_blank">糖醋排骨</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1OQPiqMZ0RLFTyPxkT2QP6A" rel="external nofollow noopener noreferrer" target="_blank">口味猪肝</a></td><td><a href="https://pan.baidu.com/s/1428dx5W3V7nP58G1DbSRIA" rel="external nofollow noopener noreferrer" target="_blank">回锅肉</a></td><td><a href="https://pan.baidu.com/s/1dq4uQEdQsqWO8FfXBdnKkw" rel="external nofollow noopener noreferrer" target="_blank">椒香腰片</a></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/13KEHcgc2tLzn3dCfH1lXOw" rel="external nofollow noopener noreferrer" target="_blank">口水鸡</a></td><td><a href="https://pan.baidu.com/s/1JHF3o1jYQPAz37HWJtc74w" rel="external nofollow noopener noreferrer" target="_blank">可乐鸡翅</a></td><td><a href="https://pan.baidu.com/s/1ZfqVR_HRc2rDIAOUj-8CkQ" rel="external nofollow noopener noreferrer" target="_blank">辣炒鸡爪</a></td><td><a href="https://pan.baidu.com/s/1vhi_-_ZPL_U0YgpwXj0H5g" rel="external nofollow noopener noreferrer" target="_blank">青椒炒鸡丁</a></td></tr><tr><td><a href="https://pan.baidu.com/s/146LTuYeRAOZqwMXnXcQicg" rel="external nofollow noopener noreferrer" target="_blank">啤酒鸭</a></td><td><a href="https://pan.baidu.com/s/15PI-cBwNco0BSM9-Z6Mr2A" rel="external nofollow noopener noreferrer" target="_blank">干锅鸭脚</a></td><td><a href="https://pan.baidu.com/s/1_52hZ1c1_YIcHD6Z3I43tw" rel="external nofollow noopener noreferrer" target="_blank">老鸭萝卜汤</a></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1CVo2KFMIQGX2lipeODONqA" rel="external nofollow noopener noreferrer" target="_blank">碎炒羊肉</a></td><td><a href="https://pan.baidu.com/s/1v-17i0xrUwVsBkZXc2xmXg" rel="external nofollow noopener noreferrer" target="_blank">羊肉汤</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1Nsjtwa7g_NpgKKQwVtFM9A" rel="external nofollow noopener noreferrer" target="_blank">干煎带鱼</a></td><td><a href="https://pan.baidu.com/s/19km-_i7vJ291e5bs_tWeMw" rel="external nofollow noopener noreferrer" target="_blank">藿香鳝鱼</a></td><td><a href="https://pan.baidu.com/s/1bpypZ0rnVWQRt_bVHk-5BA" rel="external nofollow noopener noreferrer" target="_blank">番茄鲈鱼</a></td><td><a href="https://pan.baidu.com/s/1iWAiz0d-SThgOoiQURjGTQ" rel="external nofollow noopener noreferrer" target="_blank">盐烧鲈鱼</a></td></tr><tr><td><a href="https://pan.baidu.com/s/1lqQRug3T2mX7Y-6uZznhCA" rel="external nofollow noopener noreferrer" target="_blank">椒香鲤鱼</a></td><td><a href="https://pan.baidu.com/s/1jSkppg3LwJtT79MKe2Rk9A" rel="external nofollow noopener noreferrer" target="_blank">葱香鲫鱼</a></td><td><a href="https://pan.baidu.com/s/1SDHbZlL_wsJA4iL1M6rBqw" rel="external nofollow noopener noreferrer" target="_blank">生焖鱼头</a></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1qS3bSTIo_56ZI3-Sjc-Bfg" rel="external nofollow noopener noreferrer" target="_blank">甲鱼汤</a></td><td><a href="https://pan.baidu.com/s/1EDMwz9Bcm55C1rHiOIYS8w" rel="external nofollow noopener noreferrer" target="_blank">青椒爆甲鱼</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1Eg-Z7deLtzWt1KsNG_cdaA" rel="external nofollow noopener noreferrer" target="_blank">清蒸小龙虾</a></td><td><a href="https://pan.baidu.com/s/1qjYnf2VU-0O-KJt-pO6V6Q" rel="external nofollow noopener noreferrer" target="_blank">蒜蓉小龙虾</a></td><td><a href="https://pan.baidu.com/s/1J3hrPZbnzcQfN_5Z6CwpIg" rel="external nofollow noopener noreferrer" target="_blank">蒜蓉粉丝蒸花甲</a></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1V1JotSViXXT53nGkWrx72g" rel="external nofollow noopener noreferrer" target="_blank">鱼丸火锅</a></td><td><a href="https://pan.baidu.com/s/1cGfW-RzT5e-j2IjiFPbcHA" rel="external nofollow noopener noreferrer" target="_blank">香煎螃蟹</a></td><td><a href="https://pan.baidu.com/s/1pAyGQSTaEFpQUw-vOYWiRQ" rel="external nofollow noopener noreferrer" target="_blank">盐焗海鲜</a></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1h3E30QUxfeFUXGxvQIQN2Q" rel="external nofollow noopener noreferrer" target="_blank">鲜椒小蛙</a></td><td><a href="https://pan.baidu.com/s/1gbktlZHwQqTtG9pqIyD7Bw" rel="external nofollow noopener noreferrer" target="_blank">辣炒田螺</a></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>技巧</th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://pan.baidu.com/s/192SEZ2GSmKUcBltPK_dvHA" rel="external nofollow noopener noreferrer" target="_blank">切土豆丝</a></td><td><a href="https://pan.baidu.com/s/1zmKWiCJxKkbI-XdN_oQ3FQ" rel="external nofollow noopener noreferrer" target="_blank">去鱼腥味</a></td><td><a href="https://pan.baidu.com/s/1N8e1KeCRPtUnH6I_iKD8zA" rel="external nofollow noopener noreferrer" target="_blank">家猪分解</a></td><td><a href="https://pan.baidu.com/s/1Rn9viqbtp-sXcWjlLkqEiA" rel="external nofollow noopener noreferrer" target="_blank">挑选猪腿</a></td></tr><tr><td><a href="https://pan.baidu.com/s/1bE2ISXLIk4A1OnwPjdDRyA" rel="external nofollow noopener noreferrer" target="_blank">查注水肉</a></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="日食记"><a href="#日食记" class="headerlink" title="日食记"></a>日食记</h2><table><thead><tr><th>家常美食</th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://pan.baidu.com/s/1hCOzRNOtCGmN_DSX3uvMng" rel="external nofollow noopener noreferrer" target="_blank">自制棒冰</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1qNp7d0zFrGvL7dBlkKELlA" rel="external nofollow noopener noreferrer" target="_blank">无敌炒饭</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1ko5xHpU_PmPU-y86uSTEYQ" rel="external nofollow noopener noreferrer" target="_blank">葱油拌面</a></td><td><a href="https://pan.baidu.com/s/1lqGMFxKbV5o2HhrVYBWAbA" rel="external nofollow noopener noreferrer" target="_blank">豚骨拉面</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1W4kzifh_sw3byvHDGMAvzA" rel="external nofollow noopener noreferrer" target="_blank">南乳猪手</a></td><td><a href="https://pan.baidu.com/s/1QR2DCZ5Fa3w8rK1kRatfjA" rel="external nofollow noopener noreferrer" target="_blank">红烧肉</a></td><td><a href="https://pan.baidu.com/s/1Ydtek4fbM7AFeVPYu_6yRA" rel="external nofollow noopener noreferrer" target="_blank">土豆牛腩</a></td><td><a href="https://pan.baidu.com/s/1mkZpAfS_hyt9G2gwSiJ6zg" rel="external nofollow noopener noreferrer" target="_blank">家庭鸡公煲</a></td></tr><tr><td><a href="https://pan.baidu.com/s/1dDnLyzZvmxtPZQs3Xf461w" rel="external nofollow noopener noreferrer" target="_blank">清蒸大闸蟹</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1Aq3eEluHfmoc_nTlBLgz6w" rel="external nofollow noopener noreferrer" target="_blank">手工便当</a></td><td><a href="https://pan.baidu.com/s/1Bb4vZ8YNgjNGij2yjZDGew" rel="external nofollow noopener noreferrer" target="_blank">鹌鹑蛋虾球</a></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1owCB8KHby53e_AYrTjmvHg" rel="external nofollow noopener noreferrer" target="_blank">酸菜鱼火锅</a></td><td><a href="https://pan.baidu.com/s/12EIc9t6hWLj65vpgZD2aXg" rel="external nofollow noopener noreferrer" target="_blank">珍珠丸子</a></td><td><a href="https://pan.baidu.com/s/1xhzfZTmaLoNQSe3zf_tKLA" rel="external nofollow noopener noreferrer" target="_blank">灵魂花甲</a></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/1NhYlcWcZ4lTJ5jnxtDegMA" rel="external nofollow noopener noreferrer" target="_blank">可乐鸡翅</a></td><td></td><td></td><td></td></tr><tr><td><a href="https://pan.baidu.com/s/19lusbXphos3wzUR1ZTEBQw" rel="external nofollow noopener noreferrer" target="_blank">炸串美味</a></td><td></td><td></td><td></td></tr></tbody></table><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><table><thead><tr><th>家常美食</th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://pan.baidu.com/s/10tyJnZ3ixwX2-CsmFfjxhA" rel="external nofollow noopener noreferrer" target="_blank">番茄炸蛋面</a></td><td><a href="https://pan.baidu.com/s/1-RUIf5soppHhEBqgd-pAPw" rel="external nofollow noopener noreferrer" target="_blank">湖州羊肉面</a></td><td><a href="https://pan.baidu.com/s/1CmYH4HIEqkmnJOQNwp7qAQ" rel="external nofollow noopener noreferrer" target="_blank">牛肉蛋盖饭</a></td><td><a href="https://pan.baidu.com/s/1qvA9edS06KThNiXcz9S-4w" rel="external nofollow noopener noreferrer" target="_blank">蒜泥白肉</a></td></tr><tr><td><a href="https://pan.baidu.com/s/1k9ZSjI-3kdGy-JiloUAwcw" rel="external nofollow noopener noreferrer" target="_blank">油爆虾</a></td><td></td><td></td><td></td></tr></tbody></table>  <img src="http://111.229.17.211:3389/imgs/2020/01/ce7e4c75c9b89a53.jpg" width="800">  ]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="菜谱" scheme="https://www.iamzmj.top/categories/%E8%8F%9C%E8%B0%B1/"/>
    
    
      <category term="家常菜" scheme="https://www.iamzmj.top/tags/%E5%AE%B6%E5%B8%B8%E8%8F%9C/"/>
    
  </entry>
  
  <entry>
    <title>Nginx服务重启失败原因分析</title>
    <link href="https://www.iamzmj.top/posts/5e4c50a4.html"/>
    <id>https://www.iamzmj.top/posts/5e4c50a4.html</id>
    <published>2019-12-27T10:12:34.000Z</published>
    <updated>2019-12-30T02:44:00.130Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="Nginx服务重启失败原因汇总"><a href="#Nginx服务重启失败原因汇总" class="headerlink" title="Nginx服务重启失败原因汇总"></a><strong>Nginx服务重启失败</strong>原因汇总</h1><p>Nginx是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。由于意外重启腾讯云服务器，造成<strong>Nginx服务无法重启</strong>，云服务器上部署的一些应用瞬间无法访问了。。。于是进行原因排查。</p><h2 id="无效的pid号"><a href="#无效的pid号" class="headerlink" title="无效的pid号"></a>无效的pid号</h2><p>远程登陆云服务器，重载Nginx</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nginx -s reload</span></span><br></pre></td></tr></table></figure><p>提示：无效的pid号。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@jupyter</span> ~]<span class="meta"># </span></span><br><span class="line">nginx: [error] invalid PID <span class="built_in">number</span> <span class="string">""</span> <span class="keyword">in</span> <span class="string">"/www/server/nginx/logs/nginx.pid"</span></span><br><span class="line">[root<span class="symbol">@jupyter</span> ~]<span class="meta">#</span></span><br></pre></td></tr></table></figure><p><strong>解决方法</strong></p><p>查看配置文件，显示无问题。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@jupyter ~]# nginx -t</span><br><span class="line">nginx: the configuration <span class="keyword">file</span> /www/server/nginx/<span class="keyword">conf</span>/nginx.<span class="keyword">conf</span> <span class="keyword">syntax</span> <span class="keyword">is</span> ok</span><br><span class="line">nginx: configuration <span class="keyword">file</span> /www/server/nginx/<span class="keyword">conf</span>/nginx.<span class="keyword">conf</span> test <span class="keyword">is</span> successful</span><br></pre></td></tr></table></figure><p>首先找到nginx进程 pid</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@jupyter ~]# <span class="keyword">ps</span> aux | <span class="keyword">grep</span> <span class="string">"nginx: master"</span> | <span class="keyword">grep</span> -v <span class="keyword">pts</span> | awk <span class="string">'&#123;print $2;&#125;'</span></span><br><span class="line"><span class="number">21968</span></span><br></pre></td></tr></table></figure><p>将pid重新写入nginx.pid,需要注意的是 nginx.pid 的文件的路径，不同的配置，可能路径是不同的。 可以从之前的错误提示中找到路劲。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> `<span class="keyword">ps</span> aux | <span class="keyword">grep</span> <span class="string">"nginx: master"</span> | <span class="keyword">grep</span> -v <span class="keyword">pts</span> | awk <span class="string">'&#123;print $2;&#125;'</span>` &gt; /www/server/nginx/logs/nginx.pid</span><br></pre></td></tr></table></figure><p>最后重启Nginx</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nginx -s reload</span></span><br></pre></td></tr></table></figure><p>问题解决。</p><hr><p>其它相关问题还未有碰到！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Nginx" scheme="https://www.iamzmj.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://www.iamzmj.top/tags/Nginx/"/>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署JupyterLab</title>
    <link href="https://www.iamzmj.top/posts/f5651246.html"/>
    <id>https://www.iamzmj.top/posts/f5651246.html</id>
    <published>2019-12-27T02:41:09.000Z</published>
    <updated>2019-12-30T02:55:41.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://i.loli.net/2019/12/29/D4m9INTSViogdJu.jpg" alt></p><p> Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。 用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等 。用户可以通过电子邮件，Dropbox，GitHub 和 Jupyter Notebook Viewer，将 Jupyter Notebook 分享给其他人。在其中，代码可以实时的生成图像，视频，LaTeX和JavaScript。而<a href="http://jupyter.org/" rel="external nofollow noopener noreferrer" target="_blank">Jupyter Lab</a> 是 Jupyter Notebook的升级版本，</p><h1 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h1><p>搭建环境：Centos7 系统，宝塔面板已安装。</p><p><strong>将执行脚本获取到本地：</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/anaconda/archive/Anaconda3-<span class="number">5.3</span>.<span class="number">1</span>-Linux-x86_64.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p><strong>执行Anaconda安装：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">bash</span> <span class="selector-tag">Anaconda3-5</span><span class="selector-class">.3</span><span class="selector-class">.1-Linux-x86_64</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure><p><strong>安装过程提示1：</strong></p><p>直接回车</p><img src="http://111.229.17.211:3389/imgs/2019/12/1cc687f16cbbab80.jpg"><p><strong>安装过程提示2：</strong></p><p>输入yes+回车</p><img src="http://111.229.17.211:3389/imgs/2019/12/86d1fb4049aa3f88.jpg"><p><strong>安装提示3：</strong></p><p>Anaconda的安装位置默认会在执行用户的home目录下的anaconda3目录中，如果是要给服务器的全部用户安装的话，建议大家改成个公共的位置（如果安装时没有添加<code>-u</code>，目录如果存在会报错）。下面我是给改成安装在<code>/opt/anaconda3</code>下了。</p><img src="http://111.229.17.211:3389/imgs/2019/12/6f6271a9a4a839e4.jpg"><p>其实安装位置可以在执行安装脚本的时候直接指定，像上面要指定安装到<code>/opt/anaconda3</code>目录下，可以这样修改执行内容：<code>bash bash Anaconda3-5.3.1-Linux-x86_64.sh -p /opt/anaconda3</code>，这一步安装目录就已经指定好了，直接回车了。</p><p><strong>安装提示4：</strong></p><p>修改.bashrc脚本将Anaconda目录添加到PATH中，输入yes+回车</p><img src="http://111.229.17.211:3389/imgs/2019/12/d074c28935ec81b2.jpg"><p><strong>安装提示5：</strong></p><p>更新：安装2019版本的时候显示如下，输入yes+回车</p><img src="http://111.229.17.211:3389/imgs/2019/12/ccbe7c145394149f.jpg"><p><strong>安装提示6：</strong></p><p>是否安装Microsoft VSCode，由于是在云服务器上部署的，输入no+回车</p><img src="http://111.229.17.211:3389/imgs/2019/12/f416d6b1656076fd.jpg"><p>此时Anaconda安装完成！！</p><p>直接输入<code>conda</code>应该会提示说没找到该命令，这时候执行下：<code>source ~/.bashrc</code>，之后就可以正常使用了</p><img src="http://111.229.17.211:3389/imgs/2019/12/63f133c5cf89b26c.jpg"><h1 id="Conda管理多个python"><a href="#Conda管理多个python" class="headerlink" title="Conda管理多个python"></a>Conda管理多个python</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda<span class="built_in"> upgrade </span>conda</span><br><span class="line">conda update --all</span><br><span class="line">conda update anaconda</span><br></pre></td></tr></table></figure><p>查看conda环境：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">conda</span> <span class="literal">info</span> -e</span><br></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于 python3.7 创建一个名为py38 的环境</span></span><br><span class="line">conda <span class="built_in">create</span> <span class="comment">--name py38 python=3.8</span></span><br></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于 python2.7 创建一个名为py27 的环境</span></span><br><span class="line">conda <span class="built_in">create</span> <span class="comment">--name py27 python=2.7</span></span><br></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 激活环境</span></span><br><span class="line"><span class="built_in">activate</span> py3  <span class="comment"># windows</span></span><br><span class="line">source <span class="built_in">activate</span> 环境名 <span class="comment"># linux/mac</span></span><br></pre></td></tr></table></figure><p>退出conda base环境</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">conda deactivate</span></span><br></pre></td></tr></table></figure><p>进入conda base 环境</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">activate</span> base</span><br></pre></td></tr></table></figure><h1 id="安装Jupyter-lab"><a href="#安装Jupyter-lab" class="headerlink" title="安装Jupyter lab"></a>安装Jupyter lab</h1><p>1.在anaconda环境中安装Jupyter lab</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> jupyterlab</span><br></pre></td></tr></table></figure><p>2生成配置文件</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --<span class="keyword">generate</span>-<span class="keyword">config</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/14e9c41792df2345.jpg"><p>3.生成密码,创建哈希密码</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ipython</span><br><span class="line"><span class="keyword">from</span> notebook.auth <span class="keyword">import</span> passwd</span><br><span class="line">passwd()</span><br><span class="line"># 输入你自己设置登录JupyterLab界面的密码，</span><br><span class="line"># 然后就会生产下面这样的密码，将它记下来，待会儿用</span><br><span class="line"><span class="string">'sha1:---------------------------------------------'</span></span><br></pre></td></tr></table></figure><img src="http://111.229.17.211:3389/imgs/2019/12/2944335a57c64832.jpg"><p>4.宝塔面板打开 root/.jupyter/jupter_notebook_config.py,</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.allow_root = <span class="literal">True</span></span><br><span class="line">c.NotebookApp.ip = <span class="string">'*'</span></span><br><span class="line">c.NotebookApp.open_browser = <span class="literal">False</span></span><br><span class="line">c.NotebookApp.password = u<span class="string">'sha1:-------------------------------------------------'</span></span><br><span class="line">c.NotebookApp.port = <span class="number">8081</span></span><br><span class="line">c.NotebookApp.allow_remote_access = <span class="literal">True</span></span><br><span class="line">c.NotebookApp.notebook_dir = u<span class="string">'/home/jupyterlab'</span></span><br><span class="line"></span><br><span class="line">#################################</span><br><span class="line"></span><br><span class="line">允许以root方式运行jupyterlab</span><br><span class="line">允许任意ip段访问</span><br><span class="line">默认运行时不启动浏览器，因为服务器默认只有终端嘛</span><br><span class="line">设置之前生产的哈希密码</span><br><span class="line">设置访问端口</span><br><span class="line">允许远程访问</span><br><span class="line">jupyter运行目录</span><br></pre></td></tr></table></figure><p>到此，Jupyter lab已经安装成功了。</p><p>启动 Jupyter lab。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup jupyter lab <span class="meta">&amp;</span></span><br></pre></td></tr></table></figure><p>然后你就可以在浏览器输入地址</p><img src="http://111.229.17.211:3389/imgs/2019/12/29ab8bbacd3cf000.jpg"><h1 id="安装Jupyter-lab插件"><a href="#安装Jupyter-lab插件" class="headerlink" title="安装Jupyter lab插件"></a>安装Jupyter lab插件</h1><p><strong>安装Node.js</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">curl</span> -sL https://rpm.nodesource.com/setup_10.x | bash -</span><br><span class="line"></span><br><span class="line">yum install -y nodejs</span><br><span class="line"></span><br><span class="line">[root<span class="variable">@localhost</span> /]<span class="comment"># node -v</span></span><br><span class="line">v10.<span class="number">9</span>.<span class="number">0</span></span><br><span class="line">[root<span class="variable">@localhost</span> /]<span class="comment"># npm -v</span></span><br><span class="line"><span class="number">6</span>.<span class="number">2</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>安装插件</strong></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install </span><span class="keyword">jupyter_contrib_nbextensions</span></span><br><span class="line"><span class="keyword">jupyter </span>contrib nbextension <span class="keyword">install </span>--user</span><br></pre></td></tr></table></figure><p> 安装完后，命令行输入jupyter lab  –watch   进入Jupyter Lab界面。点击 Settings –&gt; Advanced Settings Editor ，将Extension Manager 里的enabled 的 false 改成 true（在右边的里面改），如下图：</p><p><img src="https://i.loli.net/2019/12/29/itASfVMUYdqoj93.png" alt></p><p>现在，看向界面左侧应该就可以看到一个插件管理的图标，点击就可以看到刚才安装的插件，这个插件还有查询功能，我们可以很方便的安装卸载插件，上面是已安装的插件，下面是可以安装的插件，安装完成后可以直接更新。</p><p><img src="https://i.loli.net/2019/12/29/HsuITApo5wcxVS6.png" alt></p><p>如果你下载了字体插件，还可以更改字体大小和字体：Setting –&gt; Jupyter Lab Theme</p><p><img src="https://i.loli.net/2019/12/29/X4eJsDEd8rwIxqO.png" alt></p><p>如果你下载了字体插件，还可以更改字体大小和字体：</p><p><img src="https://i.loli.net/2019/12/29/vstIo4puGmhrWnF.png" alt></p><h1 id="后台运行Jupyter-lab"><a href="#后台运行Jupyter-lab" class="headerlink" title="后台运行Jupyter lab"></a>后台运行Jupyter lab</h1><p><strong>1.后台运行</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup jupyter lab  --ip=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> --no-browser --allow-root &gt; jupyter.log <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><p>用&amp;让命令后台运行, 并把标准输出写入jupyter.log中</p><p>nohup表示no hang up, 就是不挂起, 于是这个命令执行后即使终端退出, 也不会停止运行.</p><p><strong>2.后台终止</strong></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -<span class="keyword">a</span>                <span class="comment">#查看进程pid</span></span><br><span class="line"><span class="built_in">kill</span> <span class="number">-9</span> pid          <span class="comment">#终止进程</span></span><br></pre></td></tr></table></figure><h1 id="卸载Jupyter-lab"><a href="#卸载Jupyter-lab" class="headerlink" title="卸载Jupyter lab"></a>卸载Jupyter lab</h1><p>命令行输入以下内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">uninstall</span> jupyter -y</span><br><span class="line">pip <span class="keyword">uninstall</span> jupyter_core -y</span><br><span class="line">pip <span class="keyword">uninstall</span> jupyter-<span class="keyword">client</span> -y</span><br><span class="line">pip <span class="keyword">uninstall</span> jupyter-console -y</span><br><span class="line">pip <span class="keyword">uninstall</span> notebook -y</span><br><span class="line">pip <span class="keyword">uninstall</span> qtconsole -y</span><br><span class="line">pip <span class="keyword">uninstall</span> nbconvert -y</span><br><span class="line">pip <span class="keyword">uninstall</span> nbformat -y</span><br></pre></td></tr></table></figure><p>参考</p><p><a href="https://jupyterlab.readthedocs.io/en/stable/getting_started/installation.html" rel="external nofollow noopener noreferrer" target="_blank">Jupyterlab官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Jupyter" scheme="https://www.iamzmj.top/categories/Jupyter/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="Jupyter" scheme="https://www.iamzmj.top/tags/Jupyter/"/>
    
      <category term="Jupyterlab" scheme="https://www.iamzmj.top/tags/Jupyterlab/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署Nextcloud</title>
    <link href="https://www.iamzmj.top/posts/f7aa0f14.html"/>
    <id>https://www.iamzmj.top/posts/f7aa0f14.html</id>
    <published>2019-12-16T02:50:05.000Z</published>
    <updated>2020-01-09T06:36:10.189Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>nextcloud  是基于云技术的工程教育平台，利用云技术，提高工程教育过程中教学、实验与创新的效率与效果。每一位nextcloud的使用者都可以以教师或学生身份登录， 从而使得每个人都可以传授知识也可以学习知识，真正做到any time， any where的工程教育全新愿景。</p><p>搭建环境：Centos7 系统，宝塔面板已安装。</p><img src=" http://111.229.17.211:3389/imgs/2020/01/d30c4ee6621bcc31.jpg "><h1 id="宝塔面板安装"><a href="#宝塔面板安装" class="headerlink" title="宝塔面板安装"></a>宝塔面板安装</h1><p>远程登陆腾讯云服务器，Centos系统安装命令 ：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -<span class="keyword">y</span> wget &amp;&amp; wget -O install.<span class="keyword">sh</span> http://download.bt.<span class="keyword">cn</span>/install/install_6.<span class="number">0</span>.<span class="keyword">sh</span> &amp;&amp; <span class="keyword">sh</span> install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>安装完成后根据界面提示链接和账号密码登陆宝塔面板。</p><p>安装必要的部署环境LNMP: Nginx/MySQL5.5+/PHP 7.0+</p><img src="https://i.loli.net/2019/12/17/rJZnf3p1TbDIliE.jpg" width="400"><h1 id="部署Nextcloud"><a href="#部署Nextcloud" class="headerlink" title="部署Nextcloud"></a>部署Nextcloud</h1><p>1.新建站点</p><img src="https://i.loli.net/2019/12/17/6noWLEbMS9VZhru.jpg"><p>2.点选文件，进入站点目录，然后点击远程下载</p><p>nextcloud的安装包下载地址</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>download.nextcloud.com<span class="regexp">/server/</span>releases<span class="regexp">/nextcloud-14.0.4.zip</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/17/VSL2gATOEMjDtWU.jpg"><p>下载完成后，点击右侧的“解压”，解压到nextcloud根目录。完成后可以看到有个nextcloud的文件夹，我们进入后将里面的文件复制到根目录。</p><img src=" http://111.229.17.211:3389/imgs/2020/01/1eab10a2e1f119a5.jpg "><p>以上几步完成后，就可以打开创建站点时的域名，创建管理员账号界面，输入管理员账号密码，数据库名和密码，数据库用户名。点击“安装完成”。（数据库账号和数据库密码同创建网站时所创建的数据库账号，密码）</p><img src=" http://111.229.17.211:3389/imgs/2020/01/870a80aec4315f7e.jpg "><p>点击安装完成，完成后会自动登录。</p><img src=" http://111.229.17.211:3389/imgs/2020/01/f5b7f35eda1d8e17.jpg "><img src=" http://111.229.17.211:3389/imgs/2020/01/d43c4a0354c05c09.jpg "><h1 id="安全及设置告警解决"><a href="#安全及设置告警解决" class="headerlink" title="安全及设置告警解决"></a>安全及设置告警解决</h1><p>点选设置—概览，系统检查跳出<font color="red">安全及设置警告</font>如下：</p><img src=" http://111.229.17.211:3389/imgs/2020/01/2e71839b282515d4.jpg "><p><strong>错误1：一些问题没有通过完整性检查</strong></p><p>点击无效文件列表，根据提示删除根目录下的无效文件，即可。</p><p><strong>错误2：PHP 内存限制低于建议值 512MB</strong></p><img src=" http://111.229.17.211:3389/imgs/2020/01/3519e5b1c0fcbfb5.jpg "><p>保存并重启PHP即可解决该问题。</p><p><strong>错误3：PHP 的安装似乎不正确，无法访问系统环境变量。getenv(“PATH”) 函数测试返回了一个空值。</strong></p><p>从宝塔文件管理，打开/www/server/php/73/etc/php-fpm.conf，在其尾部添加一行</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env[PATH] = <span class="regexp">/usr/local</span><span class="regexp">/bin:/usr</span><span class="regexp">/bin:/bin</span><span class="symbol">:/usr/local/php/bin</span></span><br></pre></td></tr></table></figure><img src=" http://111.229.17.211:3389/imgs/2020/01/c9abbd2d373d6a8b.jpg "><p>保存并重启PHP即可解决该问题。</p><p><strong>错误4：PHP 的组件 OPcache 没有正确配置</strong></p><p>在PHP7.3配置文件中替换如下几条语句</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">opcache.enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.enable_cli</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.interned_strings_buffer</span>=<span class="number">8</span></span><br><span class="line"><span class="attr">opcache.max_accelerated_files</span>=<span class="number">10000</span></span><br><span class="line"><span class="attr">opcache.memory_consumption</span>=<span class="number">128</span></span><br><span class="line"><span class="attr">opcache.save_comments</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.revalidate_freq</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><img src=" http://111.229.17.211:3389/imgs/2020/01/55c06279e80a1286.jpg "><p><strong>错误5：</strong></p><ul><li>1.您的网页服务器未正确设置以解析“/.well-known/caldav”。</li><li>2.您的网页服务器未正确设置以解析“/.well-known/carddav”。</li><li>3.内存缓存未配置，为了提升使用体验，请尽量配置内存缓存。</li></ul><p>(1和2)网站配置文件  location 部分添加如下两条语句保存即可。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rewrite <span class="regexp">/.well-known/</span>carddav <span class="regexp">/remote.php/</span>dav permanent;</span><br><span class="line">rewrite <span class="regexp">/.well-known/</span>caldav <span class="regexp">/remote.php/</span>dav permanent;</span><br></pre></td></tr></table></figure><img src=" http://111.229.17.211:3389/imgs/2020/01/064c3f8fd38787af.jpg "><p>(3)再在Mysql配置文件中添加两条语句</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">innodb_buffer_pool_size</span>=<span class="number">1</span>G</span><br><span class="line"><span class="attr">innodb_io_capacity</span>=<span class="number">4000</span></span><br></pre></td></tr></table></figure><img src=" http://111.229.17.211:3389/imgs/2020/01/139ee5ff6c737cd2.jpg "><p>将php的扩展开启Apcu和memcached，然后在Nextcloud的config.php文件添加：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">'memcache.local' =&gt; '\OC\Memcache\APCu',</span><br><span class="line">  'memcache.distributed' =&gt; '\OC\Memcache\Memcached',</span><br><span class="line">  'memcached_servers' =&gt; </span><br><span class="line"> <span class="built_in"> array </span>(</span><br><span class="line">    0 =&gt; </span><br><span class="line">   <span class="built_in"> array </span>(</span><br><span class="line">      0 =&gt; 'localhost',</span><br><span class="line">      1 =&gt; 11211,</span><br><span class="line">    ),</span><br><span class="line"> ),</span><br></pre></td></tr></table></figure><p>问题解决。</p><p><strong>错误6：通过 HTTP 访问网站不安全。强烈建议您将服务器设置成要求使用HTTPS 协议</strong></p><p>添加域名解析，绑定SSL证书。</p><p><strong>问题7：所使用的数据库为MySQL但没有对4字节字符的支持。为正确处理文件名或评论中使用的4字节字符（比如emoji表情），建议开启MySQL的4字节字符支持</strong>。</p><p>1.修改Mysql 配置文件[mysqld],添加语句</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#低于Mysql8.0版本，</span></span><br><span class="line"><span class="attr">innodb_large_prefix</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">innodb_file_format</span>=barracuda</span><br><span class="line"><span class="attr">innodb_file_per_table</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#高于Mysql8.0版本，</span></span><br><span class="line"><span class="attr">innodb_file_per_table</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><img src=" http://111.229.17.211:3389/imgs/2020/01/7f96b656589c0df6.jpg "><p>2.开启Mysql 4字节支持</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> sql_118_25_73_16  <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/17/ydTwb5QmDaFtHMl.jpg"><p>重启mysql.</p><p>3.修改nextcloud配置文件config.php，将 utf8mb4值改为 true官方给出的方法是使用occ命令，当然也可以直接修改config.php，occ命令：需要在nextcloud的安装根目录下执行：</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u www php occ config:<span class="built_in">system</span>:<span class="built_in">set</span> mysql.utf8mb4 --<span class="built_in">type</span> boolean --<span class="built_in">value</span>=<span class="string">"true"</span></span><br></pre></td></tr></table></figure><p>4.修复数据库，同样是occ命令，需要在nextcloud的安装根目录下执行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">-u</span> <span class="selector-tag">www</span> <span class="selector-tag">php</span> <span class="selector-tag">occ</span> <span class="selector-tag">maintenance</span><span class="selector-pseudo">:repair</span></span><br></pre></td></tr></table></figure><p>完成上述操作后，即可修复该告警。如出现登陆界面出现平台进入维护状态，只要修改config/config.php，将</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line"> 改成</span><br><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">false</span>,</span><br></pre></td></tr></table></figure><p><strong>问题8：HTTP的请求头 “Strict-Transport-Security” 未设置为至少 “15552000” 秒。</strong></p><p>解决方法还是修改nextcloud绑定的网站配置文件，添加一行header信息</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_header </span><span class="keyword">Strict-Transport-Security </span><span class="string">"max-age=63072000;"</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><img src=" http://111.229.17.211:3389/imgs/2020/01/7ac153d170a4607b.jpg "><p>最后附上完善的伪静态文件：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nextcloud一些关键目录的权限设置</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ ^/(data|config|\.ht|db_structure\.xml|README)</span> &#123;</span><br><span class="line">        <span class="attribute">deny</span> all;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#静态资源重定向1</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~* \/core\/(?:js\/oc\.js|preview\.png).*$</span> &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^</span> /index.php <span class="literal">last</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#webdav重定向</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/caldav(.*)$</span> /remote.php/caldav<span class="variable">$1</span> <span class="literal">redirect</span>;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/carddav(.*)$</span> /remote.php/carddav<span class="variable">$1</span> <span class="literal">redirect</span>;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/webdav(.*)$</span> /remote.php/webdav<span class="variable">$1</span> <span class="literal">redirect</span>;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^(/core/doc/[^\/]+/)$</span> <span class="variable">$1</span>/index.html;</span><br><span class="line"><span class="comment">#静态资源重定向2,支持使用acme脚本在申请证书时对域名的验证</span></span><br><span class="line">     <span class="attribute">if</span> (<span class="variable">$uri</span> !<span class="regexp">~* (?:\.(?:css|js|svg|gif|png|html|ttf|woff)$|^\/(?:remote|public|cron|status|ocs\/v1|ocs\/v2)\.php|^\/\.well-known\/acme-challenge\/.*$))</span>&#123;</span><br><span class="line">         <span class="attribute">rewrite</span><span class="regexp"> ^</span> /index.php <span class="literal">last</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#静态资源重定向3</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~* \.(?:png|html|ttf|ico|jpg|jpeg)$</span> &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> /index.php<span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ ^/(?:updater)(?:$|/)</span> &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">        <span class="attribute">index</span> index.php;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#caldav和#carddav</span></span><br><span class="line">    <span class="attribute">rewrite</span> /.well-known/carddav /remote.php/dav <span class="literal">permanent</span>;</span><br><span class="line">    <span class="attribute">rewrite</span> /.well-known/caldav /remote.php/dav <span class="literal">permanent</span>;</span><br></pre></td></tr></table></figure><h1 id="文件夹文件无法删除解决方法"><a href="#文件夹文件无法删除解决方法" class="headerlink" title="文件夹文件无法删除解决方法"></a>文件夹文件无法删除解决方法</h1><p>现象</p><p>删除目录或文件时提示：无法删除文件<strong>*或者”Error deleting file *</strong></p><p>解决方法</p><p>查看数据目录下nextcloud.log,可能有三种情况：</p><p><strong>情况A</strong>   </p><p>文件或目录被锁     关键词日志中检索  <font color="red">is locked</font></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;"reqId":"0DijSqEkfOg2iyh9VD8J","remoteAddr":"xx.xx.xx.xx","app":"webdav","message":"Exception: &#123;<span class="symbol">\"</span>Message<span class="symbol">\"</span>:<span class="symbol">\"</span>HTTP<span class="symbol">\\</span><span class="symbol">\/</span>1.1 423 <span class="symbol">\\</span><span class="symbol">\"</span>path<span class="symbol">\\</span><span class="symbol">\/</span>file.extension<span class="symbol">\\</span><span class="symbol">\"</span> is locked<span class="symbol">\"</span>,<span class="symbol">\"</span>Exception<span class="symbol">\"</span>:<span class="symbol">\"</span>OCA<span class="symbol">\\</span><span class="symbol">\\</span>DAV<span class="symbol">\\</span><span class="symbol">\\</span>Connector<span class="symbol">\\</span><span class="symbol">\\</span>Sabre<span class="symbol">\\</span><span class="symbol">\\</span>Exception<span class="symbol">\\</span><span class="symbol">\\</span>FileLocked<span class="symbol">\"</span>,<span class="symbol">\"</span>Code<span class="symbol">\"</span>:0,<span class="symbol">\"</span>Trace<span class="symbol">\"</span>:<span class="symbol">\"</span>#0</span><br></pre></td></tr></table></figure><p>此时是因为文件或目录被锁，可按以下操作暂时解决问题：</p><p>1)宝塔面板nextcloud根目录下修改config文件夹内的config.php文件</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">false</span>,        #<span class="string">'maintenance'</span> 赋值 <span class="keyword">true</span>    进入维护模式</span><br></pre></td></tr></table></figure><p>2)宝塔面板登陆nextcloud数据库，使用mysql命令行工具，执行语句</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> oc_file_locks <span class="keyword">WHERE</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>3)退出维护模式</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'maintenance'</span> =&gt; <span class="keyword">true</span>,        #<span class="string">'maintenance'</span> 赋值 <span class="keyword">false</span>     退出维护模式</span><br></pre></td></tr></table></figure><p>4)确保cron正常运行。</p><p><strong>情况B</strong>  <font color="red">Permission denied</font></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"reqId"</span>:<span class="string">"***"</span>,<span class="string">"level"</span>:<span class="number">3</span>,<span class="string">"time"</span>:<span class="string">"2018-04-28T16:19:53+00:00"</span>,<span class="string">"remoteAddr"</span>:<span class="string">"127.0.0.1"</span>,<span class="string">"user"</span>:<span class="string">"***"</span>,<span class="string">"app"</span>:<span class="string">"PHP"</span>,<span class="string">"method"</span>:<span class="string">"<span class="keyword">DELETE</span>"</span>,<span class="string">"url"</span>:<span class="string">"\/remote.php\/webdav\***"</span>,<span class="string">"message"</span>:<span class="string">"unlink(\/mnt\/***): Permission denied at ***/lib\/private\/Files\/Storage\/Local.php#112"</span>,<span class="string">"userAgent"</span>:<span class="string">"Mozilla\/5.0 ,"</span>manuscript from cmdgy.com, version<span class="string">":"</span><span class="number">13.0.1.1</span><span class="string">"&#125;</span></span><br></pre></td></tr></table></figure><p>此时待删除的①文件、②目录、③目录中有文件 对于php进程无写入权限。</p><p>使用chown -R修复数据目录的权限解决。</p><p><strong>情况C</strong>  <font color="red">The first argument to copy() function cannot be a directory at，rename(<strong><em>files_trashbin/files/</em></strong>): Invalid cross-device link at / </font></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"reqId"</span>:<span class="string">"***"</span>,<span class="attr">"level"</span>:<span class="number">3</span>,<span class="attr">"time"</span>:<span class="string">"2018-04-28T16:26:32+00:00"</span>,<span class="attr">"remoteAddr"</span>:<span class="string">"127.0.0.1"</span>,<span class="attr">"user"</span>:<span class="string">"***"</span>,<span class="attr">"app"</span>:<span class="string">"PHP"</span>,<span class="attr">"method"</span>:<span class="string">"DELETE"</span>,<span class="attr">"url"</span>:<span class="string">"\/remote.php\/webdav\***"</span>,<span class="attr">"message"</span>:<span class="string">"rename(): The first argument to copy() function cannot be a directory at ***/lib\/private\/Files\/Storage\/Local.php#270"</span>,<span class="attr">"userAgent"</span>:<span class="string">"Mozilla\/5.0 manuscript from cmdgy.com "</span>,<span class="attr">"version"</span>:<span class="string">"13.0.1.1"</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">"reqId"</span>:<span class="string">"***"</span>,<span class="attr">"level"</span>:<span class="number">3</span>,<span class="attr">"time"</span>:<span class="string">"2018-04-28T16:26:32+00:00"</span>,<span class="attr">"remoteAddr"</span>:<span class="string">"127.0.0.1"</span>,<span class="attr">"user"</span>:<span class="string">"***"</span>,<span class="attr">"app"</span>:<span class="string">"PHP"</span>,<span class="attr">"method"</span>:<span class="string">"DELETE"</span>,<span class="attr">"url"</span>:<span class="string">"\/remote.php\/webdav\***"</span>,<span class="attr">"message"</span>:<span class="string">"rename(***files_trashbin\/files\/***): Invalid cross-device link at \/***\/lib\/private\/Files\/Storage\/Local.php#270"</span>,<span class="attr">"userAgent"</span>:<span class="string">"Mozilla\/5.0 manuscript from cmdgy.com"</span>,<span class="attr">"version"</span>:<span class="string">"13.0.1.1"</span>&#125;</span><br></pre></td></tr></table></figure><p>此时需检查文件目录是否通过mount -bind方式挂载。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="宝塔面板" scheme="https://www.iamzmj.top/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="Nextcloud" scheme="https://www.iamzmj.top/tags/Nextcloud/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云弹性网卡实现多外网IP</title>
    <link href="https://www.iamzmj.top/posts/bacec032.html"/>
    <id>https://www.iamzmj.top/posts/bacec032.html</id>
    <published>2019-12-15T02:04:20.000Z</published>
    <updated>2020-01-09T06:25:45.844Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="多IP服务器选择"><a href="#多IP服务器选择" class="headerlink" title="多IP服务器选择"></a>多IP服务器选择</h1><p><img src="http://111.229.17.211:3389/imgs/2020/01/91c394660ca0ab76.jpg"> 如图上图所示， 性价比推荐以下两个配置<br>CPU：1核 内存：2GB  可以申请弹性公网IP数量为 弹性网卡数量网卡绑定IP数：2X6=12个IP<br>CPU：2核 内存：2GB  可以申请弹性公网IP数量为 弹性网卡数量网卡绑定IP数：2X10=20个IP</p><p>以此类推</p><h1 id="购买腾讯云服务器"><a href="#购买腾讯云服务器" class="headerlink" title="购买腾讯云服务器"></a>购买腾讯云服务器</h1><p>已购买 CPU：1核 内存：2GB的服务器，并创建了实例。 </p><img src="http://111.229.17.211:3389/imgs/2020/01/43b355f5d579080a.jpg">  <h1 id="创建弹性网卡"><a href="#创建弹性网卡" class="headerlink" title="创建弹性网卡"></a>创建弹性网卡</h1><p>选择云产品—私有网络—IP与网卡—弹性网卡—点击默认网卡名字</p><p>先配置第一张主网卡</p><img src="http://111.229.17.211:3389/imgs/2020/01/d1176b1dc78b29ea.jpg"><img src="http://111.229.17.211:3389/imgs/2020/01/a3039a613deffd8e.jpg"><p>  选择 IPV4管理- 先把普通公网IP转换成弹性公网IP，然后点击 修改主IP：</p><img src="http://111.229.17.211:3389/imgs/2020/01/33352ab52dac3d9d.jpg"><p>将内网当前IP D段修改为2，以方便后续记忆。</p><img src="http://111.229.17.211:3389/imgs/2020/01/306f359aa3e531e3.jpg"><p>点击 分配内网IP ，手动添加5个（只能添加5个）辅助内网IP :</p><img src="http://111.229.17.211:3389/imgs/2020/01/63bca68ef1add94a.jpg"><p>再配置第二张辅助网卡 </p><p>主IP可以自动分配也可以手动添加，但一定要和主网卡内网IP再同一个网段内。</p><img src=" http://111.229.17.211:3389/imgs/2020/01/a93a12200c32baa0.jpg "><p>选择内网主IP：172.17.15.2 点击绑定给辅助IP绑定弹性公网IP地址，选择新建EIP绑定，会自动申请弹性公网IP并绑定。弹性公网IP申请后立即绑定，<font color="red">弹性公网IP不闲置不收费</font>。(也可以选择使用现有EIP绑定，前提是你之前已经在弹性公网IP申请了空闲的IP地址)</p><img src=" http://111.229.17.211:3389/imgs/2020/01/43bb93fdb2f9cac2.jpg "><img src=" http://111.229.17.211:3389/imgs/2020/01/efa533412295954a.jpg "><p>返回弹性网卡，可以看到辅助网卡已新建。</p><img src=" http://111.229.17.211:3389/imgs/2020/01/eacd16421d2c41e8.jpg "><p>左后绑定云服务器。 </p><img src=" http://111.229.17.211:3389/imgs/2020/01/6fb6c04ce5eb446c.jpg "><p>辅助网卡绑定服务器成功。</p><h1 id="服务器绑定弹性公网IP-实现多IP"><a href="#服务器绑定弹性公网IP-实现多IP" class="headerlink" title="服务器绑定弹性公网IP 实现多IP"></a>服务器绑定弹性公网IP 实现多IP</h1><h2 id="创建辅助网卡的配置文件"><a href="#创建辅助网卡的配置文件" class="headerlink" title="创建辅助网卡的配置文件"></a>创建辅助网卡的配置文件</h2><p><strong>远程登陆云服务器</strong></p><p>执行以下命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/</span></span><br></pre></td></tr></table></figure><p><strong>创建新网卡的配置文件 ifcfg-eth1 ：</strong></p><p> 1.输入命令：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> ifcfg-eth0 ifcfg-eth1</span><br></pre></td></tr></table></figure><p>2.输入命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vim</span> ifcfg-eth1</span><br></pre></td></tr></table></figure><p>3.按 “i” 切换至编辑模式，把配置文件内容修改为：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">DEVICE</span>=<span class="string">'eth1'</span></span><br><span class="line"><span class="attribute">NM_CONTROLLED</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">IPADDR</span>=<span class="string">'192.168.1.62'</span>  # 根据实际填写，此处写弹性网卡上的<span class="built_in"> IP </span>地址</span><br><span class="line"><span class="attribute">NETMASK</span>=<span class="string">'255.255.255.192'</span>  #根据实际填写，此处写子网掩码</span><br><span class="line"><span class="comment">#GATEWAY='192.168.1.1'  #根据实际需要填写。因为eth0文件定义了网关，这里不再写网关，避免网关冲突</span></span><br></pre></td></tr></table></figure><p>我这边使用宝塔面环境进行配置</p><ul><li>打开宝塔文件根目录/etc/sysconfig/network-scripts  </li><li>创建一个ifcfg-eth1的网卡配置文件（不要直接在ifcfg-eth0里边修改）</li></ul><p>配置文件中放入如下代码:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">DEVICE</span>=<span class="string">'eth1'</span></span><br><span class="line"><span class="attribute">NM_CONTROLLED</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attribute">IPADDR</span>=<span class="string">'192.168.1.62'</span>  # 根据实际填写，此处写弹性网卡上的<span class="built_in"> IP </span>地址</span><br><span class="line"><span class="attribute">NETMASK</span>=<span class="string">'255.255.255.192'</span>  #根据实际填写，此处写子网掩码</span><br><span class="line"><span class="comment">#GATEWAY='192.168.1.1'  #根据实际需要填写。因为eth0文件定义了网关，这里不再写网关，避免网关冲突</span></span><br></pre></td></tr></table></figure><img src=" http://111.229.17.211:3389/imgs/2020/01/69569b8dac413faf.jpg " width="600"><p>保存并推出。</p><h2 id="关闭-rp-filter-校验"><a href="#关闭-rp-filter-校验" class="headerlink" title="关闭 rp_filter 校验"></a>关闭 rp_filter 校验</h2><p>rp_filter参数用于控制系统是否开启对数据包源地址的校验,配置完成后需要需要关闭反向过滤，如果不关闭，在本机ping弹性公网IP会不成功</p><p>注意：反向过滤指系统在接收到一个 IP 包后检查该 IP 是否符合要求，不合要求则被丢弃。<br> 例如，用户在 A 网卡上收到一个 IP 包，发送 IP 为 B。而给 B 的 IP 发送时应该用的网卡不是 A，则会丢弃。由于默认路由走的是主网卡，所以开启反向过滤后，辅助网卡上的 IP 会 ping 不通。</p><p>在   /etc/sysctl.conf 里，打开找到</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.default</span><span class="selector-class">.rp_filter</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>删掉并替换成</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.default</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.all</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.eth0</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.conf</span><span class="selector-class">.eth1</span><span class="selector-class">.rp_filter</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="SSH命令重启网卡"><a href="#SSH命令重启网卡" class="headerlink" title="SSH命令重启网卡"></a>SSH命令重启网卡</h2><p>生效命令:<code># sysctl -p</code></p><img src=" http://111.229.17.211:3389/imgs/2020/01/eb88d7ab739a8da8.jpg "><p>重启网卡:<code># systemctl restart network.service</code>并查看路由</p><img src=" http://111.229.17.211:3389/imgs/2020/01/728103b2c986f87a.jpg "><p>查看配置后的效果:<code># ip a</code></p><img src=" http://111.229.17.211:3389/imgs/2020/01/307f7ef56a99c3eb.jpg "><p>查看弹性公网已经可以ping通。</p><img src=" http://111.229.17.211:3389/imgs/2020/01/9d368151a70cb6b1.jpg "><p>参考博客：</p><p>腾讯官方文档 <a href="https://cloud.tencent.com/document/product/576/18535" rel="external nofollow noopener noreferrer" target="_blank">https://cloud.tencent.com/document/product/576/18535</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="弹性网卡" scheme="https://www.iamzmj.top/tags/%E5%BC%B9%E6%80%A7%E7%BD%91%E5%8D%A1/"/>
    
      <category term="多公网IP" scheme="https://www.iamzmj.top/tags/%E5%A4%9A%E5%85%AC%E7%BD%91IP/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署ImgURL个人图床</title>
    <link href="https://www.iamzmj.top/posts/a9a46c5c.html"/>
    <id>https://www.iamzmj.top/posts/a9a46c5c.html</id>
    <published>2019-12-13T09:26:05.000Z</published>
    <updated>2019-12-30T02:50:11.307Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>利用腾讯云的官方<a href="https://cloud.tencent.com/document/product/436/6883" rel="external nofollow noopener noreferrer" target="_blank">COSFS工具</a>，把新建的COS存储桶挂载到腾讯云服务器上（操作系统为Centos7）。</p><p>再安装ImgURL搭建个人图床。</p><p>搭建环境：Centos7 系统，宝塔面板已安装。</p><h1 id="建立存储"><a href="#建立存储" class="headerlink" title="建立存储"></a>建立存储</h1><p>登陆腾讯云控制台—选择对象存储—新建存储桶（我这边已创建完成）</p><img src="https://i.loli.net/2019/12/13/8aQSV9K7rU4LguN.jpg"><p>创建完成后整理如下信息：</p><p>存储桶名称（bucket_name）：x04680126 替换成你自己的</p><p>存储桶APPID（bucket_appid）：1300755540 替换成你自己的</p><p>存储桶访问域名（bucket_region）：<a href="https://x04680126-1300755540.cos.ap-shanghai.myqcloud.com" rel="external nofollow noopener noreferrer" target="_blank">https://x04680126-1300755540.cos.ap-shanghai.myqcloud.com</a></p><h1 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h1><p>接下来在<a href="https://console.cloud.tencent.com/cos5/key" rel="external nofollow noopener noreferrer" target="_blank">密钥管理</a>中切换到API密钥管理，生成密钥。如果是生产环境，建议使用子账户使用密钥。密钥分为SecretId和SecretKey。其中SecretKey需要验证手机号才能显示。</p><p>API秘钥id（SecretId）：AKIDXXXXXXXXXXXXXXXXXXXXXXBM951 替换成你自己的</p><p>API秘钥key（SecretKey）：jBMXXXXXXXXXXXXXXXXXXXXXXweB 替换成你自己的</p><h1 id="服务器上配置"><a href="#服务器上配置" class="headerlink" title="服务器上配置"></a>服务器上配置</h1><p><strong>Xshell6 远程登陆腾讯云服务器</strong></p><h2 id="1-安装环境依赖包"><a href="#1-安装环境依赖包" class="headerlink" title="1.安装环境依赖包"></a><strong>1.安装环境依赖包</strong></h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">sudo</span> <span class="comment">yum</span> <span class="comment">install</span> <span class="comment">automake</span> <span class="comment">gcc</span><span class="literal">-</span><span class="comment">c</span><span class="literal">+</span><span class="literal">+</span> <span class="comment">git</span> <span class="comment">libcurl</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">libxml2</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">fuse</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">make</span> <span class="comment">openssl</span><span class="literal">-</span><span class="comment">devel</span></span><br></pre></td></tr></table></figure><h2 id="2-安装工具"><a href="#2-安装工具" class="headerlink" title="2.安装工具"></a><strong>2.安装工具</strong></h2><p>使用 GitHub 将源码下载到 /usr/cosfs 为例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/tencentyun/</span>cosfs-v4.<span class="number">2.1</span> <span class="regexp">/usr/</span>cosfs</span><br></pre></td></tr></table></figure><h2 id="3-进入到该目录，编译安装"><a href="#3-进入到该目录，编译安装" class="headerlink" title="3.进入到该目录，编译安装"></a><strong>3.进入到该目录，编译安装</strong></h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/usr/cosfs</span></span><br><span class="line"><span class="string">./autogen.sh</span></span><br><span class="line"><span class="string">./configure</span></span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>注：在这里有一个大坑，使用腾讯云VPS编译安装的时候会报错，但安装完成之后可以正常使用！！！！！！！</p><h2 id="4-配置文件"><a href="#4-配置文件" class="headerlink" title="4.配置文件"></a><strong>4.配置文件</strong></h2><p>替换自己的真实bucket_appid，secretId和secredKey</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo kenny-hexo-<span class="number">1256238228</span><span class="symbol">:AKIDXXXXXXXXXXXXXXXXXXXXXXBM951</span><span class="symbol">:jBMXXXXXXXXXXXXXXXXXXXXXXweB</span> &gt; <span class="regexp">/etc/passwd</span>-cosfs</span><br><span class="line">chmod <span class="number">640</span> /etc/passwd-cosfs</span><br></pre></td></tr></table></figure><h2 id="5-云服务器挂载存储桶"><a href="#5-云服务器挂载存储桶" class="headerlink" title="5.云服务器挂载存储桶"></a><strong>5.云服务器挂载存储桶</strong></h2><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cosfs <span class="number">1300755540</span>:x<span class="number">04680126</span> /usr/x<span class="number">04680126</span>-<span class="number">1300755540</span> -ourl=https://cos.ap-shanghai.myqcloud.com -odbglevel=info</span><br></pre></td></tr></table></figure><p>1300755540:x04680126 是自己的 bucket_appid 和 bucket_name， 需要替换为用户自己的；</p><p>/usr/x04680126-1300755540  是要挂载到服务器上（本地）的目录，需要使用宝塔提前创建；</p><p><a href="https://cos.ap-shanghai.myqcloud.com" rel="external nofollow noopener noreferrer" target="_blank">https://cos.ap-shanghai.myqcloud.com</a> 是你的 bucket_region部分</p><p>-odbglevel 参数表示信息级别，照写即可。</p><p><strong>云服务器卸载存储桶</strong></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fusermount -u /usr/x<span class="number">04680126</span>-<span class="number">1300755540</span></span><br><span class="line">或者</span><br><span class="line">umount -l /usr/x<span class="number">04680126</span>-<span class="number">1300755540</span></span><br></pre></td></tr></table></figure><p>查看是否挂载成功</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">df -h</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/13/we4smb3XBHKrVaI.jpg"><p>出现红框里内容表示挂载成功。</p><h1 id="设置图片在线浏览"><a href="#设置图片在线浏览" class="headerlink" title="设置图片在线浏览"></a>设置图片在线浏览</h1><p>点击创建的存储桶—基础配置—拉到最下—开启静态网站和强制HTTPS</p><img src="https://i.loli.net/2019/12/13/BHR5MosPil9kpre.jpg"><h1 id="安装ImgURL"><a href="#安装ImgURL" class="headerlink" title="安装ImgURL"></a>安装ImgURL</h1><p>宝塔面板<strong>新建站点</strong>—<strong>新建站点根目录</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">新建站点：<span class="string">http:</span><span class="comment">//111.229.17.211:3389/</span></span><br><span class="line"></span><br><span class="line">新建站点根目录：<span class="regexp">/usr/</span>ImgURL              自己设定</span><br></pre></td></tr></table></figure><p>软件商店 php安装 <code>fileinfo</code>和<code>imagemagick</code>扩展</p><img src="https://i.loli.net/2019/12/17/ftG2ALsdEUDuN8V.jpg" style="zoom:200%;"><p>Nginx设置伪静态</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* \.(db3|json)$</span> &#123;</span><br><span class="line">  <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^/(temp|upload|imgs|data|application|static|system)/.*.(php|php5)$</span> &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下载地址:<a href="https://github.com/helloxz/imgurl" rel="external nofollow noopener noreferrer" target="_blank">ImgURL</a>，并解压。</p><p>宝塔面板进入站点根目录/usr/ImgURL-test，全选解压后的子文件并上传。</p><img src="https://i.loli.net/2019/12/17/Bok5fWud7NcXpUJ.jpg"><p>浏览器输入 站点域名 <a href="http://111.229.17.211:3389/" rel="external nofollow noopener noreferrer" target="_blank">http://111.229.17.211:3389/</a>  并确保检测结果通过—按下一步安装完成。</p><img src="https://i.loli.net/2019/12/17/hF3t1VGmwUTJERY.jpg"><h1 id="取消广告"><a href="#取消广告" class="headerlink" title="取消广告"></a>取消广告</h1><p>新版本安装完成后默认会添加俩个条广告，取消掉都非常简单只需编辑网站根目录下的 footer.php 文件，文件路径 \ application \ views \ user \ footer.php </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">'https://libs.xiaoz.top/assets/imgurl.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">如果只是想删除广告，那就删掉以上代码就OK了</span><br><span class="line"></span><br><span class="line">如果要改为自己的广告就替换为本地调用：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">'/static/imgurl.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">然后再修改js为自己的广告</span><br><span class="line">/static/imgurl.js</span><br></pre></td></tr></table></figure><p>使用协议广告路径</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#使用协议打赏二维码路径</span></span><br><span class="line"><span class="meta-keyword">/data/</span>pages/use.md</span><br><span class="line"><span class="meta">#使用协议广告图片路径</span></span><br><span class="line"><span class="meta-keyword">/application/</span>views<span class="meta-keyword">/user/</span>page.php</span><br></pre></td></tr></table></figure><p>由于本次安装为社区版本，无法绑定腾讯COS等外部存储。</p><img src="https://i.loli.net/2019/12/17/XM3dVFaIqnH2J4P.jpg"><p>参考博客：</p><p><a href="https://www.234du.com/1167.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.234du.com/1167.html</a></p><p><a href="https://blog.nicky1605.com/linux-mount-cos.html" rel="external nofollow noopener noreferrer" target="_blank">https://blog.nicky1605.com/linux-mount-cos.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="图床" scheme="https://www.iamzmj.top/categories/%E5%9B%BE%E5%BA%8A/"/>
    
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="宝塔面板" scheme="https://www.iamzmj.top/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="ImgURL" scheme="https://www.iamzmj.top/tags/ImgURL/"/>
    
  </entry>
  
  <entry>
    <title>读书计划2020</title>
    <link href="https://www.iamzmj.top/posts/42058630.html"/>
    <id>https://www.iamzmj.top/posts/42058630.html</id>
    <published>2019-12-04T09:47:00.000Z</published>
    <updated>2020-01-18T12:20:14.729Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>建立终生信仰的三观（价值观、人生观、世界观）</p><p>构建完整稳定的知识体系，达到对人生世事基本无惑的智慧</p><p>完成身体、心灵、与社会三者之间健康、和谐的平衡发展</p><p>形成一套完整有效的思考、推演、决策、行动的解决问题模型</p><p>基本跟上前沿信息与知识点，不被时代淘汰</p><h2 id="技能类"><a href="#技能类" class="headerlink" title="技能类"></a>技能类</h2><p>❤️❤️<a href="https://pan.baidu.com/s/12kVGtn64LkxxUrP6ZtCLJQ" rel="external nofollow noopener noreferrer" target="_blank">利用Python进行数据分析(第二版)</a></p><p>❤️❤️<a href="https://www.lanzous.com/i8mdbih" rel="external nofollow noopener noreferrer" target="_blank">ggplot2:数据分析与图形艺术</a></p><h2 id="思维类"><a href="#思维类" class="headerlink" title="思维类"></a>思维类</h2><p>高效能人士的七个习惯</p><p>❤️博弈论 </p><p>❤️微表情密码</p><p>🤍🤍墨菲定律</p><p>批判性思维</p><p>拆掉思维的墙</p><p><a href="https://www.lanzous.com/i59rhib" rel="external nofollow noopener noreferrer" target="_blank">学会提问 - (美)尼尔.布朗</a></p><p>逻辑学导论</p><p>放弃的艺术</p><p>别做正常的傻瓜</p><p>卓有成效的管理者</p><p>第五项修炼</p><p>六顶思考帽</p><h2 id="自我完善"><a href="#自我完善" class="headerlink" title="自我完善"></a>自我完善</h2><p>焦虑症的心理研究与矫治</p><p>走出抑郁</p><p>❤️🤍自卑与超越</p><p>心理咨询师笔记</p><p>爱的艺术</p><p>被讨厌的勇气</p><p>异类的天赋</p><h2 id="信息前沿"><a href="#信息前沿" class="headerlink" title="信息前沿"></a>信息前沿</h2><p>图说区块链</p><p>区块链革命</p><p>区块链社会</p><h2 id="心理学"><a href="#心理学" class="headerlink" title="心理学"></a>心理学</h2><p>瞬间读懂身体语言</p><p>变态心理学</p><p>认知心理学</p><p>发展心理学</p><p>人格心理学</p><h2 id="经济哲学"><a href="#经济哲学" class="headerlink" title="经济哲学"></a>经济哲学</h2><p>读懂中国制造2025</p><h2 id="其它类"><a href="#其它类" class="headerlink" title="其它类"></a>其它类</h2><p><a href="https://www.lanzous.com/i59rheh" rel="external nofollow noopener noreferrer" target="_blank">巨婴国 - 武志红</a></p><p>万万没想到 - 万维钢</p><p><a href="https://www.lanzous.com/i59rhfi" rel="external nofollow noopener noreferrer" target="_blank">洗澡 - 杨绛</a></p><p><a href="https://www.lanzous.com/i59rhha" rel="external nofollow noopener noreferrer" target="_blank">显微镜下的大明 - 马伯庸</a></p><p>🤍🤍逆向盈利</p><p>❤️❤️镇魂街</p><p>❤️ 海盗战记 </p><img src="https://i.loli.net/2019/12/13/e2H3IVTu1wXv9bc.jpg" width="700">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="书单" scheme="https://www.iamzmj.top/categories/booklist/"/>
    
    
      <category term="书单" scheme="https://www.iamzmj.top/tags/booklist/"/>
    
      <category term="计划" scheme="https://www.iamzmj.top/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署Hexo</title>
    <link href="https://www.iamzmj.top/posts/e1764d0e.html"/>
    <id>https://www.iamzmj.top/posts/e1764d0e.html</id>
    <published>2019-12-03T02:31:30.000Z</published>
    <updated>2020-01-08T06:28:21.932Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>原先将Hexo部署到 <code>github</code> 和 <code>coding</code> 上的，访问速度较慢，于是购买了低配腾讯云服务器对原先博客进行重新部署。只要通过三步即可成功部署：</p><p>1.云服务器端 git 的配置<br>2.配置Nginx<br>3.本地端 hexo 的设置更改</p><h1 id="云服务器重装系统并远程登陆"><a href="#云服务器重装系统并远程登陆" class="headerlink" title="云服务器重装系统并远程登陆"></a>云服务器重装系统并远程登陆</h1><img src="https://i.loli.net/2019/12/03/jGMQNRkDl28gTsS.jpg" width="800"><p>确保是干净的操作系统，没有安装过其它环境带的Apache/Nginx/php/MySQL（已有环境不可安装）。</p><h1 id="安装宝塔Linux面板"><a href="#安装宝塔Linux面板" class="headerlink" title="安装宝塔Linux面板"></a><strong>安装宝塔Linux面板</strong></h1><p>7.0.2安装命令如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -<span class="keyword">y</span> wget &amp;&amp; wget -O install.<span class="keyword">sh</span> http://download.bt.<span class="keyword">cn</span>/install/install_6.<span class="number">0</span>.<span class="keyword">sh</span> &amp;&amp; <span class="keyword">sh</span> install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p><strong>宝塔面板登陆：</strong></p><p>根据安装完成的提示（登陆地址，账号，密码），登陆宝塔管理面板我的如下：</p><p>Bt-Panel: <a href="http://111.229.17.211:8888/0e1fb823。" rel="external nofollow noopener noreferrer" target="_blank">http://111.229.17.211:8888/0e1fb823。</a></p><h1 id="安装配置建站环境"><a href="#安装配置建站环境" class="headerlink" title="安装配置建站环境"></a><strong>安装配置建站环境</strong></h1><h2 id="宝塔面板安装Nginx"><a href="#宝塔面板安装Nginx" class="headerlink" title="宝塔面板安装Nginx"></a>宝塔面板安装Nginx</h2><p>软件商店选择建站安装环境，本次选择推荐选项安装</p><ul><li>Nginx (主要用到这个)</li><li>Mysql</li><li>php</li><li>Pure-Ftpd </li><li>phpMyAdmin </li></ul><h2 id="云服务器端配置git"><a href="#云服务器端配置git" class="headerlink" title="云服务器端配置git"></a>云服务器端配置git</h2><p>下载 git （下载到 /usr/local/src 目录下）</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local/src </span><br><span class="line">wget <span class="string">http:</span><span class="comment">//ftp.ntu.edu.tw/software/scm/git/git-2.9.5.tar.gz</span></span><br></pre></td></tr></table></figure><p>解压到当前目录</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zvxf</span> <span class="selector-tag">git-2</span><span class="selector-class">.9</span><span class="selector-class">.5</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p>编译</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> git-<span class="number">2.9</span>.<span class="number">5</span></span><br><span class="line"><span class="keyword">make</span> <span class="keyword">all</span> prefix=/usr/local/git</span><br></pre></td></tr></table></figure><p>安装 git 到 /usr/local/git 目录下</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> install prefix=/usr/<span class="keyword">local</span>/git</span><br></pre></td></tr></table></figure><p>配置 git 环境变量</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 'export <span class="built_in">PATH</span>=$<span class="built_in">PATH</span>:/usr/local/git/bin' &gt;&gt; /etc/bashrc</span><br></pre></td></tr></table></figure><p>使 git 环境变量生效</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/etc/</span>bashrc</span><br></pre></td></tr></table></figure><p>验证安装完成</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="comment">--version</span></span><br></pre></td></tr></table></figure><p>宝塔面板文件管理查看git已安装</p><img src="https://i.loli.net/2019/12/03/S35nJO98vygsjYQ.jpg"><h2 id="云服务器创建git-仓库"><a href="#云服务器创建git-仓库" class="headerlink" title="云服务器创建git 仓库"></a>云服务器创建git 仓库</h2><p><strong>1.创建hexo的仓库</strong></p><p>git仓库用于存放博客网站资源。在 home/git的目录下，创建一个名为hexo的仓库。<br>如果没有 home/git目录，需要先创建，然后修改目录的所有权和用户权限。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="string">/home/git/</span></span><br><span class="line">chown -R $USER:$USER <span class="string">/home/git/</span></span><br><span class="line">chmod -R 755 <span class="string">/home/git/</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/home/git/</span></span><br><span class="line">git init <span class="params">--bare</span> hexo.git</span><br></pre></td></tr></table></figure><p><strong>2.创建git hooks</strong></p><p>在 /home/git/hexo.git下，有一个自动生成的 hooks文件夹，我们创建一个新的 git钩子 post-receive，用于自动部署。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/home/gi</span>t<span class="regexp">/hexo.git/</span>hooks<span class="regexp">/post-receive</span></span><br></pre></td></tr></table></figure><p>将以下代码写到post-receive</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash </span></span><br><span class="line">git --work-tree=/home/hexo --git-dir=/home/git/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>宝塔面板文件夹系统内查看如下：</p><img src="https://i.loli.net/2019/12/03/3oDKVlpOJvQ7mxX.jpg"><img src="https://i.loli.net/2019/12/03/v7CcxBmTyhQRObY.jpg"><p>修改文件权限，使得其可执行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="regexp">/home/gi</span>t<span class="regexp">/hexo.git/</span>hooks<span class="regexp">/post-receive</span></span><br></pre></td></tr></table></figure><p><strong>3.创建博客保存目录hexo</strong></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> /home/hexo/ </span><br><span class="line"><span class="keyword">chown</span> -R $USER:$USER /home/hexo/</span><br><span class="line"><span class="keyword">chmod</span> -R <span class="number">755</span> /home/hexo/</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/03/qIfYruAERMw4zLj.jpg"><h2 id="宝塔面板配置-Nginx"><a href="#宝塔面板配置-Nginx" class="headerlink" title="宝塔面板配置 Nginx"></a>宝塔面板配置 Nginx</h2><p>添加网络，选择之前服务器上创建的根目录</p><img src="https://i.loli.net/2019/12/13/6ynSjxNTq5dbB7r.jpg" width="800"><p>填写1年期免费SSL 证书,可以在<a href="https://buy.cloud.tencent.com/ssl?fromSource=ssl" rel="external nofollow noopener noreferrer" target="_blank">腾讯SSL 证书-域名型免费版</a>申请并下载（Nginx的，因为我安装的是这个服务）</p><img src="https://i.loli.net/2019/12/13/Gs5A1FM2wbB7CSi.jpg"><h2 id="hexo站点配置文件修改"><a href="#hexo站点配置文件修改" class="headerlink" title="hexo站点配置文件修改"></a>hexo站点配置文件修改</h2><p>1.打开hexo站点配置文件_config.yml，修改如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line">  - type: git</span><br><span class="line"><span class="symbol">    repo:</span> </span><br><span class="line"><span class="symbol">        tencent:</span> root@<span class="number">111.229</span><span class="number">.17</span><span class="number">.211</span>:<span class="meta-keyword">/home/</span>git/hexo   </span><br><span class="line"><span class="symbol">    branch:</span> master</span><br><span class="line"><span class="symbol">    message:</span> blog update</span><br><span class="line">  - type: baidu_url_submitter</span><br></pre></td></tr></table></figure><h1 id="服务器上部署"><a href="#服务器上部署" class="headerlink" title="服务器上部署"></a>服务器上部署</h1><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>hexo deploy     期间需要输入云服务器登陆密码。静态文件已部署到服务器中。</p><img src="https://i.loli.net/2019/12/13/Du98SX7TBIxCmYE.jpg"><p>若 hexo deploy  出现以下内容：</p><img src="https://i.loli.net/2019/12/17/nNJbSIGVlFCuH3g.jpg"><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~<span class="regexp">/.ssh/</span>known_hosts</span><br></pre></td></tr></table></figure><p>重新ssh连接就可以了！</p><p>参考博客：<a href="https://blog.csdn.net/jiejiemcu/article/details/102081674" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/jiejiemcu/article/details/102081674</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="腾讯云" scheme="https://www.iamzmj.top/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="Hexo" scheme="https://www.iamzmj.top/tags/Hexo/"/>
    
      <category term="云服务器" scheme="https://www.iamzmj.top/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署Docker</title>
    <link href="https://www.iamzmj.top/posts/d3aaaed9.html"/>
    <id>https://www.iamzmj.top/posts/d3aaaed9.html</id>
    <published>2019-11-23T12:55:35.000Z</published>
    <updated>2019-12-30T02:59:52.692Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Docker是一个开源的应用容器引擎；是一个轻量级容器技术，Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像，Docker运行中的这个镜像称为容器，容器启动是非常快速的。</p><p><img src="https://i.loli.net/2019/12/30/XMCy5TqdpeFWrhO.jpg" alt></p><h1 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h1><p><strong>简单的说：</strong></p><p>Docker是一个开源的应用容器引擎；是一个轻量级容器技术；</p><p>Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像；</p><p>Docker运行中的这个镜像称为容器，容器启动是非常快速的；</p><p><a href="https://www.runoob.com/docker/docker-tutorial.html" rel="external nofollow noopener noreferrer" target="_blank">Docker 教程</a></p><p><strong>Docker的几个核心概念：</strong></p><p>docker主机(Host)：安装了Docker程序的机器（Docker直接安装在操作系统之上）；—我这边是腾讯云服务器</p><p>docker客户端(Client)：连接docker主机进行操作；—我这边是笔记本电脑</p><p>docker仓库(Registry)：用来保存各种打包好的软件镜像；</p><p>docker镜像(Images)：软件打包好的镜像；放在docker仓库中；</p><p>docker容器(Container)：镜像启动后的实例称为一个容器；容器是独立运行的一个或一组应用</p><p><strong>需要区分的两个概念：容器和虚拟机</strong></p><ul><li>容器</li></ul><p>容器技术是和我们的宿主机共享硬件资源及操作系统，可以实现资源的动态分配。容器包含应用和其所有的依赖包，但是与其他容器共享内核。容器在宿主机操作系统中，在用户空间以分离的状态进程运行。</p><ul><li>虚拟机</li></ul><p>传统虚拟机如 VMware ， VisualBox 之类的需要模拟整台机器包括硬件，每台虚拟机都需要有自己的操作系统，虚拟机一旦被开启，预分配给它的资源将全部被占用。每一台虚拟机包括应用，必要的二进制和库，以及一个完整的用户操作系统。</p><p><font color="blue">两者比较图</font>：</p><img src="https://i.loli.net/2019/11/23/cHUsT9IDkorYfXL.jpg" width="600"><p><strong>Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。</strong> </p><p>它不是模拟一个完整的操作系统，而是对进程进行隔离，相当于是在正常进程的外面套了一个保护层。对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。</p><p>Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。</p><p>总体来说 Docker 的接口相当简单，用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。</p><p><font color="blue"> 容器相比于传统虚拟机的特性的优势所在</font>： </p><img src="https://i.loli.net/2019/11/23/EmxFMrkWlzfBPDp.jpg" width="600"><p><strong>Docker中包括三个基本的概念：</strong></p><p>镜像是 Docker 运行容器的前提，仓库是存放镜像的场所，可见镜像更是 Docker的核心。</p><ul><li><p><strong>Image(镜像)</strong></p><p>docker像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。</p><p>镜像（Image）就是一堆只读层（read-only layer）的统一视角，也许这个定义有些难以理解，下面的这张图能够帮助读者理解镜像的定义。</p><img src="https://i.loli.net/2019/11/23/6A5CEeGXSTK91kI.png" width="600"></li></ul><ul><li><strong>Container(容器)</strong></li></ul><p>​         容器 (container) 的定义和镜像 (image)几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的最</p><p>​         上面那一层是可读可写的。  由于容器的定义并没有提及是否要运行容器，所以实际上，容器 = 镜像 + 读写  </p><p>​          层。 </p><p>​          <img src="   https://i.loli.net/2019/11/23/eU9KCJ6HoIDau3S.png" width="600"></p><p>​       </p><ul><li><strong>Repository(仓库)</strong></li></ul><p>​       Docker仓库是集中存放镜像文件的场所。镜像构建完成后，可以很容易的在当前宿主上运行，但是， 如果需</p><p>​       要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry (仓库注册</p><p>​       服务器)就是这样的服务。有时候会把仓库 (Repository) 和仓库注册服务器 (Registry) 混为一谈，并不严格区</p><p>​       分。Docker仓库的概念跟 Git 类似，注册服务器可以理解为 GitHub`这样的托管服务。实际上，一个 </p><p>​       Docker Registry中可以包含多个仓库 (Repository) 每个仓库可以包含多个标签 (Tag)，每个标签对应着一个镜</p><p>​       像。所以说，镜像仓库是 Docker 用来集中存放镜像文件的地方类似于我们之前常用的代码仓库。</p><p>通常，<strong>一个仓库会包含同一个软件不同版本的镜像</strong>，而<strong>标签就常用于对应该软件的各个版本</strong> 。</p><p>我们可以通过<code>&lt;仓库名&gt;:&lt;标签&gt;</code>的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 <code>latest</code> 作为默认标签.。</p><h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><p>在腾讯云服务器Centos系统上安装Docker社区版</p><p>1.卸载掉旧版本的 Docker</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="builtin-name">remove</span> docker \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-client \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-client-latest \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-common \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-latest \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-latest-logrotate \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-logrotate \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-selinux \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-engine-selinux \</span><br><span class="line">sudo yum <span class="builtin-name">remove</span> docker-engine</span><br></pre></td></tr></table></figure><p>2.安装依赖包 </p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">yum</span> install -y yum-utils device-mapper-persistent-<span class="class"><span class="keyword">data</span> lvm2</span></span><br></pre></td></tr></table></figure><p>3.通过阿里云下载docker-ce社区版</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --<span class="built_in">add</span>-repo http://mirrors.aliyun.<span class="keyword">com</span>/docker-<span class="keyword">ce</span>/linux/centos/docker-<span class="keyword">ce</span>.repo</span><br></pre></td></tr></table></figure><p>4.安装Docker </p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> docker-ce</span><br></pre></td></tr></table></figure><p>5.启动Docker并测试</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line"> </span><br><span class="line">docker <span class="keyword">run</span><span class="bash"> hello-world</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/23/TVQohSEA3IRJewa.jpg" width="700"><p>6.使用docker -version命令来查看docker是否安装成功 </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -<span class="built_in">version</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/23/gz5GME2qPxtOY4V.jpg" width="700"><p>7.Docker的简单运用—Hello World </p><p> 将名为 hello-world的 image文件从仓库抓取到本地。 </p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="keyword">library</span>/hello-world</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/23/WI6stEO7Nxm3Q5e.jpg" width="700"><p>8.运行 hello-world 这个 image 文件 </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> hello-world</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/23/gfLrbtFsdjS1kOn.jpg" width="700"><p>输出这段提示以后，<code>hello world</code> 就会停止运行，容器自动终止。  有些容器不会自动终止，因为提供的是服务，比如Mysql镜像等。 </p><p>Docker提供了一套简单实用的命令来创建和更新镜像，我们可以通过网络直接下载一个已经创建好了的应用镜像，并通过 Docker RUN 命令就可以直接使用。当镜像通过 RUN 命令运行成功后，这个运行的镜像就是一个 Docker 容器啦，容器可以理解为一个轻量级的沙箱， Docker 利用容器来运行和隔离应用，容器是可以被启动、停止、删除的，这并不会影响 Docker 镜像。 </p><h1 id="Docker架构"><a href="#Docker架构" class="headerlink" title="Docker架构"></a>Docker架构</h1><img src="https://i.loli.net/2019/11/23/InzeOokFKB4Hsvr.png" width="700"><p>Docker采用的是C/S架构，既 Client/Server架构 。</p><p>客户端向服务器发送请求，服务器负责构建、运行和分发容器。客户端和服务器可以运行在同一个 <code>Host</code> 上，客户端也可以通过 socket 或 REST API 与远程的服务器通信。 </p><p><strong>其核心组件包括：</strong></p><ul><li><p><strong>Docker Client</strong>  Docker 提供命令行界面 (CLI) 工具</p></li><li><p><strong>Docker daemon</strong>  服务器组件，以 Linux 后台服务的方式运行，是 Docker 最核心的后台进程，我们也把它称为守护进程。它负责响应来自  Docker Client 的请求，然后将这些请求翻译成系统调用完成容器管理操作。该进程会在后台启动一个 API Server ，负责接收由 Docker Client 发送的请求，接收到的请求将通过Docker daemon 内部的一个路由分发调度，由具体的函数来执行请求。</p><img src="https://i.loli.net/2019/11/23/ZGYmJg5eWIay9qf.jpg" width="700"></li></ul><p>  ​    运行过程的作用有以下几种可能：</p><ul><li>向 Docker Registry 获取镜像</li><li>通过 graphdriver 执行容器镜像的本地化操作</li><li>通过 networkdriver 执行容器网络环境的配置</li><li>通过 execdriver执行容器内部运行的执行工作</li></ul><p>​           默认配置下， Docker daemon 只能响应来自本地 Host 的客户端请求。如果要允许远程客户端请求，需要</p><p>​           在配置文件中打开 TCP 监听。我们可以照着如下步骤进行配置：</p><p>​           1、编辑配置文件 /etc/systemd/system/multi-user.target.wants/docker.service ，在环境变量 ExecStart</p><p>​           后面添加 -H tcp://0.0.0.0，允许来自任意 IP 的客户端连接。</p><p>​            <font color="red">centos7下编辑配置文件？？？</font></p><p>​            2、重启 Docker daemon</p><p>​           <code>systemctl daemon-reload</code></p><p>​           <code>systemctl restart docker.service</code></p><p>​            3、 实现与远程服务器通信 </p><p>​           <code>docker -H 服务器IP地址 info</code></p><p>​           -H 是用来指定服务器主机， info 子命令用于查看 Docker 服务器的信息</p><ul><li><strong>Docker Image</strong> </li></ul><p>​         Docker 镜像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，</p><p>​         还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，  </p><p>​         其内容在构建之后也不会被改变。我们可将 Docker 镜像看成只读模板，通过它可以创建 Docker 容器。</p><p>​         镜像有多种生成方式：1.从无到有创建镜像；2.下载并使用别人现成的镜像；3.在镜像上创建镜像</p><p>​         我们可以将镜像的内容和创建步骤描述在一个文本文件中，这个文件被称作 Dockerfile，通过执行 </p><p>​          docker build 命令可以构建出 Docker 镜像 。</p><ul><li><strong>Docker Registry</strong> </li></ul><p>​        存储 docker image 的仓库，</p><ul><li><strong>Docker Container</strong> </li></ul><p>​        Docker 容器就是 Docker 镜像的运行实例，是真正运行项目程序、消耗系统资源、提供服务的地方。 </p><p>​        Docker   Container 提供了系统硬件环境，我们可以使用 Docker Images 这些制作好的系统盘，再加上我们</p><p>​        所编写好的项目代码， run 一下就可以提供服务。</p><h1 id="Docker组件运作"><a href="#Docker组件运作" class="headerlink" title="Docker组件运作"></a>Docker组件运作</h1><img src="https://i.loli.net/2019/11/23/vz5lLI681pdSkj3.jpg" width="700"><p>运作流程如下：</p><p>1.Docker 客户端执行 docker run 命令<br>2.Docker daemon 发现本地没有我们需要的镜像<br>3.daemon 从 Docker Hub 下载镜像<br>4.下载完成后，镜像被保存到本地<br>5.Docker daemon 启动容器</p><h1 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h1><img src="https://i.loli.net/2019/11/24/1LXJBOZVNC3y4Ia.png" width="700"><p>拉去一个镜像</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">pull</span> <span class="selector-tag">image_name</span>                                    <span class="selector-id">#image_name</span> 为镜像的名称</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">pull</span> <span class="selector-tag">centos</span><span class="selector-pseudo">:latest</span>                                 <span class="selector-id">#centos</span><span class="selector-pseudo">:lastest</span> 是镜像的名称</span><br></pre></td></tr></table></figure><p>查看主机有多少镜像</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">image</span></span><br></pre></td></tr></table></figure><p>查看哪些容器在运行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker ps -a</span></span><br></pre></td></tr></table></figure><p> 对一个容器进行启动，重启和停止 </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="literal">start</span> container_name/container_id</span><br><span class="line">docker restart container_name/container_id</span><br><span class="line">docker <span class="literal">stop</span> container_name/container_id</span><br></pre></td></tr></table></figure><p> 进入到这个容器 </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">attach</span> container_name/container_id</span><br></pre></td></tr></table></figure><p> 运行这个容器中的镜像，并且调用镜像里面的 bash</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> -t -i container_name/container_id /bin/bash</span></span><br></pre></td></tr></table></figure><p> 删除指定容器</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -<span class="keyword">a</span></span><br><span class="line">docker <span class="built_in">stop</span> container_name/container_id</span><br><span class="line"></span><br><span class="line">docker rm container_name/container_id</span><br></pre></td></tr></table></figure><p>删除指定镜像</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> rmi image_name</span><br></pre></td></tr></table></figure><p>更多命令：</p><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><p>Dockerfile 是自动构建 docker 镜像的配置文件， 用户可以使用 Dockerfile 快速创建自定义的镜像。Dockerfile 中的命令非常类似于 linux 下的 shell 命令。</p><p>Docker 镜像、容器和 Dockerfile 三者之间的关系 ：</p><img src="https://i.loli.net/2019/11/24/zxXwbFal8RdE1Yr.jpg" width="700"><p>上图中可以看到， Dockerfile可以自定义镜像，通过 Docker 命令去运行镜像，从而达到启动容器的目的。</p><p>Dockerfile 是由一行行命令语句组成，并且支持已 <code>#</code> 开头的注释行。</p><p><strong>可以将 Dockerfile 分为四个部分：</strong></p><ul><li>基础镜像(父镜像)信息指令 <code>FROM</code></li><li>维护者信息指令 <code>MAINTAINER</code></li><li>镜像操作指令 <code>RUN</code> 、 <code>EVN</code> 、 <code>ADD</code> 和 <code>WORKDIR</code> 等</li><li>容器启动指令 <code>CMD</code> 、 <code>ENTRYPOINT</code> 和 <code>USER</code> 等</li></ul><p>例子：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">2.7</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> Angel_Kitty &lt;angelkitty6698@gmail.com&gt;</span><br><span class="line"><span class="comment">#copy 当前目录到容器中的 /app 目录下 复制本地主机的 &lt;src&gt; (Dockerfile所在目录的相对路径)到容器里 &lt;dest&gt;</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . /app</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install -r requirements.txt</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">5000</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"python"</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"app.py"</span>]</span></span><br></pre></td></tr></table></figure><p>命令解析：<br><strong>FROM</strong><br>FROM 是用于指定基础的 images ，一般格式为 FROM <image> or FORM <image>:<tag> ，所有的 Dockerfile 都用该以 FROM 开头，FROM 命令指明 Dockerfile 所创建的镜像文件以什么镜像为基础，FROM 以后的所有指令都会在 FROM 的基础上进行创建镜像。</tag></image></image></p><p><strong>MAINTAINER</strong></p><p>是用于指定镜像创建者和联系方式，一般格式为 MAINTAINER <name> 。</name></p><p><strong>COPY</strong></p><p>COPY 是用于复制本地主机的 <src> (为 Dockerfile 所在目录的相对路径)到容器中的 <dest>。</dest></src></p><p>当使用本地目录为源目录时，推荐使用 COPY 。一般格式为 COPY <src><dest> 。例如我们要拷贝当前目录到容器中的 /app 目录下，我们可以这样操作：</dest></src></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="bash"> . /app</span></span><br></pre></td></tr></table></figure><p> <strong>WORKDIR</strong></p><p>WORKDIR 用于配合 RUN，CMD，ENTRYPOINT 命令设置当前工作路径。可以设置多次，如果是相对路径，则相对前一个 WORKDIR 命令。默认路径为/。一般格式为 WORKDIR /path/to/work/dir 。例如我们设置/app 路径，我们可以进行如下操作：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br></pre></td></tr></table></figure><p><strong>run</strong></p><p>RUN 用于容器内部执行命令。每个 RUN 命令相当于在原有的镜像基础上添加了一个改动层，原有的镜像不会有变化。一般格式为 RUN <command> 。例如我们要安装 python 依赖包，我们做法如下：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install -r requirements.txt</span></span><br></pre></td></tr></table></figure><p> <strong>EXPOSE</strong></p><p>EXPOSE 命令用来指定对外开放的端口。一般格式为 EXPOSE <port> [<port>…]</port></port></p><p>例如上面那个例子，开放5000端口：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPOSE</span> <span class="number">5000</span></span><br></pre></td></tr></table></figure><p> <strong>ENTRYPOINT</strong></p><p>ENTRYPOINT 可以让你的容器表现得像一个可执行程序一样。一个 Dockerfile 中只能有一个 ENTRYPOINT，如果有多个，则最后一个生效。</p><p>ENTRYPOINT 命令也有两种格式：</p><pre><code>ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;] ：推荐使用的 exec形式ENTRYPOINT command param1 param2 ：shell 形式</code></pre><p> <strong>CMD</strong> </p><p>CMD 命令用于启动容器时默认执行的命令，CMD 命令可以包含可执行文件，也可以不包含可执行文件。不包含可执行文件的情况下就要用 ENTRYPOINT 指定一个，然后 CMD 命令的参数就会作为ENTRYPOINT的参数。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"executable"</span>,<span class="string">"param1"</span>,<span class="string">"param2"</span>]：推荐使用的 <span class="built_in">exec</span> 形式。</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"param1"</span>,<span class="string">"param2"</span>]：无可执行程序形式</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">command</span> param1 param2：shell 形式。</span></span><br></pre></td></tr></table></figure><p>一个 Dockerfile 中只能有一个CMD，如果有多个，则最后一个生效。而 CMD 的 shell 形式默认调用 /bin/sh -c 执行命令。CMD 命令会被 Docker 命令行传入的参数覆盖：docker run busybox /bin/echo Hello Docker 会把 CMD 里的命令覆盖。</p><p>例如我们要启动 /app ，我们可以用如下命令实现：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"app.py"</span>]</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/12/30/WUK6T2BSguXdewM.jpg" style="zoom:100%;"><p>参考博客：</p><p><a href="https://blog.csdn.net/deng624796905/article/details/86493330" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/deng624796905/article/details/86493330</a></p><p><a href="https://blog.csdn.net/u011781521/article/details/80469804" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/u011781521/article/details/80469804</a></p><p>​     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Docker" scheme="https://www.iamzmj.top/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://www.iamzmj.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Win10下IE浏览器图标无法删除的解决办法</title>
    <link href="https://www.iamzmj.top/posts/ed3f23a1.html"/>
    <id>https://www.iamzmj.top/posts/ed3f23a1.html</id>
    <published>2019-11-08T15:00:58.000Z</published>
    <updated>2019-12-29T09:43:06.767Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><p>为自学MySQL,在Win10电脑上安装SQLyog软件，安装完毕时突然发现电脑桌面自动添加了IE浏览器的图标，而且该图标无法直接右键删除。 我去【控制面板】-【程序卸载】里面也没有找到安装IE浏览器（之前一直没有遇到过这种情况） ，那该如何是好呢？通过百度后，我将相关的解决办法记录与此，以便日后出现同类问题可以及时的解决。 </p><img src="https://i.loli.net/2019/11/08/hHfRi4lUWrJc7Lx.jpg" width="400"><p>Win+R,输入“regedit”,进入注册表编辑器,</p><p>进入如下目录</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\H</span>KEY_LOCAL_MACHINE<span class="symbol">\S</span>OFTWARE<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indows<span class="symbol">\C</span>urrentVersion<span class="symbol">\E</span>xplorer<span class="symbol">\D</span>esktop<span class="symbol">\N</span>ameSpace</span><br></pre></td></tr></table></figure><p>找到{00010203-0001-0305-102938475600}字典目录  </p><p>删除{00010203-0001-0305-102938475600}字典目录  </p><p> 这时再返回电脑桌面，发现原先的IE图标已经被删除，问题成功解决！ </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Windows" scheme="https://www.iamzmj.top/categories/Windows/"/>
    
    
      <category term="IE浏览器" scheme="https://www.iamzmj.top/tags/IE%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="系统优化" scheme="https://www.iamzmj.top/tags/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记二：DQL查询语言</title>
    <link href="https://www.iamzmj.top/posts/2a4d6fbc.html"/>
    <id>https://www.iamzmj.top/posts/2a4d6fbc.html</id>
    <published>2019-11-08T06:40:21.000Z</published>
    <updated>2019-12-03T00:23:40.563Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://i.loli.net/2019/11/17/P23yRM6DmGA54tT.png" width="800"><img src="https://i.loli.net/2019/11/17/8NbygLtE35pADJU.png" width="800"><img src="https://i.loli.net/2019/12/03/5fPzqSBduaAFNbM.png" width="800"><img src="https://i.loli.net/2019/12/03/mPaepydEOiSs7WI.png" width="800"><img src="https://i.loli.net/2019/12/03/blKQZI8kfjSROLy.png" width="800"><img src="https://i.loli.net/2019/12/03/gZrRLMEThfyYClq.png" width="800"><img src="https://i.loli.net/2019/12/03/6qVkX8UQDdFZrAw.png" width="800"><h1 id="MySQL-DQL查询语言"><a href="#MySQL-DQL查询语言" class="headerlink" title="MySQL-DQL查询语言"></a>MySQL-DQL查询语言</h1><script type="text/javascript" src="/js/src/bai.js"></script><p>将参考用数据库 <a href="https://www.lanzous.com/i78v5yf" rel="external nofollow noopener noreferrer" target="_blank">myemployees.sql</a>添加至图形化用户界面客户端</p><h2 id="MySQL常见命令"><a href="#MySQL常见命令" class="headerlink" title="MySQL常见命令"></a>MySQL常见命令</h2><p>1、查看当前所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><p>2、打开指定数据库</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> 库名</span><br></pre></td></tr></table></figure><p>3、查看当前库的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p>4、查看其它库的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span> <span class="keyword">from</span> 库名;`</span><br></pre></td></tr></table></figure><p>5、创建一个表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line"></span><br><span class="line">   列名     列类型,</span><br><span class="line">   列名     列类型,</span><br><span class="line">    <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>.</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>6、查看表结构</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> 表名</span><br></pre></td></tr></table></figure><p>5、查看服务器的版本</p><p>方式一：登录到mysqI服务端，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();</span><br></pre></td></tr></table></figure><p>方式二：未连接到mysql服务端</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">mysql</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">version</span> <span class="comment">或</span>  <span class="comment">mysql</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">V</span></span><br></pre></td></tr></table></figure><h2 id="MySQL语句规范"><a href="#MySQL语句规范" class="headerlink" title="MySQL语句规范"></a>MySQL语句规范</h2><ul><li>不区分大小写，但建议关键字大写，表名、列名小写</li><li>每条命令最好用分号结尾</li><li>每条命令根据需要，可以进行缩进或者换行</li><li>注释  <ul><li>单行注释：#注释文字</li><li>单行注释：–[空格]注释文字</li><li>多行注释</li></ul></li></ul><h3 id="基础查询语句（进阶一）"><a href="#基础查询语句（进阶一）" class="headerlink" title="基础查询语句（进阶一）"></a>基础查询语句（进阶一）</h3><p>语法：select 查询的列表 from 表名</p><ul><li><p>查询列表可以是：表中的字段、常量值、表达式、函数</p></li><li><p>查询的结果是一个虚拟的表格</p></li></ul><blockquote><p><strong>1、查询字段</strong></p></blockquote><p>查询表中的单个字段</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> last_name <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><p>查询表中多个字段</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> last_name, salary, email <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><p>查询表中所有字段</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><blockquote><p><strong>2、查询常量值</strong></p></blockquote><p>注意:字符型和日期型的常量值必须用单引号引起来，数值型不需要</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">100</span></span><br><span class="line"><span class="keyword">select</span> <span class="symbol">'john</span>'</span><br></pre></td></tr></table></figure><blockquote><p><strong>3、查询表达式</strong></p></blockquote><p>注意：不支持++、–等运算方式</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="number">100</span>*<span class="number">98</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>4、查询函数</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();</span><br></pre></td></tr></table></figure><blockquote><p><strong>5、为字段起别名</strong></p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">100</span>*<span class="number">98</span> <span class="keyword">as</span> 结果</span><br><span class="line"><span class="keyword">select</span> last_name <span class="keyword">as</span> 姓,first_name <span class="keyword">as</span> 名 <span class="keyword">from</span> employees</span><br><span class="line"><span class="number">2</span>、空格</span><br><span class="line"><span class="keyword">select</span> last_name 姓,first_name 名 <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><ul><li>便于理解</li><li>如果要查询字段有重名，使用别名可以区分开来</li><li>如果别名中有特殊符号，建议别名上加双引号。</li></ul><blockquote><p><strong>6、为字段去重</strong></p></blockquote><p>select distinct 字段名 from 表名；</p><p>案列：查询员工表中涉及到的所有部门编号</p><p>语句中需添加 <code>DISTINCT</code></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">DISTINCT</span> department_id <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><blockquote><p><strong>7、+号的作用</strong></p></blockquote><p>+仅仅只有加法运算功能</p><ul><li>select 90+199；两个操作数均为数值型，则做加法运算</li><li>如果有其中一方为字符型，，试图将字符型数值转换成数值型<ul><li>select ‘123’+100; 如果转换成功，则继续做加法运算</li><li>select ‘john’+90 ; 如果转换失败，则将字符型数值转换成0</li><li>select ‘null’+100; 只要其中一方为null，则结果肯定是null</li><li></li></ul></li></ul><blockquote><p><strong>8、contact 函数</strong></p></blockquote><p>起到拼接字符的功能</p><p>案列：查询员工名和姓连接成一个字段，并显示为 姓名</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(last_name,first_name) <span class="keyword">as</span> 姓名 <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><blockquote><p>9、【补充】ifunll函数</p></blockquote><p>判断某字段或表达式是否为unll,如果是返回指定值，否则返回原本值。</p><blockquote><p>10、【补充】isunll函数</p></blockquote><p>判断某字段或表达式是否为unll,如果是返回1，否则返回0。</p><h3 id="条件查询语句（进阶二）"><a href="#条件查询语句（进阶二）" class="headerlink" title="条件查询语句（进阶二）"></a>条件查询语句（进阶二）</h3><p>语法：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">          查询列表</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">          表名</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">          删选条件</span><br></pre></td></tr></table></figure><p>分类：</p><ul><li><p>按条件表达式删选：&gt;  &lt;  !=  &lt;&gt;  &gt;=  &lt;=</p></li><li><p>按逻辑表达式删选：and or not</p><ul><li>&amp;&amp; 和 and  两个条件都为true，结果为true，反之为flase</li><li>|| 和 or      两个条件有一个为true，结果为true，反之为flase</li><li>! 和not        如果链接的条件本身为flase，结果为true，反之为flase</li></ul></li><li><p>模糊查询：like、between、 in、 is null</p></li></ul><blockquote><p><strong>按条件表达式删选</strong></p></blockquote><p>案例1：查询工资&gt;12000的员工的信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> salary &gt;<span class="number">12000</span></span><br></pre></td></tr></table></figure><p>案例2：查询部门编号不等于90号的员工名和部门编号</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">       last_name,</span><br><span class="line">       department_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">       employees</span><br><span class="line">       </span><br><span class="line"><span class="keyword">WHERE</span>  </span><br><span class="line">       department_id&lt;&gt;<span class="number">90</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>按逻辑表达式删选</strong></p></blockquote><p>案例1：工资在1万到2万之间的员工名、工资、奖金信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">salary&gt;=<span class="number">10000</span> <span class="keyword">AND</span> salary&lt;=<span class="number">20000</span></span><br></pre></td></tr></table></figure><p>案例2：查询部门编号不在90到110之间，或者薪水高于15000的员工信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">NOT</span>(department_id&gt;=<span class="number">90</span> <span class="keyword">AND</span> department_id&lt;=<span class="number">110</span>) <span class="keyword">OR</span> salary&gt;<span class="number">15000</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>模糊查询删选</strong></p></blockquote><p>1</p><p>2</p><p>3</p><p>4</p><p><strong>is null</strong>  </p><ul><li>=或者,&gt;不能用于判断null值</li><li>is null或is not null可以</li></ul><p>案例1：查询没有奖金的员工名和奖金率</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure><p>案例2：查询工资为12000的员工信息    使用 <code>&lt;=&gt;</code>  安全等于</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">salary &lt;=&gt; <span class="number">12000</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>is null 仅仅可以判断 null值，可读性较高，建议使用。</p></li><li><p>&lt;=&gt;      既可以判断null值，又可以判断普通数量，可读性较低。</p></li></ul><p>综合案列1:查询没有奖金，且工资小于18000的salary/last_name</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">AND</span> salary &lt; <span class="number">18000</span>;</span><br></pre></td></tr></table></figure><p>综合案例2：查询employees表中，job_id不为 ‘IT’ 或者 工资为12000的员工信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">job_id &lt;&gt; <span class="string">'IT'</span></span><br><span class="line"><span class="keyword">OR</span> salary = <span class="number">12000</span>;</span><br></pre></td></tr></table></figure><p>综合案例3：查看departments表的结构</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">DESC departments</span></span><br></pre></td></tr></table></figure><p>综合案例4： 查看部门中涉及到那些位置编号   （关键是去重）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> location_id <span class="keyword">FROM</span> departments;</span><br></pre></td></tr></table></figure><h3 id="排序查询语句（进阶三）"><a href="#排序查询语句（进阶三）" class="headerlink" title="排序查询语句（进阶三）"></a>排序查询语句（进阶三）</h3><p>语法：select 查询列表 </p><p>​           from 表名 </p><p>​           where 【筛选条件】</p><p>​           oder by 排序列表【asc | desc】</p><p>  特点：</p><ul><li><p>desc 降序，asc升序   不写的话默认升序</p></li><li><p>order by 子句可以支持单个字段，多个字段、表达式、函数、别名</p></li><li><p>order by 子句一般放在查询语句的最后面，limit子句除外。</p></li></ul><p>案例1：查询员工工资，从高到底排序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询部门编号大于等于90的员工信息。按入职时间先后进行排序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">department_id&gt;=<span class="number">90</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> hiredate <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><p>案例3：【按表达式排序】按年薪的高低显示员工的信息和年薪</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*,</span><br><span class="line">salary*<span class="number">12</span>*(<span class="number">1</span>+<span class="built_in">IFNULL</span>(commission_pct,<span class="number">0</span>)) <span class="keyword">AS</span> 年薪</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 年薪 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例4：按姓名的长度显示员工的姓名和工资【按函数排序】</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">LENGTH</span>(last_name) 字节长度,</span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 字节长度 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例5：查询员工信息，先按工资排序升序，再按员工编号排序降序【按多个字段排序】</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">ASC</span>,department_id <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="常见函数学习（进阶四）"><a href="#常见函数学习（进阶四）" class="headerlink" title="常见函数学习（进阶四）"></a>常见函数学习（进阶四）</h3><p>将一组逻辑语句封装在方法体中，对外暴露方法名</p><p>好处1：隐藏实现细节 2、提高代码重用性</p><p>调用：select 函数名(实参列表) 【from 表】</p><p>特点：</p><ul><li>叫什么（函数名）</li><li>干什么的（函数功能）</li></ul><p>分类</p><ul><li>单行函数<ul><li>字符函数、数学函数、日期函数、其他函数、流程控制函数，</li></ul></li><li>分组函数<ul><li>统计函数、聚合函数等</li></ul></li></ul><p>单行函数</p><blockquote><h5 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a><strong>字符函数</strong></h5></blockquote><p>1、length</p><p>获取参数值的字节数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="string">'jhon'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="string">'张三丰hahaha'</span>);</span><br></pre></td></tr></table></figure><p>2、concat 拼接/连接 字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(last_name,<span class="string">'_'</span>,first_name) 姓名 <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>3、upper、lower    大写/小写</p><p>案例：将姓变大写，名变小写,然后拼接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="keyword">UPPER</span>(last_name),<span class="keyword">LOWER</span>(first_name)) 姓名 <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>4、substr/substring 截取字符长度</p><p>注意：截取从1开始</p><ul><li>截取从指定索引处后面的所有字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'占敏捷爱上谢菲'</span>,<span class="number">6</span>) 输出结果;</span><br></pre></td></tr></table></figure><ul><li>截取从指定索引处指定字符长度的字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'占敏捷爱上谢菲hahhahah'</span>,<span class="number">4</span>,<span class="number">2</span>) 输出结果;</span><br></pre></td></tr></table></figure><p>案例1：姓名中首字母大写，其它字母小写，然后用_拼接</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT CONCAT(<span class="name">UPPER</span>(<span class="name">SUBSTR</span>(<span class="name">last_name</span>,<span class="number">1</span>,<span class="number">1</span>)),'_',LOWER(<span class="name">SUBSTR</span>(<span class="name">last_name</span>,<span class="number">2</span>)))FROM employees<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>5、instr</p><p>返回子串第<font color="red">一次</font>出现的索引,如果找不到返回0。</p><p>6、trim</p><p>去前后空格</p><p>7、lpad  左填充</p><p>用指定的字符实现左填充指定长度</p><p>8、rpad 右填充</p><p>用指定的字符实现右填充指定长度</p><p>9、replace 全部替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(<span class="string">'张无忌爱上了周芷若'</span>,<span class="string">'周芷若'</span>,<span class="string">'赵敏'</span>) 输出;</span><br></pre></td></tr></table></figure><blockquote><h5 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a><strong>数学函数</strong></h5></blockquote><p>1、ronud    四舍五入</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ROUND</span>(<span class="number">-1.55</span>);          -2</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ROUND</span>(<span class="number">-1.45</span>);          -1</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ROUND</span>(<span class="number">-1.45678</span>,<span class="number">2</span>);     -1.46    四舍五入，并保留小数点后2位</span><br></pre></td></tr></table></figure><p>2.ceil  向上取整</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEIL</span>(<span class="number">1.02</span>);             2       返回》=该参数的最小整数</span><br></pre></td></tr></table></figure><p>3.floor 向下取整</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">9.99</span>);            9</span><br></pre></td></tr></table></figure><p>4、truncate   截断</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT TRUNCATE(<span class="number">1.2345678</span>,<span class="number">2</span>);  <span class="number">1.23</span></span><br></pre></td></tr></table></figure><p>5、mod 取余</p><p>mod(a,b)：a-a/b*b</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT MOD(<span class="number">10</span>,<span class="number">3</span>);               <span class="number">1</span></span><br><span class="line">SELECT <span class="number">10</span>%<span class="number">3</span>                     <span class="number">1</span></span><br></pre></td></tr></table></figure><p>6、rand 获取随机数，返回0-1之间的小数</p><blockquote><h5 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a><strong>日期函数</strong></h5></blockquote><p>1、now/year/date/month/hour</p><p>返回当前系统日期+时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>();</span><br></pre></td></tr></table></figure><p>2、curdate</p><p>返回当前系统日期，不返回时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURDATE</span>();</span><br></pre></td></tr></table></figure><p>3、curtime</p><p>返回当前系统时间，不返回日期</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURTIME</span>();</span><br></pre></td></tr></table></figure><p>可以获取指定部分。年、月、日、小时、分钟、秒</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="keyword">NOW</span>()) 年;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(<span class="keyword">NOW</span>()) 月;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> MONTHNAME(<span class="keyword">NOW</span>()) 月;           November</span><br></pre></td></tr></table></figure><p>4、str_to_data** 将字符通过指定的格式转换成日期</p><p>案例：</p><p>5、date_format 将日期转换成字符</p><p>案例：查询有奖金的员工名和入职日期（格式：xx年/xx月 xx年）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line"><span class="keyword">DATE_FORMAT</span>(hiredate,<span class="string">'%m月/%d日 %y年'</span>) 入职日期</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> NUL</span><br></pre></td></tr></table></figure><ul><li>相关格式符：</li></ul><img src="https://i.loli.net/2019/11/10/cIP3kDleQzswfan.jpg" width="500"><p>6、datediff、返回两个日期间的天数</p><p>7、monthname、以英文形式返回</p><blockquote><h5 id="其它函数"><a href="#其它函数" class="headerlink" title="其它函数"></a><strong>其它函数</strong></h5></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASES</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">PASSWORD</span>();</span><br></pre></td></tr></table></figure><blockquote><h5 id="流程控制函数"><a href="#流程控制函数" class="headerlink" title="流程控制函数"></a>流程控制函数</h5></blockquote><p>用于实现一些流程控制的</p><p>1、if函数 ：if else 的效果</p><p>if（条件表达式，表达式1，表达式2）:如果条件表达式成立，返回表达式1，否则返回表达式2；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">last_name,</span><br><span class="line">commission_pct,<span class="keyword">IF</span>(commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span>,<span class="string">'没奖金，呵呵'</span>,<span class="string">'有奖金，嘻嘻'</span>) 备注；</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br></pre></td></tr></table></figure><p>2、case函数</p><p><strong>case 使用语法一：</strong></p><p>语法如下：</p><p>case 变量或表达式或字段</p><p>when 常量1 then 值1</p><p>when 常量2 then 值2</p><p>……</p><p>else  值n</p><p>end</p><p>案例1：  查询员工工资，部门号=30.显示工资为1.1倍；部门号为40，显示工资为1.2倍；部门号=50，显示工资为1.3倍；其它的部门显示的工资为原来工资。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">salary 原始工资,</span><br><span class="line">department_id,</span><br><span class="line"><span class="keyword">CASE</span> department_id</span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">30</span> <span class="keyword">THEN</span> salary*<span class="number">1.1</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">40</span> <span class="keyword">THEN</span> salary*<span class="number">1.2</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">50</span> <span class="keyword">THEN</span> salary*<span class="number">1.3</span></span><br><span class="line"><span class="keyword">ELSE</span> salary</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 新工资</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p><strong>case 使用方法二：</strong></p><p>语法如下：</p><p>case</p><p>when 条件1 then 值1</p><p>when 条件2 then 值2</p><p>……</p><p>else 值n</p><p>end</p><p>案例：查询员工的工资情况，如果大于20000，显示A级别；如果工资大于15000，显示A级别，如果工资大于10000，显示C级别，否则显示D级别</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">20000</span> <span class="keyword">THEN</span> <span class="string">'A'</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">15000</span> <span class="keyword">THEN</span> <span class="string">'B'</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">10000</span> <span class="keyword">THEN</span> <span class="string">'c'</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'D'</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 工资级别</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例 1：显示系统时间（注意：日期+时间）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>();</span><br></pre></td></tr></table></figure><p>综合案例 2：查询员工号，姓名，工资，以及工资提高20%后的结果（new salary）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">employee_id,last_name,salary,salary*<span class="number">1.2</span> <span class="keyword">AS</span> <span class="string">'new aslary'</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例 3：将员工的姓名按首字母排序，并写出姓名长度</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name 姓名,<span class="built_in">LENGTH</span>(last_name) 姓名长度,<span class="built_in">SUBSTR</span>(last_name,<span class="number">1</span>,<span class="number">1</span>) 首字母</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 首字母;</span><br></pre></td></tr></table></figure><p>综合案例 4：做一个查询，产生下面的结果</p><p><salary_name> earns <salary> monthly but wants &lt;salary*3&gt;</salary></salary_name></p><p>Dream salary </p><p>King earns 24000 monthly but wants 72000</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(last_name,<span class="string">'earns'</span>,salary,<span class="string">'monthly but wants'</span>,salary*<span class="number">3</span>) <span class="keyword">AS</span> <span class="string">"Dream alary"</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">salary=<span class="number">24000</span>;</span><br></pre></td></tr></table></figure><p>综合案例 5：使用case-when  按照下面的条件：</p><p>job                        qrade</p><p>AD_PRES                 A</p><p>ST_MAN                  B</p><p>IT_PROG                  C</p><p>SA_PRE                    D</p><p>IT_CLEAR                 E</p><p>产生下面的结果</p><p>last_name     job_id    Grade    </p><p>King    AD_PRES   A</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id <span class="keyword">AS</span> job,</span><br><span class="line"><span class="keyword">CASE</span> job_id</span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'AD_PRES'</span> <span class="keyword">THEN</span> <span class="string">'A'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'ST_MAN'</span> <span class="keyword">THEN</span><span class="string">'B'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'IT_PROG'</span> <span class="keyword">THEN</span> <span class="string">'C'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'SA_PRE'</span> <span class="keyword">THEN</span> <span class="string">'D'</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'IT_CLEAR'</span> <span class="keyword">THEN</span> <span class="string">'E'</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> Grade</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = <span class="string">'AD_PRES'</span></span><br></pre></td></tr></table></figure><p>分组函数</p><p>分组函数其功能：用作统计使用，又称为聚合函数或统计函数或组函数</p><p>分类包括：sum求和、avg平均值、max最大值、min最小值、count计算个数</p><p>语法：select max（字段）from 表名；</p><ul><li>简单使用方法：</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="built_in">SUM</span>(salary) 求和,</span><br><span class="line"><span class="built_in">AVG</span>(salary) 平均值,</span><br><span class="line"><span class="built_in">MIN</span>(salary) 最小值,</span><br><span class="line"><span class="built_in">MAX</span>(salary) 最大值,</span><br><span class="line"><span class="built_in">COUNT</span>(salary) 计数值 </span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><ul><li><p>参数支持哪些类型</p><p>sum、avg 一般处理数值型</p></li></ul><p>​       max、min、count  可以处理任何类型</p><ul><li><p>是否忽略null</p><p>sum、avg、max、min、count 都忽略null值。</p></li><li><p>可以和distinct搭配</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="keyword">DISTINCT</span> salary),<span class="built_in">SUM</span>(salary) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure></li><li><p>count 函数详细介绍</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(字段) <span class="keyword">FROM</span> employees;   统计该字段非空值的个数</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(*) <span class="keyword">FROM</span> employees;     统计结果集的行数</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>一般推荐<code>COUNT(*)</code> 来进行统计使</p></li></ul><ul><li>和分组函数一同查询的字段有限制，要求是group by 后的字段</li></ul><p>综合案例1：查询公司员工工资的最大值，最小值，平均值及总和</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="built_in">MAX</span>(salary) 工资最大值,</span><br><span class="line"><span class="built_in">MIN</span>(salary) 工资最小值,</span><br><span class="line"><span class="built_in">AVG</span>(salary) 工资平均值,</span><br><span class="line"><span class="built_in">SUM</span>(salary) 工资总和 </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例2：查询员工中的最大入职时间和最小入职时间的相差天数（DIFFRENCR）</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT DATEDIFF(<span class="name">MAX</span>(<span class="name">hiredate</span>),MIN(<span class="name">hiredate</span>)) DIFFRENCE </span><br><span class="line">FROM employees<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>综合案例3：查询部门编号为90的员工个数</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">department_id=<span class="number">90</span>;</span><br></pre></td></tr></table></figure><h3 id="分组查询语句（进阶五）"><a href="#分组查询语句（进阶五）" class="headerlink" title="分组查询语句（进阶五）"></a>分组查询语句（进阶五）</h3><p>语法：</p><p>select 分组函数，列名（要求出现在group by 的后面）</p><p>from 表名</p><p>【where 筛选条件】</p><p>group by 分组的列名</p><p>【order by子句】</p><p>注意：</p><ul><li><p>查询列表必须特殊，要求是分组函数和group by后出现的字段</p></li><li><p>group by 支持单个字段查询，也支持多个字段查询（多字段之间用用逗号隔开，没有先后顺序之分）</p></li><li><p>也可插入排序语句，放在整个分组查询语句的最后</p></li></ul><p>分组分类</p><p>1.分组前查询          原始表                               group by 之前</p><p>2.分组后查询          分组后的结果集                group by 之后</p><p>能用分组前删选的，尽量用分组前查询。</p><blockquote><p> 简单分组查询</p></blockquote><p>案例1：查询每个工种的最高工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MAX(salary),job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">GROUP BY job_id;</span><br></pre></td></tr></table></figure><p>案例2：查询每个位置上的部门个数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">COUNT(*),location_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line">GROUP BY location_id;</span><br></pre></td></tr></table></figure><blockquote><p>添加删选条件的分组查询</p></blockquote><p>1、添加分组前删选</p><p>案例1：查询邮箱中包含a字符的，每个部门的平均工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">email <span class="keyword">LIKE</span> <span class="string">'%a%'</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br></pre></td></tr></table></figure><p>案例2：查询有奖金的  每个领导手下员工的最高工工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MAX(salary),manager_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">WHERE</span><br><span class="line">commission_pct IS <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">GROUP BY manager_id;</span><br></pre></td></tr></table></figure><p>2、添加分组后删选</p><p>案例1：查询哪个部门的员工个数大于2</p><p>思路：先查询每个部门的员工个数—再查询大于2个员工的部门</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">COUNT<span class="comment">(*),department_id</span></span><br><span class="line"><span class="comment">FROM</span></span><br><span class="line"><span class="comment">employees</span></span><br><span class="line"><span class="comment">GROUP BY department_id</span></span><br><span class="line"><span class="comment">HAVING COUNT(*)</span>&gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询每个工种有奖金的员工的最高工资大于12000的工种编号和最高工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MAX(salary),job_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">commission_pct IS <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">GROUP BY job_id</span><br><span class="line">HAVING MAX(salary)&gt;12000;</span><br></pre></td></tr></table></figure><p>案例3：查询领导编号大于102的每个领导手下最低工资大于5000的领导编号</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MIN(salary),manager_id  </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">manager_id&gt;102</span><br><span class="line">GROUP BY manager_id</span><br><span class="line">HAVING MIN(salary)&gt;5000;</span><br></pre></td></tr></table></figure><p>2.1、按表达式或函数分组</p><p>案例4：按员工姓名长度分组，查询每一组员工的个数，删选员工个数大于5的有哪些</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">COUNT<span class="comment">(*),LENGTH(last_name) 姓名长度</span></span><br><span class="line"><span class="comment">FROM</span></span><br><span class="line"><span class="comment">employees</span></span><br><span class="line"><span class="comment">GROUP BY LENGTH(last_name)</span></span><br><span class="line"><span class="comment">HAVING COUNT(*)</span>&gt;<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>2.2、按多个字段分组</p><p>查询每个部门每个工种的员工的平均工资</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">AVG(salary),department_id,job_id</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line">GROUP BY department_id,job_id;</span><br></pre></td></tr></table></figure><p>2.3、添加排序</p><p>查询每个部门每个工种的员工的平均工资，并按照工资从高到底排序</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">AVG(salary),department_id,job_id</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees</span><br><span class="line">GROUP BY department_id,job_id</span><br><span class="line">ORDER BY AVG(salary) DESC;</span><br></pre></td></tr></table></figure><p>综合案例1：查询员工最高工资和最低工资的差距（DIFFERENCE）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">MAX</span>(salary)-<span class="built_in">MIN</span>(salary) DIFFRENCE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees;</span><br></pre></td></tr></table></figure><p>综合案例2：查询各个管理者手下员工的最低工资，其中最低工资不能低于6000，没有管理者的员工不计算在内</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">MIN(salary),manager_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">WHERE manager_id IS <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">GROUP BY manager_id</span><br><span class="line">HAVING MIN(salary)&gt;=6000;</span><br></pre></td></tr></table></figure><p>案例3：查询所有部门的编号，员工数量和工资平均值，并按平均工资降序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">department_id 部门编号,<span class="built_in">COUNT</span>(*) 员工数量,<span class="built_in">ROUND</span>(<span class="built_in">AVG</span>(salary),<span class="number">2</span> )平均工资</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 平均工资 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案例4：选择具有各个job_id的员工人数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">COUNT(*),job_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line">GROUP BY job_id</span><br></pre></td></tr></table></figure><h3 id="连接查询语句（进阶六）"><a href="#连接查询语句（进阶六）" class="headerlink" title="连接查询语句（进阶六）"></a>连接查询语句（进阶六）</h3><p>当查询中涉及到多个表的字段，需要使用多表连接</p><p>select 字段1，字段2</p><p>from 表1，表2，……..</p><p><font color="red">笛卡尔乘积现象</font>：表1 有m行，表2有n行，结果=m*n行,发生这个原因是由于没有有效的链接条件，要想避免该现象，只要添加有效的链接条件即可。</p><p>连接查询分类：</p><ul><li><p>按年代分类：</p><p>sql92 连接查询   </p><ul><li>等值</li><li>非等值</li><li>自连接</li></ul><p>sql99 连接查询   （<font color="red">推荐使用</font>）</p><ul><li><p>内连接</p><ul><li>等值</li><li>非等值</li><li>自连接</li></ul></li><li><p>外连接</p><ul><li>左外</li><li>右外</li><li>全外（MySQL不支持）</li></ul></li><li><p>交叉连接</p></li></ul></li></ul><h4 id="SQL92语法"><a href="#SQL92语法" class="headerlink" title="SQL92语法"></a>SQL92语法</h4><p>1、等值连接</p><p>语法：</p><p>select 查询列表</p><p>from 表1 别名，表2 别名</p><p>where  表1.key=表2.key   （等值连接条件）</p><p>【AND 删选条件】</p><p>【groub by 分组字段】</p><p>【having 分组后的删选】</p><p>【order by 排序】</p><p>注意事项：</p><ul><li><p>多表的顺序没有要求</p></li><li><p>一般需要为表起别名</p></li><li><p>可以搭配前面介绍的所有查询语句</p></li><li><p>n表连接，至少需要n-1个连接条件</p></li><li><p>多表等值连接的结果为多表的交集部分</p></li></ul><p>案例1：查询女神名对应的男神名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span>,boyname <span class="keyword">FROM</span> boys,beauty</span><br><span class="line"><span class="keyword">WHERE</span> beauty.boyfriend_id=boys.id ;</span><br></pre></td></tr></table></figure><p>案例2：查询员工名和对应的部门名</p><p>1.2、为表起别名，提高语句简洁度/区分多个重名的字段。</p><ul><li>如果为表起别名，则查询的字段就不能使用原来的表名</li></ul><p>案例1：查询员工名，工种号、工种名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.last_name,d.job_id,s.job_title</span><br><span class="line"><span class="keyword">FROM</span> employees d,jobs s</span><br><span class="line"><span class="keyword">WHERE</span> d.job_id=s.job_id;</span><br></pre></td></tr></table></figure><p>1.3、可以加删选</p><p>案例1：查询有奖金的员工名、部门名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">e</span>.last_name,d.department_name,commission_pct</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.department_id=d.department_id</span><br><span class="line"><span class="keyword">AND</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询城市名中第二个字符为O的对应的部门名和城市名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,city</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations f</span><br><span class="line"><span class="keyword">WHERE</span> d.location_id=f.location_id</span><br><span class="line"><span class="keyword">AND</span> city <span class="keyword">LIKE</span> <span class="string">'_o%'</span>;</span><br></pre></td></tr></table></figure><p>1.4、加分组</p><p>案例1：查询每个城市的部门个数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*),city</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations l</span><br><span class="line">WHERE d.<span class="attribute">location_id</span>=l.`location_id`</span><br><span class="line">GROUP BY city;</span><br></pre></td></tr></table></figure><p>案例2：查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary),f.manager_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees d,departments f</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="symbol">`department_id`</span>=f.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name,f.manager_id;</span><br></pre></td></tr></table></figure><p>1.5、加排序</p><p>案例1：查询每个工种的工种名和员工个数，并且按员工个数降序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> job_title,<span class="built_in">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> employees d,jobs f</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="symbol">`job_id`</span>=f.<span class="symbol">`job_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_title</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(*) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>1.6 实现三表连接</p><p>案例1：查询员工名 部门名 所在城市</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,city</span><br><span class="line"><span class="keyword">FROM</span> employees d,departments m,locations s</span><br><span class="line"><span class="keyword">WHERE</span> d.department_id=m.department_id</span><br><span class="line"><span class="keyword">AND</span> m.<span class="symbol">`location_id`</span>=s.<span class="symbol">`location_id`</span></span><br></pre></td></tr></table></figure><p>2、非等值连接</p><p>语法：</p><p>select 查询列表</p><p>from 表1 别名，表2 别名</p><p>where  非等值的连接条件</p><p>【AND 删选条件】</p><p>【groub by 分组字段】</p><p>【having 分组后的删选】</p><p>【order by 排序】</p><p>案例1：查询出员工 的工资和工资级别</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,job_grades f</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="keyword">BETWEEN</span> f.lowest_sal <span class="keyword">AND</span> f.highest_sal;</span><br></pre></td></tr></table></figure><p>3.自连接</p><p>语法：</p><p>select 查询列表</p><p>from 表 别名1，表 别名2</p><p>where  非等值的连接条件</p><p>【AND 删选条件】</p><p>【groub by 分组字段】</p><p>【having 分组后的删选】</p><p>【order by 排序】</p><p>综合案例1：显示员工表的最大工资，工资平均值</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary),<span class="built_in">AVG</span>(salary) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>综合案例2：查询员工表的employee_id,job_id,last_name,按department_id降序，salary升序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,job_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_id <span class="keyword">DESC</span>,salary <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><p>综合案例3：查询员工表的job_id中包含a和e 的，并且a 在 e前面</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id </span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="keyword">LIKE</span> <span class="string">'%a%e%'</span>;</span><br></pre></td></tr></table></figure><p>综合案例4：</p><p>已知表student,里面有id（学号），name ， gradeID（年级编号）</p><p>已知表grade，里面有id（年级编号） ,name（年级名）</p><p>已知表result，里面有id ，score，studentNo（学号）</p><p>要求查询姓名、年级名、成绩</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT <span class="selector-tag">a</span><span class="selector-class">.name</span> <span class="selector-tag">b</span><span class="selector-class">.name</span> score</span><br><span class="line">FROM student <span class="selector-tag">a</span>,grade <span class="selector-tag">b</span>,result c</span><br><span class="line">WHERE <span class="selector-tag">a</span>.id=c.studentNo</span><br><span class="line">AND <span class="selector-tag">a</span>.gradeID=<span class="selector-tag">b</span>.id</span><br></pre></td></tr></table></figure><p>综合案例5：显示所有员工的姓名，部门号和部门名称</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">USE myemployees;</span><br><span class="line"><span class="keyword">SELECT</span> last_name,d.department_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span>;</span><br></pre></td></tr></table></figure><p>综合案例6：查询90号部门员工的job_id和90号部门的location_id；</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> job_id,location_id</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> <span class="built_in">e</span>.department_id=<span class="number">90</span>;</span><br></pre></td></tr></table></figure><p>综合案例7：选择所有奖金员工的last_name，department_name,location_id,city</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,s.location_id,city</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d,locations s</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> d.<span class="symbol">`location_id`</span>=s.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">AND</span> <span class="built_in">e</span>.commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p>综合案例8：选择city在Toroto工作的员工的last_name,department_id,department_name</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,<span class="built_in">e</span>.department_id,department_name,f.city</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span>,departments d,locations f</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> d.<span class="symbol">`location_id`</span>=f.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">AND</span> f.<span class="symbol">`city`</span>=<span class="string">'Toronto'</span></span><br></pre></td></tr></table></figure><p>综合案例9：查询每个工种、每个部门的部门名、工种名和最低工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,job_title,<span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> departments d,jobs j,employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="symbol">`department_id`</span>=<span class="built_in">e</span>.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> j.job_id<span class="symbol">`=e.`</span>job_id<span class="symbol">`</span></span><br><span class="line"><span class="symbol">group by department_name,job_title</span></span><br></pre></td></tr></table></figure><p>综合案例10：查询每个国家下的部门个数大于2的国家编号 第77课时</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT country_id,COUNT(*)</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations s</span><br><span class="line">WHERE d.<span class="attribute">location_id</span>=s.location_id</span><br><span class="line">GROUP BY country_id</span><br><span class="line">HAVING COUNT(*)&gt;2</span><br></pre></td></tr></table></figure><h4 id="SQL99语法"><a href="#SQL99语法" class="headerlink" title="SQL99语法"></a>SQL99语法</h4><p>语法：</p><p>select 查询列表</p><p>from 表1 别名 </p><p>【连接类型】jion   表2 别名 </p><p>on 连接条件</p><p>【where 筛选条件】</p><p>【group by 分组】</p><p>【having 筛选条件】</p><p>【order by 排序条件】</p><p>分类</p><p>内连接：inner</p><p>外连接</p><ul><li>左外：left  【outer】</li><li>右外:   right  【outer】</li><li>全外： full  【outer】</li></ul><p>交叉连接</p><p>1.内连接</p><p>语法：</p><p>select 查询列表</p><p>from 表1 别名 </p><p>inner join   表2 别名 </p><p>on 连接条件；</p><p>分类：</p><ul><li>等值</li><li>非等值</li><li>自连接</li></ul><p>特点：</p><ul><li>可添加排序、分组、筛选</li><li>筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读</li><li>inner 可以省略</li><li>inner join连接和sql92语法中的等值连接效果是一样的，查询表的交集部分</li></ul><p>1.1、等值连接</p><p>案例1：查询员工名，部门名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments b</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=b.<span class="symbol">`department_id`</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询名字中包含e的员工名和工种名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs b</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`job_id`</span>=b.<span class="symbol">`job_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%e%'</span>;</span><br></pre></td></tr></table></figure><p>案例3：查询部门个数&gt;3的城市名和部门个数</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> city,<span class="built_in">COUNT</span>(*) 部门个数</span><br><span class="line"><span class="keyword">FROM</span> locations l</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> l.<span class="symbol">`location_id`</span>=d.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(*)&gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>案例4：查询哪个部门的部门员工数》3的部门名和员工个数，并按个数降序排列。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,<span class="built_in">COUNT</span>(*) 员工数</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">ON</span> d.<span class="symbol">`department_id`</span>=<span class="built_in">e</span>.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name</span><br><span class="line"><span class="keyword">HAVING</span> 员工数 &gt;=<span class="number">3</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 员工数 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>案列5：查询员工名、部门名、工种名，并按部门名降序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`department_id`</span>=d.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j <span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`job_id`</span>=j.<span class="symbol">`job_id`</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_name <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><p>1.2、非等值连接</p><p>案例1：查询员工的工资级别</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">JOIN</span> job_grades j</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.salary <span class="keyword">BETWEEN</span> j.lowest_sal <span class="keyword">AND</span> j.highest_sal;</span><br></pre></td></tr></table></figure><p>案例2：查询工资级别的个数&gt;20的个数，并且按工资级别降序排序</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(*) 工资级别个数,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">JOIN</span> job_grades j</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.salary <span class="keyword">BETWEEN</span> j.lowest_sal <span class="keyword">AND</span> j.highest_sal</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> grade_level</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(*)&gt;<span class="number">20</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(*) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>1.3、自连接</p><p>案例1：查询姓名中包含K的员工的名字、上级名字</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">e</span>.last_name 员工名,d.last_name 上级名</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees d</span><br><span class="line"><span class="keyword">ON</span> <span class="built_in">e</span>.manager_id=d.employee_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.last_name <span class="keyword">LIKE</span> <span class="string">'%k%'</span>;</span><br></pre></td></tr></table></figure><p>1.4、左（右）外连接</p><p>应用场景：用于查询一个表中有，另一个表中没有的记录</p><p>特点：</p><p>1、外连接的查询结果为主表中的所有记录</p><ul><li>如果从表中有和它匹配的，则显示匹配的值</li><li>如果从表中没有和他匹配的，则显示null</li><li>外连接查询结果=内连接结果+主表中有而从表中没有的记录</li></ul><p>2、左外连接 left join 左边的是主表/右外连接 right join 右边是主表</p><p>3、左外和右外如果交换两表的顺序，可以实现同样的效果</p><p>案例1：查询没有男朋友的女神名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.name,d.*</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> boys d</span><br><span class="line"><span class="keyword">ON</span> b.<span class="symbol">`boyfriend_id`</span>=d.<span class="symbol">`id`</span></span><br></pre></td></tr></table></figure><p>案例2：查询哪个部门没有员工</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.*,<span class="built_in">e</span>.employee_id</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">ON</span> d.department_id = <span class="built_in">e</span>.department_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">e</span>.employee_id <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure><p>1.5 全外连接</p><p>全外连接=内连接的结果+表1有表2没有的+表2有表1没有的</p><p>不支持</p><p>1.6、交叉连接</p><p>SQL99 语句图形示意：</p><img src="https://i.loli.net/2019/11/13/A3UkPWzL9adbMyE.jpg" width="600"><img src="https://i.loli.net/2019/11/13/dFU9eMA6VEIJRKQ.jpg" width="600"><p>综合案例1：查询编号&gt;3的女神的男朋友信息，如果有则列出详细，如果没有就用null填充</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.id,b.name,bo.*</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> boys bo</span><br><span class="line"><span class="keyword">ON</span> b.<span class="symbol">`boyfriend_id`</span>=bo.<span class="symbol">`id`</span></span><br><span class="line"><span class="keyword">WHERE</span> b.id &gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>综合案例2：查询哪个城市没有部门？</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">左外连接</span><br><span class="line"><span class="keyword">SELECT</span> city,s.*</span><br><span class="line"><span class="keyword">FROM</span> departments s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> locations l</span><br><span class="line"><span class="keyword">ON</span> s.<span class="symbol">`location_id`</span>=l.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> s.department_id <span class="keyword">IS</span> <span class="literal">NULL</span>；</span><br><span class="line"></span><br><span class="line">右外连接</span><br><span class="line"><span class="keyword">SELECT</span> city,s.*</span><br><span class="line"><span class="keyword">FROM</span> locations l</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> departments s</span><br><span class="line"><span class="keyword">ON</span> s.<span class="symbol">`location_id`</span>=l.<span class="symbol">`location_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> s.department_id <span class="keyword">IS</span> <span class="literal">NULL</span>；</span><br></pre></td></tr></table></figure><p>综合案例3：</p><p>查询部门名为SAL或IT的员工信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.department_name,<span class="built_in">e</span>.*</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees <span class="built_in">e</span></span><br><span class="line"><span class="keyword">ON</span> d.<span class="symbol">`department_id`</span>=<span class="built_in">e</span>.<span class="symbol">`department_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> d.department_name <span class="keyword">IN</span>(<span class="string">'SAL'</span>,<span class="string">'IT'</span>)</span><br></pre></td></tr></table></figure><h3 id="子查询语句（进阶七）"><a href="#子查询语句（进阶七）" class="headerlink" title="子查询语句（进阶七）"></a>子查询语句（进阶七）</h3><p>出现在其它语句中的select语句，称为子查询或内查询</p><p>外部的查询语句，称为主查询或外查询</p><p>分类：</p><p>按出现的位置分类：</p><ul><li>select后面   仅仅支持标量子查询</li><li>from后面   支持表子查询</li><li><font color="red">where或having</font>后面   <font color="red">标量子查询、列子查询</font>&gt;、行子查询</li><li>exists后面  表查询</li></ul><p>按结果集的行列数不同：</p><ul><li>标量子查询（结果集只有一行一列）</li><li>列子查询（结果集只有一列多行）</li><li>行子查询（结果集只有一行多列）</li><li>表子查询（结果集一般为多行多列）</li></ul><p>1、where和having后面</p><ul><li>标量子查询（单行子查询）<ul><li>一般搭配单行操作符使用 </li></ul></li><li>列子查询（多行子查询）<ul><li>一般搭配多单行操作符使用  in、any/some、all</li></ul></li><li>行子查询（多列多行）</li></ul><p>特点：</p><ul><li>子查询放在小括号内</li><li>子查询一般放在条件的右侧</li><li>标量子查询，一般搭配单行操作符使用</li><li>子查询的执行优先与主查询执行</li></ul><p><strong>1.1where后面的标量子查询</strong></p><p>案例1查询谁的工资比Albel的工资高</p><p>思路：1.查询Albel的工资——2.查询员工的信息，满足salary&gt;1的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary&gt;(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name = <span class="string">"Abel"</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例2：返回job_id与141号员工相同，salary比143号员工多的员工姓名，job_id 和工资</p><p>思路：1.查询 与141号员工相同的job_id——2.查询143号员工的工资——3查询员工姓名，job_id 和工资，满足1结果且工资大于2结果</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id=<span class="number">141</span></span><br><span class="line"></span><br><span class="line">)<span class="keyword">AND</span> salary&gt;(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id=<span class="number">143</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例三：返回公司工资最少的员工的last_name,job_id和salary<br>$$</p><p>$$</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例4：查询最低工资大于50号部门最低工资的部门id和其最低工资</p><p>思路 :1、查询50号部门的最低工资——2、查询所有部门的最低工资——3、在2结果的基础上筛选 满足最低工资大于1结果</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT MIN(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line">GROUP BY department_id</span><br><span class="line">HAVING MIN(salary)&gt;(</span><br><span class="line"></span><br><span class="line">SELECT MIN(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line">WHERE <span class="attribute">department_id</span>=50</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>1.2where后面的列子查询（多行子查询）</strong></p><p>in/not in    (等于列表中的任意一个值)</p><p><del>any|some   （和子查询返回的某一个值比较）</del>   推荐用 <font color="red">a&gt;min()</font>代替a&gt;any() </p><p><del>all  （和子查询返回的所有值比较）</del>  推荐用 <font color="red">a&gt;max()</font>代替a&gt;any() </p><p>案例1：返回location_id 是1400或者1700的部门中所有员工的姓名</p><p>思路：1：查询location_id是1400或1700的部门编号—2：查询满足1结果的员工姓名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IN</span>(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="keyword">IN</span>(<span class="number">1400</span>,<span class="number">1700</span>)</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>案例2：返回其他部门中比job_id为’IT_PROG’部门任一工资低的员工的：工号、姓名、job_id,以及salary.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary &lt;<span class="keyword">ANY</span>(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id=<span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">)<span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span></span><br></pre></td></tr></table></figure><p>案例3：返回其他部门中比job_id为’IT_PROG’部门所有工资低的员工的：工号、姓名、job_id,以及salary.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary &lt;(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">min</span>(msalary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id=<span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">)<span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span></span><br></pre></td></tr></table></figure><p><strong>1.3where后面的行子查询</strong>（结果集一行多列或多行多列）</p><p>案例：查询员工编号最小且工资最高的员工信息</p><p>方法1：之前的语法</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(employee_id)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">)</span><br><span class="line"><span class="keyword">AND</span> salary=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>1.4 select后面</strong></p><p>案例1：查询每个部门的员工个数</p><p><font color="red">90~95级  重学</font>&gt;</p><p><strong>综合案列讲解：</strong></p><p>1.查询工资最低的员工信息：last_name  salary</p><p>思路1：查询最低工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(salary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure><p>思路2：查询满足1的 last_name salary</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> last_name,salary</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> salary=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(salary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>2.查询平均工资最低的部门信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> department_id=(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>3.查询平均工工资最低的部门信息和该部门的平均工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.*,ag</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span>(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ag</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">)ag_dep</span><br><span class="line"><span class="keyword">ON</span> d.<span class="symbol">`department_id`</span>=ag_dep.department_id</span><br></pre></td></tr></table></figure><p>4.查询平均工资最高的job信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> jobs</span><br><span class="line"><span class="keyword">WHERE</span> job_id=(</span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>5.查询平均工资高于公司平均工资的部门有哪些？</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.department_name </span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> (</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) dvg,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">AVG</span>(salary)&gt;(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) <span class="keyword">FROM</span> employees)</span><br><span class="line"></span><br><span class="line">) dvg_dep</span><br><span class="line"><span class="keyword">ON</span> d.department_id=dvg_dep.department_id</span><br></pre></td></tr></table></figure><p>6.各个部门中最高工资中最低的那个部门的最低工资是多少</p><p>7.查询平均工资最高的部门的manager的详细信息：last_name,depatment_id,email,salary</p><p>6.查询出公司中所以有manager的详细信息</p><p>所有manager的员工编号</p><h3 id="分页查询语句（进阶八）"><a href="#分页查询语句（进阶八）" class="headerlink" title="分页查询语句（进阶八）"></a>分页查询语句（进阶八）</h3><p>应用场景：当我们要显示的数据一页显示不全，我们就要分页提交sql请求。</p><p>语法：</p><p>select 查询列表</p><p>from 表</p><p>【join type】join 表2</p><p>on 连接条件</p><p>where 删选条件</p><p>group by 分组字段</p><p>having 分组后的删选</p><p>order by 排序的字段</p><p>limit offset, size;</p><p>其中：</p><ul><li>offset：要显示条目的起始索引，从0开始,。从0开始offset可省略 </li><li>size：要显示的条目个数;</li></ul><p>特点：</p><ul><li><p>limit语句在查询语句的最后，在执行顺序中也是最后一步。</p></li><li><p>公式</p><p>要显示的页数 page, 每页的条目数size</p><p>select 查询列表</p><p>from 表</p><p>limit （page-1）*size，size</p></li><li><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">size</span>=10</span><br><span class="line"></span><br><span class="line">page</span><br><span class="line">1        0</span><br><span class="line">2       10</span><br><span class="line">3       20</span><br></pre></td></tr></table></figure></li></ul><p>案例1：查询前五条员工信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>案例2：查询第1条—第25条</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">10</span>,<span class="number">15</span>;</span><br></pre></td></tr></table></figure><p>案例3：有奖金的员工信息，并且工资较高的前10名显示出来</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> <span class="keyword">LIMIT</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p><strong>综合案例讲解：</strong></p><p>已知表 stuinfo</p><p>id 学号</p><p>name 姓名</p><p>email 邮箱</p><p>grade id 年级编号</p><p>sex 性别  男  女</p><p>age 年龄</p><p>已知表 grade </p><p>id 年级编号</p><p>gradeName 年级名称</p><p>答题1：查询所有学员的邮箱用户名（注：邮箱中@前面的字符）</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select  substr(<span class="section">email</span>,<span class="number">1</span>,instr(<span class="section">email</span>,‘@‘)<span class="number">-1</span>)  用户名</span><br><span class="line"></span><br><span class="line">from stuinfo</span><br></pre></td></tr></table></figure><p>注：</p><p> instr(field, str) 函数，第一个参数 field 是字段，第二个参数 str 是要查询的串，返回串 str 的位置，没找到就是0 </p><p>答题2：查询男生和女生的个数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select count（*）个数，sex</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> stuinfo </span><br><span class="line"></span><br><span class="line">group by  sex;</span><br></pre></td></tr></table></figure><p>答题3：查询年龄大于18岁的所有学生的姓名和年级名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.name,g.gradeName</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> stuinfo s</span><br><span class="line"></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> grade g <span class="keyword">on</span> s.grade <span class="keyword">id</span>=g.id</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> age&gt;<span class="number">18</span>;</span><br></pre></td></tr></table></figure><p>答题4：查询哪个年级的学生最小年龄&gt;20岁</p><p>思路1：查询每个年级学生的最小年龄数  2:在一的基础上删选</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select min(age),grade id</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> stuinfo</span><br><span class="line"></span><br><span class="line">group by grade id</span><br><span class="line"></span><br><span class="line">having min(age)&gt;20;</span><br></pre></td></tr></table></figure><p>答题5：试说出查询语句中涉及到的所有关键字，及执行先后顺序</p><p>select  查询的列表                        7</p><p>from 表 1                                       1</p><p>链接类型 join 表2                          2</p><p>on 连接条件                                   3</p><p>where 删选条件                            4</p><p>group by 分组条件                       5</p><p>having  分组后的删选条件           6</p><p>order by 排序条件                        8</p><p>limit 偏移条目数                           9</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="MySQL" scheme="https://www.iamzmj.top/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.iamzmj.top/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://www.iamzmj.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记一：MySQL8.0安装及启动</title>
    <link href="https://www.iamzmj.top/posts/ca03e1e5.html"/>
    <id>https://www.iamzmj.top/posts/ca03e1e5.html</id>
    <published>2019-11-06T08:33:37.000Z</published>
    <updated>2019-11-19T18:01:20.020Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="MySQL介绍"><a href="#MySQL介绍" class="headerlink" title="MySQL介绍"></a>MySQL介绍</h1><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>其特点在于：开源、免费、成本低；性能高、移随性好；体积小、便于安装。</p><p>目前MySQL已推出8.0版本。</p><img src="https://i.loli.net/2019/11/08/3gFNO8EjiYBSHMz.jpg" width="500" height="高度" align="center"><h1 id="数据库概念"><a href="#数据库概念" class="headerlink" title="数据库概念"></a>数据库概念</h1><p><strong>1、数据库好处</strong></p><p>可以持久化数据到本地</p><p>结构化查询</p><p><strong>2、数据库常见概念</strong></p><p><strong>DB</strong> (Data Base)，存储数据的仓库</p><p><strong>DBMS</strong> (Data Base Management System)  数据库管理系统，DB是通过DBMS创建和操作的容器。</p><p><strong>SQL</strong>（Strucure Query Language）结构化查询语言，专门用来同数据库通信的语言。</p><p>其特点：</p><ul><li>DBMS都支持SQL</li><li>简单易学</li><li>是一种强有力的语言。</li></ul><p><strong>3、MySQL存储数据的特点</strong></p><p>1、将数据放到表中，再将表放到数据库中。</p><p>2、一个数据库中可以有多个表，每个表都有一个名字，每张表具有唯一的表名，用来标识自己。</p><p>3、表具有一些特性，这些特性定义了数据在表中如何存储。</p><h1 id="Win10下安装MySQL8-0"><a href="#Win10下安装MySQL8-0" class="headerlink" title="Win10下安装MySQL8.0"></a>Win10下安装MySQL8.0</h1><h2 id="下载MySQL8-0"><a href="#下载MySQL8-0" class="headerlink" title="下载MySQL8.0"></a>下载<a href="https://dev.mysql.com/downloads/mysql/" rel="external nofollow noopener noreferrer" target="_blank">MySQL8.0</a></h2><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>Windows下安装数据库，将下载的的压缩包解压， 文件位于：C:\mysql-8.0.18-winx64</p><p>然后去配置环境变量，点击电脑-&gt;属性-&gt;高级系统配置-&gt;环境变量；先对系统变量进行设置 </p><img src="https://i.loli.net/2019/11/07/uLMYeVqdUDAOnJz.png" width="500" height="高度" align="center"><img src="https://i.loli.net/2019/11/07/A8uXO3FvPstGHe4.jpg" width="500" height="高度" align="center"><img src="https://i.loli.net/2019/11/07/tyXTJFYHqWxw8QK.jpg" width="500" height="高度" align="center"><h2 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h2><p>打开mysql-8.0.16-winx64文件，在当前目录下，新建一个名为my.ini的文件，然后打开该文件，将下列代码加入到该文件中； </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=C:\mysql-<span class="number">8.0</span>.<span class="number">18</span>-winx64</span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=C:\mysql-<span class="number">8.0</span>.<span class="number">18</span>-winx64\Database</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><h2 id="命令行登录"><a href="#命令行登录" class="headerlink" title="命令行登录"></a>命令行登录</h2><p>进入C:\mysql-8.0.18-winx64\bin 目录,以管理员身份打开CMD窗口，</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="symbol">\W</span>INDOWS<span class="symbol">\s</span>ystem32&gt;CD C:<span class="symbol">\m</span>ysql-8.0.18-winx64<span class="symbol">\b</span>in</span><br></pre></td></tr></table></figure><p> <strong>MySQL服务安装</strong>， 执行mysqld install命令当出现Service successfully installed时表示mysql服务安装完成 ，</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="comment">--install</span></span><br></pre></td></tr></table></figure><p>注意：mysqld –install [服务名]</p><p>后面的服务名可以不写，默认的名字为 mysql。当然，如果你的电脑上需要安装多个MySQL服务，就可以用不同的名字区分了，比如 mysql5 和 mysql8。</p><p><img src="https://i.loli.net/2019/11/20/7PKQDUm4EwN3yYx.jpg" alt></p><p> <strong>MySQL服初始化</strong>， 在MySQL安装目录的 bin 目录下执行命令： </p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">mysqld</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">initialize</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">console</span></span><br></pre></td></tr></table></figure><p> 执行完成后，会打印 root 用户的初始默认密码，比如： </p><img src="https://i.loli.net/2019/11/20/yV9DU6riTIexkAR.jpg" width="800"><p>注意！执行输出结果里面有一段： [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: Ng* jbnKGd2!其中root@localhost:后面的“Ng*jbnKGd2!”就是初始密码（不含首位空格）。在没有更改密码前，需要记住这个密码，后续登录需要用到。要是手贱，关快了，或者没记住，那也没事，删掉初始化的 datadir 目录，再执行一遍初始化命令，又会重新生成的。当然，也可以使用安全工具，强制改密码，用什么方法，自己随意。</p><p><strong>启动MySQL的服务</strong>，通过命令net start mysql启动</p><p>进入D:\Program Files\mysql-8.0.11-winx64\bin路径下，执行mysql -u root -p命令，然后输入之前保存的密码，我这里是Ng*jbnKGd2_! </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、<span class="selector-tag">cd</span> <span class="selector-tag">C</span>:\<span class="selector-tag">mysql-8</span><span class="selector-class">.0</span><span class="selector-class">.18-winx64</span>\<span class="selector-tag">bin</span></span><br><span class="line">2、<span class="selector-tag">mysql</span> <span class="selector-tag">-u</span> <span class="selector-tag">root</span> <span class="selector-tag">-p</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/07/FnWYrTy1NzDwbJa.jpg" width="800" height="高度" align="center"><p>至此数据库安装成功</p><h2 id="修改初始登陆密码："><a href="#修改初始登陆密码：" class="headerlink" title="修改初始登陆密码："></a>修改初始登陆密码：</h2><p> 修改用户密码，在MySQL中执行命令： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">'qq886991985'</span>;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2019/11/20/iQKk5Prn4j2DFMq.jpg" width="800" height="高度" align="center"><h1 id="Navicat-Premium-12-登录MySQL"><a href="#Navicat-Premium-12-登录MySQL" class="headerlink" title="Navicat Premium 12  登录MySQL"></a>Navicat Premium 12  登录MySQL</h1><p><a href="https://www.lanzous.com/i77rnkj" rel="external nofollow noopener noreferrer" target="_blank">Navicat Premium 12+注册机</a>  简单连接配置即可连接使用，使用界面如下：</p><img src="https://i.loli.net/2019/11/08/8gROWhnuQKBALmx.jpg" width="800" height="高度" align="center"><h1 id="服务的启动和停止"><a href="#服务的启动和停止" class="headerlink" title="服务的启动和停止"></a>服务的启动和停止</h1><p>方式一：net start 服务名 / net stop 服务名</p><p>方式二:   计算机—右击—管理—服务</p><h1 id="登录和退出"><a href="#登录和退出" class="headerlink" title="登录和退出"></a>登录和退出</h1><p>登录：MySQL  【-h 主机名 -p 端口号】-u 用户名 -p密码</p><p>退出：exit 或者 ctrl +C</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="MySQL" scheme="https://www.iamzmj.top/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.iamzmj.top/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://www.iamzmj.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
